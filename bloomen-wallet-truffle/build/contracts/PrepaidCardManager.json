{
  "contractName": "PrepaidCardManager",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "checkOwnership",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x04edae0f"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_dappId",
          "type": "string"
        },
        {
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x080e6887"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095bcdb6"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_deviceHash",
          "type": "bytes32"
        },
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        },
        {
          "name": "_lifeTime",
          "type": "uint256"
        },
        {
          "name": "_dappId",
          "type": "string"
        }
      ],
      "name": "handshake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x132c6aa4"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_deviceHash",
          "type": "bytes32"
        }
      ],
      "name": "removeDevice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x1d266200"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        },
        {
          "name": "_deviceHash",
          "type": "bytes32"
        }
      ],
      "name": "isAllowedForAddress",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x1d841899"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "theNumber",
          "type": "uint256"
        },
        {
          "name": "percentage",
          "type": "uint256"
        }
      ],
      "name": "calculatePercentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2133e3b9"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_deviceHash",
          "type": "bytes32"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x21f8a721"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "getSchema",
      "outputs": [
        {
          "components": [
            {
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "name": "schemaId",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "uint256"
            },
            {
              "name": "assetLifeTime",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "name": "percent",
                  "type": "uint256"
                },
                {
                  "name": "receptor",
                  "type": "address"
                },
                {
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "clearingHouseRules",
              "type": "tuple[]"
            },
            {
              "name": "valid",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2b26fb29"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x39509351"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "validateSchema",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x4014d468"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x40c10f19"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42966c68"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_deviceHash",
          "type": "bytes32"
        },
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        },
        {
          "name": "_lifeTime",
          "type": "uint256"
        },
        {
          "name": "_dappId",
          "type": "string"
        },
        {
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "handshake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42b4bed4"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAssetsPageCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4aa3bfeb"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x4f4ee353"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "invalidateSchema",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x5a16f5c4"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_page",
          "type": "uint256"
        }
      ],
      "name": "getDevices",
      "outputs": [
        {
          "components": [
            {
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "name": "assetId",
              "type": "uint256"
            },
            {
              "name": "schemaId",
              "type": "uint256"
            },
            {
              "name": "dappId",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6d9db7ed"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        },
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "checkOwnershipForAddress",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x700651aa"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_deviceHash",
          "type": "bytes32"
        }
      ],
      "name": "isAllowed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x78755295"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x79cc6790"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_dappId",
          "type": "string"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x7de3b0ed"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isSigner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x7df73e27"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSchemas",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95ba8d18"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x983b2d56"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x98650275"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_schemaId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "createSchema",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa2086dab"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa457c2d7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xaa271e1a"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDevicesPageCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc8c2eb66"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_page",
          "type": "uint256"
        }
      ],
      "name": "getAssets",
      "outputs": [
        {
          "components": [
            {
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "name": "assetId",
              "type": "uint256"
            },
            {
              "name": "schemaId",
              "type": "uint256"
            },
            {
              "name": "dappId",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xd9212164"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceSigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xe5c8b03d"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addSigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xeb12d61e"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "cardId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "user",
          "type": "address"
        }
      ],
      "name": "CardValidated",
      "type": "event",
      "signature": "0x80de5a7d3e27e32cfffc07551af7c9ee302a01b5456991722d7ef54193eab356"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event",
      "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event",
      "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SignerAdded",
      "type": "event",
      "signature": "0x47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f24"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SignerRemoved",
      "type": "event",
      "signature": "0x3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_cardId",
          "type": "uint256"
        }
      ],
      "name": "getCard",
      "outputs": [
        {
          "name": "cardId",
          "type": "uint256"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "tokens",
          "type": "uint256"
        },
        {
          "name": "active",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x9188d312"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cardId",
          "type": "uint256"
        },
        {
          "name": "_tokens",
          "type": "uint256"
        },
        {
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "addCard",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8a984385"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cardId",
          "type": "uint256"
        }
      ],
      "name": "activateCard",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x7e09ef42"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_secret",
          "type": "bytes"
        }
      ],
      "name": "validateCard",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xc1debea4"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"checkOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_dappId\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_deviceHash\",\"type\":\"bytes32\"},{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"},{\"name\":\"_lifeTime\",\"type\":\"uint256\"},{\"name\":\"_dappId\",\"type\":\"string\"}],\"name\":\"handshake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_deviceHash\",\"type\":\"bytes32\"}],\"name\":\"removeDevice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_deviceHash\",\"type\":\"bytes32\"}],\"name\":\"isAllowedForAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"theNumber\",\"type\":\"uint256\"},{\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"calculatePercentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_deviceHash\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"name\":\"schemaId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"assetLifeTime\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"percent\",\"type\":\"uint256\"},{\"name\":\"receptor\",\"type\":\"address\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"clearingHouseRules\",\"type\":\"tuple[]\"},{\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"validateSchema\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_deviceHash\",\"type\":\"bytes32\"},{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"},{\"name\":\"_lifeTime\",\"type\":\"uint256\"},{\"name\":\"_dappId\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"handshake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAssetsPageCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"invalidateSchema\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_page\",\"type\":\"uint256\"}],\"name\":\"getDevices\",\"outputs\":[{\"components\":[{\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"name\":\"assetId\",\"type\":\"uint256\"},{\"name\":\"schemaId\",\"type\":\"uint256\"},{\"name\":\"dappId\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"checkOwnershipForAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_deviceHash\",\"type\":\"bytes32\"}],\"name\":\"isAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_dappId\",\"type\":\"string\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"}],\"name\":\"activateCard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"},{\"name\":\"_tokens\",\"type\":\"uint256\"},{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"addCard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"}],\"name\":\"getCard\",\"outputs\":[{\"name\":\"cardId\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"active\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSchemas\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_schemaId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createSchema\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_secret\",\"type\":\"bytes\"}],\"name\":\"validateCard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDevicesPageCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_page\",\"type\":\"uint256\"}],\"name\":\"getAssets\",\"outputs\":[{\"components\":[{\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"name\":\"assetId\",\"type\":\"uint256\"},{\"name\":\"schemaId\",\"type\":\"uint256\"},{\"name\":\"dappId\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cardId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"}],\"name\":\"CardValidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"value\":\"The amount of token to be burned.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns a specific amount of tokens from the target address and decrements allowance\",\"params\":{\"from\":\"address The account whose tokens will be burned.\",\"value\":\"uint256 The amount of token to be burned.\"}},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"return\":\"the name of the token.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/PrepaidCardManager.sol\":\"PrepaidCardManager\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/Assets.sol\":{\"keccak256\":\"0x99f6af42a38d8f214bc053a04db2a79e50e69d418fab60d4551086b5399a7103\",\"urls\":[\"bzzr://e95745f08f42de29214257da6be247c2b8679a30c1794f95d789d50a292114cf\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/Devices.sol\":{\"keccak256\":\"0x9943440941ebea62e8abe42e0d5ba0f8e7d355ce0938825313097192604374ed\",\"urls\":[\"bzzr://c0f00cc4beba6a61a4428a9edf98617cc53fe718f24b2a117bac0a1b091179d3\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/PrepaidCardManager.sol\":{\"keccak256\":\"0x9f269601810d881114737170044af6154440edee1fd05daec0680558c0bb9c35\",\"urls\":[\"bzzr://a145130ab35820356d5ed5ba037d6d691782902a6f39ab26833ca1ec12d6397c\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/Schemas.sol\":{\"keccak256\":\"0xcc5ee7260e436e7ad30407e4a911bb5df881ed6f109298141fd7a83402702b0a\",\"urls\":[\"bzzr://76504c39d40940b0c06355821a02453678c5724ac9b2f432cf8d8086d667b75b\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/token/ERC223.sol\":{\"keccak256\":\"0x5f80b8736ff7cfe211161e8b4ceb76fac9232e2b0c652e5dfaf9b6d297f0ab3a\",\"urls\":[\"bzzr://afcc0b0c096ace5ab4b8d3a13229f7bbb55d109b8edc11c85c63356bedaf82b0\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/token/ERC223ReceivingContract.sol\":{\"keccak256\":\"0x858e34c11f744eb33192d41cce3f43dc1c4f4e4f8e2ff9273b7239fe1fd62e7e\",\"urls\":[\"bzzr://76acf0f63a80db66bb85e91101b6be3458e47ecf5665b0e87432d330621e8ed3\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/token/MovementHistory.sol\":{\"keccak256\":\"0x445ad42cedc97809ddb654e583e39382f0c53452e7d404e93d657c7295ec3c77\",\"urls\":[\"bzzr://0e77083825dc93f4c0bd52df258e0666051ff43fb1918e489b8d6eebec07bea2\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\",\"urls\":[\"bzzr://da472135eb9268d863825ea26e227a9f8980c54bd32e0764d61711acca59fc89\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x317b01d5df6753f57244b354d0a23d5055b293f3fa22693c2ff7906cc988ce97\",\"urls\":[\"bzzr://d3f08352c241a34db9b244c5fb569c7ffb3dcd1a0aa288c855a4a70eddb9e2a3\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol\":{\"keccak256\":\"0x6a7b3cc7605ccb056aa758efc05fe91c0100632b56d09bc6f558b431bb46d324\",\"urls\":[\"bzzr://dfa471b4c2a704eb9c403392254df9019b070a02113b80a5e74581a34fa7a447\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xcf6b3e804a9b1e3d6ca4a695524cbaa52cd26cc86978a2b99052ba1a5d25653f\",\"urls\":[\"bzzr://8f763f9e6a0cdf1b7f07be575b3d4011e18a672b1365e26634e03580761e6858\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xa60f7f7ce98ca2d75c8e02da982d3fe91176269fdab2589bbbb7cc65f2d7c9d3\",\"urls\":[\"bzzr://5edd2c9be304a1e8ed055e243daba5345f242008164f9a0565c33197b860323b\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xd7956aed5535d9563bef5482c6fc41894aed3352aab764b3397bbc33dc2de0ea\",\"urls\":[\"bzzr://77acda78fc09e0be0c1954db02a97bed0f211618be5153ad5aed0bc0cf13f778\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/solidity-rlp/contracts/RLPReader.sol\":{\"keccak256\":\"0x383e82e56641440097f7337c539796c75e3c28a487c0ade06f3b3ab50e99acb5\",\"urls\":[\"bzzr://e8aacff86f7d09a0b1153de0e32c9a3dfbe35ab1b56d843f6e5a63f9bce1a1a7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102f3576000357c010000000000000000000000000000000000000000000000000000000090048063715018a61161019f578063983b2d5611610106578063c1debea4116100bf578063dd62ed3e11610099578063dd62ed3e1461096d578063e5c8b03d1461099d578063eb12d61e146109a7578063f2fde38b146109c3576102f3565b8063c1debea414610903578063c8c2eb661461091f578063d92121641461093d576102f3565b8063983b2d5614610831578063986502751461084d578063a2086dab14610857578063a457c2d714610873578063a9059cbb146108a3578063aa271e1a146108d3576102f3565b80638a984385116101585780638a9843851461076a5780638da5cb5b146107865780638f32d59b146107a45780639188d312146107c257806395ba8d18146107f557806395d89b4114610813576102f3565b8063715018a6146106ac57806378755295146106b657806379cc6790146106e65780637de3b0ed146107025780637df73e271461071e5780637e09ef421461074e576102f3565b80632b26fb291161025e57806342b4bed4116102175780635a16f5c4116101f15780635a16f5c4146106005780636d9db7ed1461061c578063700651aa1461064c57806370a082311461067c576102f3565b806342b4bed4146105aa5780634aa3bfeb146105c65780634f4ee353146105e4576102f3565b80632b26fb29146104c4578063313ce567146104f457806339509351146105125780634014d4681461054257806340c10f191461055e57806342966c681461058e576102f3565b806318160ddd116102b057806318160ddd146103ca5780631d266200146103e85780631d841899146104045780632133e3b91461043457806321f8a7211461046457806323b872dd14610494576102f3565b806304edae0f146102f857806306fdde0314610328578063080e688714610346578063095bcdb614610362578063095ea7b31461037e578063132c6aa4146103ae575b600080fd5b610312600480360361030d9190810190614cec565b6109df565b60405161031f9190615900565b60405180910390f35b6103306109f4565b60405161033d919061591b565b60405180910390f35b610360600480360361035b9190810190614df2565b610a96565b005b61037c60048036036103779190810190614a6e565b610aab565b005b61039860048036036103939190810190614a32565b610ac7565b6040516103a59190615900565b60405180910390f35b6103c860048036036103c39190810190614ae6565b610ade565b005b6103d2610b03565b6040516103df9190615bdf565b60405180910390f35b61040260048036036103fd9190810190614abd565b610b0d565b005b61041e600480360361041991908101906149f6565b610b1a565b60405161042b9190615900565b60405180910390f35b61044e60048036036104499190810190614cec565b610b9c565b60405161045b9190615bdf565b60405180910390f35b61047e60048036036104799190810190614abd565b610bb3565b60405161048b9190615848565b60405180910390f35b6104ae60048036036104a991908101906149a7565b610c0a565b6040516104bb9190615900565b60405180910390f35b6104de60048036036104d99190810190614c6f565b610cbb565b6040516104eb9190615bbd565b60405180910390f35b6104fc610ee5565b6040516105099190615c3f565b60405180910390f35b61052c60048036036105279190810190614a32565b610efc565b6040516105399190615900565b60405180910390f35b61055c60048036036105579190810190614c6f565b610fa1565b005b61057860048036036105739190810190614a32565b610fc0565b6040516105859190615900565b60405180910390f35b6105a860048036036105a39190810190614c6f565b610fe8565b005b6105c460048036036105bf9190810190614b75565b610ff5565b005b6105ce61100c565b6040516105db9190615bdf565b60405180910390f35b6105fe60048036036105f99190810190614a6e565b611063565b005b61061a60048036036106159190810190614c6f565b61112b565b005b61063660048036036106319190810190614c6f565b61114a565b60405161064391906158bc565b60405180910390f35b61066660048036036106619190810190614a6e565b611478565b6040516106739190615900565b60405180910390f35b61069660048036036106919190810190614942565b61148e565b6040516106a39190615bdf565b60405180910390f35b6106b46114d7565b005b6106d060048036036106cb9190810190614abd565b6115a9565b6040516106dd9190615900565b60405180910390f35b61070060048036036106fb9190810190614a32565b611643565b005b61071c60048036036107179190810190614d77565b611651565b005b61073860048036036107339190810190614942565b611674565b6040516107459190615900565b60405180910390f35b61076860048036036107639190810190614c6f565b611691565b005b610784600480360361077f9190810190614d28565b61179a565b005b61078e6119ff565b60405161079b9190615848565b60405180910390f35b6107ac611a29565b6040516107b99190615900565b60405180910390f35b6107dc60048036036107d79190810190614c6f565b611a81565b6040516107ec9493929190615bfa565b60405180910390f35b6107fd611b7a565b60405161080a91906158de565b60405180910390f35b61081b611bd2565b604051610828919061591b565b60405180910390f35b61084b60048036036108469190810190614942565b611c74565b005b610855611c92565b005b610871600480360361086c9190810190614c98565b611c9d565b005b61088d60048036036108889190810190614a32565b611cbc565b60405161089a9190615900565b60405180910390f35b6108bd60048036036108b89190810190614a32565b611d61565b6040516108ca9190615900565b60405180910390f35b6108ed60048036036108e89190810190614942565b611d85565b6040516108fa9190615900565b60405180910390f35b61091d60048036036109189190810190614c2e565b611da2565b005b61092761202a565b6040516109349190615bdf565b60405180910390f35b61095760048036036109529190810190614c6f565b612081565b604051610964919061589a565b60405180910390f35b6109876004803603610982919081019061496b565b612359565b6040516109949190615bdf565b60405180910390f35b6109a56123e0565b005b6109c160048036036109bc9190810190614942565b6123eb565b005b6109dd60048036036109d89190810190614942565b612409565b005b60006109ec338484612426565b905092915050565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a8c5780601f10610a6157610100808354040283529160200191610a8c565b820191906000526020600020905b815481529060010190602001808311610a6f57829003601f168201915b5050505050905090565b610aa433868686868661269d565b5050505050565b610ab6338484612854565b610ac233848484612864565b505050565b6000610ad433848461296f565b6001905092915050565b610afc33868686868660405180602001604052806000815250612ace565b5050505050565b6000600654905090565b610b173382612e0f565b50565b6000808373ffffffffffffffffffffffffffffffffffffffff16600d600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610b905750610b8f836115a9565b5b90508091505092915050565b6000606482840281610baa57fe5b04905092915050565b600080610bbf836115a9565b905060008115610c0057600d600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b8092505050919050565b6000610c17848484612854565b610cb08433610cab85600560008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546131f990919063ffffffff16565b61296f565b600190509392505050565b610cc36145d6565b6000600260008481526020019081526020016000206001015411610d1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d13906159dd565b60405180910390fd5b600260008381526020019081526020016000206040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610ebb5783829060005260206000209060030201604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ea35780601f10610e7857610100808354040283529160200191610ea3565b820191906000526020600020905b815481529060010190602001808311610e8657829003601f168201915b50505050508152505081526020019060010190610d87565b5050505081526020016005820160009054906101000a900460ff1615151515815250509050919050565b6000600960009054906101000a900460ff16905090565b6000610f973384610f9285600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461321990919063ffffffff16565b61296f565b6001905092915050565b610fa9611a29565b610fb257600080fd5b610fbd816001613238565b50565b6000610fcb33611d85565b610fd457600080fd5b610fde838361332e565b6001905092915050565b610ff23382613482565b50565b61100433878787878787612ace565b505050505050565b6000600a600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805490508161105d57fe5b04905090565b61106b6145d6565b61107482610cbb565b9050600083905060008090505b6001836080015151038110156110f45760006110b886856080015184815181106110a757fe5b602002602001015160000151610b9c565b90506110e1846080015183815181106110cd57fe5b602002602001015160200151826000610aab565b8083039250508080600101915050611081565b5061112482608001516001846080015151038151811061111057fe5b602002602001015160200151826000610aab565b5050505050565b611133611a29565b61113c57600080fd5b611147816000613238565b50565b606080600a60405190808252806020026020018201604052801561118857816020015b61117561460e565b81526020019060019003908161116d5790505b5090506000600a84600a020390506060600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561122457602002820191906000526020600020905b815481526020019060010190808311611210575b5050505050905060008151148061123e5750600181510382115b1561125157606080945050505050611473565b60008090505b85600a0283101561146b57815183101561145657600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008385815181106112bb57fe5b602002602001015181526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113935780601f1061136857610100808354040283529160200191611393565b820191906000526020600020905b81548152906001019060200180831161137657829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114355780601f1061140a57610100808354040283529160200191611435565b820191906000526020600020905b81548152906001019060200180831161141857829003601f168201915b50505050508152505084828151811061144a57fe5b60200260200101819052505b80806001019150508280600101935050611257565b839450505050505b919050565b6000611485848484612426565b90509392505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6114df611a29565b6114e857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008042600c6000600d600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008581526020019081526020016000206000015411905080915050919050565b61164d82826135d6565b5050565b61166e33858585856040518060200160405280600081525061269d565b50505050565b600061168a82600061367d90919063ffffffff16565b9050919050565b806000600e600083815260200190815260200160002060040154116116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e2906159dd565b60405180910390fd5b6116f433611674565b6116fd57600080fd5b60001515600e600084815260200190815260200160002060030160009054906101000a900460ff16151514611767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175e90615b9d565b60405180910390fd5b6001600e600084815260200190815260200160002060030160006101000a81548160ff0219169083151502179055505050565b6117a2611a29565b6117ab57600080fd5b600082116117ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e590615b3d565b60405180910390fd5b60008311611831576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118289061595d565b60405180910390fd5b6000600e6000858152602001908152602001600020600401541461188a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188190615add565b60405180910390fd5b6000600f600083815260200190815260200160002054146118e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d79061593d565b60405180910390fd5b6118ea308361332e565b6118f261463d565b6040518060c001604052808381526020018581526020018481526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016001815250905080600e600086815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816004015590505083600f60008481526020019081526020016000208190555050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600080600080846000600e60008381526020019081526020016000206004015411611ae1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad8906159dd565b60405180910390fd5b600e600087815260200190815260200160002060010154600e600088815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e600089815260200190815260200160002060020154600e60008a815260200190815260200160002060030160009054906101000a900460ff169450945094509450509193509193565b60606003805480602002602001604051908101604052809291908181526020018280548015611bc857602002820191906000526020600020905b815481526020019060010190808311611bb4575b5050505050905090565b606060088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c6a5780601f10611c3f57610100808354040283529160200191611c6a565b820191906000526020600020905b815481529060010190602001808311611c4d57829003601f168201915b5050505050905090565b611c7d33611d85565b611c8657600080fd5b611c8f8161370f565b50565b611c9b33613769565b565b611ca5611a29565b611cae57600080fd5b611cb882826137c3565b5050565b6000611d573384611d5285600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546131f990919063ffffffff16565b61296f565b6001905092915050565b6000611d6e338484612854565b611d7b3384846000612864565b6001905092915050565b6000611d9b82600a61367d90919063ffffffff16565b9050919050565b6000818051906020012090506000600f600083815260200190815260200160002054905060008111611e09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0090615a7d565b60405180910390fd5b60011515600e600083815260200190815260200160002060030160009054906101000a900460ff16151514611e73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6a906159bd565b60405180910390fd5b81600e60008381526020019081526020016000206000015414611ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec29061599d565b60405180910390fd5b611eec3033600e600085815260200190815260200160002060020154612854565b3373ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f80de5a7d3e27e32cfffc07551af7c9ee302a01b5456991722d7ef54193eab356600e600085815260200190815260200160002060010154604051611f959190615bdf565b60405180910390a3600f600083815260200190815260200160002060009055600e6000828152602001908152602001600020600080820160009055600182016000905560028201600090556003820160006101000a81549060ff02191690556003820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560048201600090555050505050565b6000600a600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490508161207b57fe5b04905090565b60606000600a83600a020390506060600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480602002602001604051908101604052809291908181526020016000905b8282101561228657838290600052602060002090600502016040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121cc5780601f106121a1576101008083540402835291602001916121cc565b820191906000526020600020905b8154815290600101906020018083116121af57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561226e5780601f106122435761010080835404028352916020019161226e565b820191906000526020600020905b81548152906001019060200180831161225157829003601f168201915b505050505081525050815260200190600101906120f2565b50505050905060008151148061229f5750600181510382115b156122b1576060809350505050612354565b6060600a6040519080825280602002602001820160405280156122ee57816020015b6122db61468e565b8152602001906001900390816122d35790505b50905060008090505b85600a0284101561234c5782518410156123375782848151811061231757fe5b602002602001015182828151811061232b57fe5b60200260200101819052505b808060010191505083806001019450506122f7565b819450505050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6123e933613b8e565b565b6123f433611674565b6123fd57600080fd5b61240681613be8565b50565b612411611a29565b61241a57600080fd5b61242381613c42565b50565b600080600090505b600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050811015612690576124836146bd565b600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000182815481106124d057fe5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125a05780601f10612575576101008083540402835291602001916125a0565b820191906000526020600020905b81548152906001019060200180831161258357829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126425780601f1061261757610100808354040283529160200191612642565b820191906000526020600020905b81548152906001019060200180831161262557829003601f168201915b50505050508152505090508481602001511480156126635750838160400151145b80156126725750428160000151115b1561268257600192505050612696565b50808060010191505061242e565b50600090505b9392505050565b6126a56145d6565b6126ae85610cbb565b9050838160400151146126f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126ed90615abd565b60405180910390fd5b612701878787612426565b15612741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161273890615b1d565b60405180910390fd5b600084111561275657612755308587610aab565b5b600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016040518060a001604052808360600151420181526020018881526020018781526020018581526020018481525090806001815401808255809150509060018203906000526020600020906005020160009091929091909150600082015181600001556020820151816001015560408201518160020155606082015181600301908051906020019061282a9291906146ec565b5060808201518160040190805190602001906128479291906146ec565b5050505050505050505050565b61285f838383613d3c565b505050565b61286d83613f0a565b156129045760008390508073ffffffffffffffffffffffffffffffffffffffff16634f4ee3538685856040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128d093929190615863565b600060405180830381600087803b1580156128ea57600080fd5b505af11580156128fe573d6000803e3d6000fd5b50505050505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516129619190615bdf565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156129a957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156129e357600080fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051612ac19190615bdf565b60405180910390a3505050565b612ad9878686612426565b612b18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b0f906159fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600d600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015612b8e5750612b8c866115a9565b155b15612bd157612bd0600d600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1687612e0f565b5b600073ffffffffffffffffffffffffffffffffffffffff16600d600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612c73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c6a90615b7d565b60405180910390fd5b86600d600088815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060a0016040528084815260200186815260200185815260200183815260200182815250600c60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008881526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003019080519060200190612d799291906146ec565b506080820151816004019080519060200190612d969291906146ec565b50905050600c60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010186908060018154018082558091505090600182039060005260206000200160009091929091909150555050505050505050565b8173ffffffffffffffffffffffffffffffffffffffff16600d600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612eb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ea790615a5d565b60405180910390fd5b600d600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082815260200190815260200160002060008082016000905560018201600090556002820160009055600382016000612f62919061476c565b600482016000612f72919061476c565b5050600080905060008090505b6001600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050038110156130fa57811561309057600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600182018154811061302557fe5b9060005260206000200154600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101828154811061307d57fe5b90600052602060002001819055506130ed565b82600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182815481106130de57fe5b90600052602060002001541491505b8080600101915050612f7f565b50600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016001600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050038154811061319057fe5b9060005260206000200160009055600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054809190600190036131f391906147b4565b50505050565b60008282111561320857600080fd5b600082840390508091505092915050565b60008082840190508381101561322e57600080fd5b8091505092915050565b600060026000848152602001908152602001600020600101541415613292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161328990615a1d565b60405180910390fd5b8015156002600084815260200190815260200160002060050160009054906101000a900460ff16151514156132fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132f390615afd565b60405180910390fd5b806002600084815260200190815260200160002060050160006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561336857600080fd5b61337d8160065461321990919063ffffffff16565b6006819055506133d581600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461321990919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516134769190615bdf565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156134bc57600080fd5b6134d1816006546131f990919063ffffffff16565b60068190555061352981600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546131f990919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516135ca9190615bdf565b60405180910390a35050565b6135e08282613482565b613679823361367484600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546131f990919063ffffffff16565b61296f565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156136b857600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61372381600a613f1d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61377d81600a613fc990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b600060026000848152602001908152602001600020600101541461381c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161381390615a9d565b60405180910390fd5b6138246147e0565b61382d82614074565b9050606061383a826140a2565b9050600061385b8260008151811061384e57fe5b6020026020010151614179565b905042811161389f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161389690615a3d565b60405180910390fd5b60006138be836001815181106138b157fe5b6020026020010151614179565b905060006138df846002815181106138d257fe5b6020026020010151614179565b90506000613900856003815181106138f357fe5b6020026020010151614179565b905060606139218660048151811061391457fe5b60200260200101516140a2565b905060008151905060008090505b81811015613a9c57606061395584838151811061394857fe5b60200260200101516140a2565b90506002600088815260200190815260200160002060040160405180606001604052806139958460008151811061398857fe5b6020026020010151614179565b81526020016139b7846001815181106139aa57fe5b60200260200101516141ea565b73ffffffffffffffffffffffffffffffffffffffff1681526020016139ef846002815181106139e257fe5b602002602001015161420d565b815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190613a8a9291906146ec565b5050505050808060010191505061392f565b50613abb60026000878152602001908152602001600020600401614299565b85600260008781526020019081526020016000206000018190555084600260008781526020019081526020016000206001018190555083600260008781526020019081526020016000206002018190555082600260008781526020019081526020016000206003018190555060016002600087815260200190815260200160002060050160006101000a81548160ff021916908315150217905550600385908060018154018082558091505090600182039060005260206000200160009091929091909150555050505050505050505050565b613ba2816000613fc990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b60405160405180910390a250565b613bfc816000613f1d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f2460405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613c7c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613d7657600080fd5b613dc881600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546131f990919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613e5d81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461321990919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051613efd9190615bdf565b60405180910390a3505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613f5757600080fd5b613f61828261367d565b15613f6b57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561400357600080fd5b61400d828261367d565b61401657600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61407c6147e0565b600060208301905060405180604001604052808451815260200182815250915050919050565b60606140ad82614374565b6140b657600080fd5b60006140c1836143c2565b9050806040519080825280602002602001820160405280156140fd57816020015b6140ea6147fa565b8152602001906001900390816140e25790505b509150600061410f8460200151614433565b8460200151019050600080600090505b8381101561417057614130836144bc565b915060405180604001604052808381526020018481525085828151811061415357fe5b60200260200101819052508183019250808060010191505061411f565b50505050919050565b600080826000015111801561419357506021826000015111155b61419c57600080fd5b60006141ab8360200151614433565b905060008184600001510390506000808386602001510190508051915060208310156141de57826020036101000a820491505b81945050505050919050565b600060158260000151146141fd57600080fd5b61420682614179565b9050919050565b6060600082600001511161422057600080fd5b600061422f8360200151614433565b905060008184600001510390506060816040519080825280601f01601f1916602001820160405280156142715781602001600182028038833980820191505090505b509050600081602001905061428d84876020015101828561456f565b81945050505050919050565b60008180549050116142e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016142d79061597d565b60405180910390fd5b600081805490509050600080905060008090505b8281101561432b5783818154811061430857fe5b9060005260206000209060030201600001548201915080806001019150506142f4565b506064811461436f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161436690615b5d565b60405180910390fd5b505050565b6000808260000151141561438b57600090506143bd565b60008083602001519050805160001a915060c060ff168260ff1610156143b6576000925050506143bd565b6001925050505b919050565b600080826000015114156143d9576000905061442e565b600080905060006143ed8460200151614433565b84602001510190506000846000015185602001510190505b8082101561442757614416826144bc565b820191508280600101935050614405565b8293505050505b919050565b600080825160001a9050608060ff168110156144535760009150506144b7565b60b860ff16811080614478575060c060ff168110158015614477575060f860ff1681105b5b156144875760019150506144b7565b60c060ff168110156144a75760018060b80360ff168203019150506144b7565b60018060f80360ff168203019150505b919050565b600080825160001a9050608060ff168110156144dc57600191505061456a565b60b860ff168110156144fa576001608060ff1682030191505061456a565b60c060ff1681101561452a5760b78103600184019350806020036101000a84510460018201810193505050614568565b60f860ff1681101561454857600160c060ff1682030191505061456a565b60f78103600184019350806020036101000a845104600182018101935050505b505b919050565b600081141561457d576145d1565b5b602060ff1681106145ad5782518252602060ff1683019250602060ff1682019150602060ff168103905061457e565b6000600182602060ff16036101000a03905080198451168184511681811785525050505b505050565b6040518060c0016040528060008152602001600081526020016000815260200160008152602001606081526020016000151581525090565b6040518060a0016040528060008152602001600081526020016000815260200160608152602001606081525090565b6040518060c00160405280600080191681526020016000815260200160008152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060a0016040528060008152602001600081526020016000815260200160608152602001606081525090565b6040518060a0016040528060008152602001600081526020016000815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061472d57805160ff191683800117855561475b565b8280016001018555821561475b579182015b8281111561475a57825182559160200191906001019061473f565b5b5090506147689190614814565b5090565b50805460018160011615610100020316600290046000825580601f1061479257506147b1565b601f0160209004906000526020600020908101906147b09190614814565b5b50565b8154818355818111156147db578183600052602060002091820191016147da9190614839565b5b505050565b604051806040016040528060008152602001600081525090565b604051806040016040528060008152602001600081525090565b61483691905b8082111561483257600081600090555060010161481a565b5090565b90565b61485b91905b8082111561485757600081600090555060010161483f565b5090565b90565b600061486a8235615e44565b905092915050565b600061487e8235615e56565b905092915050565b600082601f83011261489757600080fd5b81356148aa6148a582615c87565b615c5a565b915080825260208301602083018583830111156148c657600080fd5b6148d1838284615e8a565b50505092915050565b600082601f8301126148eb57600080fd5b81356148fe6148f982615cb3565b615c5a565b9150808252602083016020830185838301111561491a57600080fd5b614925838284615e8a565b50505092915050565b600061493a8235615e80565b905092915050565b60006020828403121561495457600080fd5b60006149628482850161485e565b91505092915050565b6000806040838503121561497e57600080fd5b600061498c8582860161485e565b925050602061499d8582860161485e565b9150509250929050565b6000806000606084860312156149bc57600080fd5b60006149ca8682870161485e565b93505060206149db8682870161485e565b92505060406149ec8682870161492e565b9150509250925092565b60008060408385031215614a0957600080fd5b6000614a178582860161485e565b9250506020614a2885828601614872565b9150509250929050565b60008060408385031215614a4557600080fd5b6000614a538582860161485e565b9250506020614a648582860161492e565b9150509250929050565b600080600060608486031215614a8357600080fd5b6000614a918682870161485e565b9350506020614aa28682870161492e565b9250506040614ab38682870161492e565b9150509250925092565b600060208284031215614acf57600080fd5b6000614add84828501614872565b91505092915050565b600080600080600060a08688031215614afe57600080fd5b6000614b0c88828901614872565b9550506020614b1d8882890161492e565b9450506040614b2e8882890161492e565b9350506060614b3f8882890161492e565b925050608086013567ffffffffffffffff811115614b5c57600080fd5b614b68888289016148da565b9150509295509295909350565b60008060008060008060c08789031215614b8e57600080fd5b6000614b9c89828a01614872565b9650506020614bad89828a0161492e565b9550506040614bbe89828a0161492e565b9450506060614bcf89828a0161492e565b935050608087013567ffffffffffffffff811115614bec57600080fd5b614bf889828a016148da565b92505060a087013567ffffffffffffffff811115614c1557600080fd5b614c2189828a016148da565b9150509295509295509295565b600060208284031215614c4057600080fd5b600082013567ffffffffffffffff811115614c5a57600080fd5b614c6684828501614886565b91505092915050565b600060208284031215614c8157600080fd5b6000614c8f8482850161492e565b91505092915050565b60008060408385031215614cab57600080fd5b6000614cb98582860161492e565b925050602083013567ffffffffffffffff811115614cd657600080fd5b614ce285828601614886565b9150509250929050565b60008060408385031215614cff57600080fd5b6000614d0d8582860161492e565b9250506020614d1e8582860161492e565b9150509250929050565b600080600060608486031215614d3d57600080fd5b6000614d4b8682870161492e565b9350506020614d5c8682870161492e565b9250506040614d6d86828701614872565b9150509250925092565b60008060008060808587031215614d8d57600080fd5b6000614d9b8782880161492e565b9450506020614dac8782880161492e565b9350506040614dbd8782880161492e565b925050606085013567ffffffffffffffff811115614dda57600080fd5b614de6878288016148da565b91505092959194509250565b600080600080600060a08688031215614e0a57600080fd5b6000614e188882890161492e565b9550506020614e298882890161492e565b9450506040614e3a8882890161492e565b935050606086013567ffffffffffffffff811115614e5757600080fd5b614e63888289016148da565b925050608086013567ffffffffffffffff811115614e8057600080fd5b614e8c888289016148da565b9150509295509295909350565b6000614ea58383615648565b905092915050565b6000614eb983836156c5565b905092915050565b6000614ecd8383615715565b905092915050565b6000614ee1838361581b565b60208301905092915050565b614ef681615def565b82525050565b614f0581615def565b82525050565b6000614f1682615d13565b614f208185615d89565b935083602082028501614f3285615cdf565b60005b84811015614f6b578383038852614f4d838351614e99565b9250614f5882615d55565b9150602088019750600181019050614f35565b508196508694505050505092915050565b6000614f8782615d1e565b614f918185615d9a565b935083602082028501614fa385615cec565b60005b84811015614fdc578383038852614fbe838351614ead565b9250614fc982615d62565b9150602088019750600181019050614fa6565b508196508694505050505092915050565b6000614ff882615d29565b6150028185615dab565b93508360208202850161501485615cf9565b60005b8481101561504d57838303885261502f838351614ec1565b925061503a82615d6f565b9150602088019750600181019050615017565b508196508694505050505092915050565b600061506982615d34565b6150738185615dbc565b935061507e83615d06565b60005b828110156150ac57615094868351614ed5565b955061509f82615d7c565b9150600181019050615081565b50849250505092915050565b6150c181615e01565b82525050565b6150d081615e01565b82525050565b60006150e182615d4a565b6150eb8185615dde565b93506150fb818560208601615e99565b61510481615ecc565b840191505092915050565b600061511a82615d3f565b6151248185615dcd565b9350615134818560208601615e99565b61513d81615ecc565b840191505092915050565b6000615155600f83615dde565b91507f6475706c6963617465645f6861736800000000000000000000000000000000006000830152602082019050919050565b6000615195601083615dde565b91507f6e6f5f76616c69645f636172645f6964000000000000000000000000000000006000830152602082019050919050565b60006151d5600983615dde565b91507f6e6f742072756c657300000000000000000000000000000000000000000000006000830152602082019050919050565b6000615215600c83615dde565b91507f77726f6e675f73656372657400000000000000000000000000000000000000006000830152602082019050919050565b6000615255600a83615dde565b91507f6e6f745f616374697665000000000000000000000000000000000000000000006000830152602082019050919050565b6000615295600983615dde565b91507f6e6f745f657869737400000000000000000000000000000000000000000000006000830152602082019050919050565b60006152d5600b83615dde565b91507f6e6f7420616c6c6f7765640000000000000000000000000000000000000000006000830152602082019050919050565b6000615315600983615dde565b91507f6e6f7420657869737400000000000000000000000000000000000000000000006000830152602082019050919050565b6000615355600783615dde565b91507f65787069726564000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000615395600a83615dde565b91507f73616d65206f776e6572000000000000000000000000000000000000000000006000830152602082019050919050565b60006153d5600e83615dde565b91507f686173685f6e6f745f666f756e640000000000000000000000000000000000006000830152602082019050919050565b6000615415600583615dde565b91507f65786973740000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000615455601083615dde565b91507f696e636f727265637420616d6f756e74000000000000000000000000000000006000830152602082019050919050565b6000615495600a83615dde565b91507f636172645f6578697374000000000000000000000000000000000000000000006000830152602082019050919050565b60006154d5600b83615dde565b91507f73616d65207374617475730000000000000000000000000000000000000000006000830152602082019050919050565b6000615515600a83615dde565b91507f6475706c696361746564000000000000000000000000000000000000000000006000830152602082019050919050565b6000615555600c83615dde565b91507f656d7074795f746f6b656e7300000000000000000000000000000000000000006000830152602082019050919050565b6000615595601683615dde565b91507f616c6c20616d6f756e74206469737472696275746564000000000000000000006000830152602082019050919050565b60006155d5600f83615dde565b91507f6475706c696361746564206861736800000000000000000000000000000000006000830152602082019050919050565b6000615615600f83615dde565b91507f6e6f745f6163746976617461626c6500000000000000000000000000000000006000830152602082019050919050565b600060a083016000830151615660600086018261581b565b506020830151615673602086018261581b565b506040830151615686604086018261581b565b506060830151848203606086015261569e828261510f565b915050608083015184820360808601526156b8828261510f565b9150508091505092915050565b60006060830160008301516156dd600086018261581b565b5060208301516156f06020860182614eed565b5060408301518482036040860152615708828261510f565b9150508091505092915050565b600060a08301600083015161572d600086018261581b565b506020830151615740602086018261581b565b506040830151615753604086018261581b565b506060830151848203606086015261576b828261510f565b91505060808301518482036080860152615785828261510f565b9150508091505092915050565b600060c0830160008301516157aa600086018261581b565b5060208301516157bd602086018261581b565b5060408301516157d0604086018261581b565b5060608301516157e3606086018261581b565b50608083015184820360808601526157fb8282614f7c565b91505060a083015161581060a08601826150b8565b508091505092915050565b61582481615e2d565b82525050565b61583381615e2d565b82525050565b61584281615e37565b82525050565b600060208201905061585d6000830184614efc565b92915050565b60006060820190506158786000830186614efc565b615885602083018561582a565b615892604083018461582a565b949350505050565b600060208201905081810360008301526158b48184614f0b565b905092915050565b600060208201905081810360008301526158d68184614fed565b905092915050565b600060208201905081810360008301526158f8818461505e565b905092915050565b600060208201905061591560008301846150c7565b92915050565b6000602082019050818103600083015261593581846150d6565b905092915050565b6000602082019050818103600083015261595681615148565b9050919050565b6000602082019050818103600083015261597681615188565b9050919050565b60006020820190508181036000830152615996816151c8565b9050919050565b600060208201905081810360008301526159b681615208565b9050919050565b600060208201905081810360008301526159d681615248565b9050919050565b600060208201905081810360008301526159f681615288565b9050919050565b60006020820190508181036000830152615a16816152c8565b9050919050565b60006020820190508181036000830152615a3681615308565b9050919050565b60006020820190508181036000830152615a5681615348565b9050919050565b60006020820190508181036000830152615a7681615388565b9050919050565b60006020820190508181036000830152615a96816153c8565b9050919050565b60006020820190508181036000830152615ab681615408565b9050919050565b60006020820190508181036000830152615ad681615448565b9050919050565b60006020820190508181036000830152615af681615488565b9050919050565b60006020820190508181036000830152615b16816154c8565b9050919050565b60006020820190508181036000830152615b3681615508565b9050919050565b60006020820190508181036000830152615b5681615548565b9050919050565b60006020820190508181036000830152615b7681615588565b9050919050565b60006020820190508181036000830152615b96816155c8565b9050919050565b60006020820190508181036000830152615bb681615608565b9050919050565b60006020820190508181036000830152615bd78184615792565b905092915050565b6000602082019050615bf4600083018461582a565b92915050565b6000608082019050615c0f600083018761582a565b615c1c6020830186614efc565b615c29604083018561582a565b615c3660608301846150c7565b95945050505050565b6000602082019050615c546000830184615839565b92915050565b6000604051905081810181811067ffffffffffffffff82111715615c7d57600080fd5b8060405250919050565b600067ffffffffffffffff821115615c9e57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115615cca57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000615dfa82615e0d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000615e4f82615e60565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015615eb7578082015181840152602081019050615e9c565b83811115615ec6576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820bd00427b4a119776851728315144f8204c22fbfc273c644904cde5e8893139596c6578706572696d656e74616cf50037",
  "sourceMap": "336:2005:4:-;;;884:23;8:9:-1;5:2;;;30:1;27;20:12;5:2;884:23:4;642:123:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:1:1;737:5:6;744:7;753:9;275:22:16;286:10;275;;;:22;;;:::i;:::-;524:10:18;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;501:4:21;493:5;:12;;;;;;;;;;;;:::i;:::-;;525:6;515:7;:16;;;;;;;;;;;;:::i;:::-;;553:8;541:9;;:20;;;;;;;;;;;;;;;;;;405:163;;;275:22:15;286:10;275;;;:22;;;:::i;:::-;642:123:6;;;336:2005:4;;685:119:16;741:21;754:7;741:8;:12;;;;;;:21;;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;::15:-;741:21;754:7;741:8;:12;;;;;;:21;;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;259:181:14:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;;:::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:162::-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;336:2005:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "336:2005:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;336:2005:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;707:156:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;628:81:21;;;:::i;:::-;;;;;;;;;;;;;;;;1225:208:1;;;;;;;;;;;;;;;;:::i;:::-;;841:163:6;;;;;;;;;;;;;;;;:::i;:::-;;2721:145:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2028:217:3;;;;;;;;;;;;;;;;:::i;:::-;;916:89:19;;;:::i;:::-;;;;;;;;;;;;;;;;2508:99:3;;;;;;;;;;;;;;;;:::i;:::-;;717:208;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3809:136:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1779:245:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3329:224:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;708:173:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;930:81:21;;;:::i;:::-;;;;;;;;;;;;;;;;4067:200:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1225:104:5;;;;;;;;;;;;;;;;:::i;:::-;;443:128:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;295:77:20;;;;;;;;;;;;;;;;:::i;:::-;;2249:255:3;;;;;;;;;;;;;;;;:::i;:::-;;1437:127:1;;;:::i;:::-;;;;;;;;;;;;;;;;3264:541;;;;;;;;;;;;;;;;:::i;:::-;;1114:107:5;;;;;;;;;;;;;;;;:::i;:::-;;1070:705:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;867:180:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1217:104:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1423:137:18;;;:::i;:::-;;517:196:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;619:93:20;;;;;;;;;;;;;;;;:::i;:::-;;1051:170:1;;;;;;;;;;;;;;;;:::i;:::-;;395:107:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1645:184:4;;;;;;;;;;;;;;;;:::i;:::-;;1163:478;;;;;;;;;;;;;;;;:::i;:::-;;659:77:18;;;:::i;:::-;;;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;911:248:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;885:98:5;;;:::i;:::-;;;;;;;;;;;;;;;;771:85:21;;;:::i;:::-;;;;;;;;;;;;;;;;508:90:15;;;;;;;;;;;;;;;;:::i;:::-;;604:75;;;:::i;:::-;;987:123:5;;;;;;;;;;;;;;;;:::i;:::-;;4786:210:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1083:202:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;395:107:15;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1833:505:4;;;;;;;;;;;;;;;;:::i;:::-;;932:134:3;;;:::i;:::-;;;;;;;;;;;;;;;;1568:657:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1652:129:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;604:75:16;;;:::i;:::-;;508:90;;;;;;;;;;;;;;;;:::i;:::-;;1731:107:18;;;;;;;;;;;;;;;;:::i;:::-;;707:156:1;789:4;808:48;824:10;836:8;846:9;808:15;:48::i;:::-;801:55;;707:156;;;;:::o;628:81:21:-;665:13;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;1225:208:1:-;1357:69;1362:10;1374:8;1384:9;1395:7;1404;1413:12;1357:4;:69::i;:::-;1225:208;;;;;:::o;841:163:6:-;913:32;923:10;934:3;938:6;913:9;:32::i;:::-;951:48;966:10;978:3;983:6;992:5;951:14;:48::i;:::-;841:163;;;:::o;2721:145:19:-;2786:4;2802:36;2811:10;2823:7;2832:5;2802:8;:36::i;:::-;2855:4;2848:11;;2721:145;;;;:::o;2028:217:3:-;2160:80;2171:10;2183:11;2196:8;2206:9;2217;2228:7;2160:80;;;;;;;;;;;;:10;:80::i;:::-;2028:217;;;;;:::o;916:89:19:-;960:7;986:12;;979:19;;916:89;:::o;2508:99:3:-;2564:38;2578:10;2590:11;2564:13;:38::i;:::-;2508:99;:::o;717:208::-;805:4;817:12;864:7;834:37;;:13;:26;848:11;834:26;;;;;;;;;;;;;;;;;;;;;:37;;;833:67;;;;;877:22;887:11;877:9;:22::i;:::-;833:67;817:83;;913:7;906:14;;;717:208;;;;:::o;3809:136:1:-;3892:4;3936:3;3923:10;3911:9;:22;:28;;;;;;3904:35;;3809:136;;;;:::o;1779:245:3:-;1841:7;1856:12;1871:22;1881:11;1871:9;:22::i;:::-;1856:37;;1899:20;1929:7;1925:69;;;1961:13;:26;1975:11;1961:26;;;;;;;;;;;;;;;;;;;;;1946:41;;1925:69;2007:12;2000:19;;;;1779:245;;;:::o;3329:224:19:-;3408:4;3424:26;3434:4;3440:2;3444:5;3424:9;:26::i;:::-;3460:65;3469:4;3475:10;3487:37;3518:5;3487:8;:14;3496:4;3487:14;;;;;;;;;;;;;;;:26;3502:10;3487:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3460:8;:65::i;:::-;3542:4;3535:11;;3329:224;;;;;:::o;708:173:5:-;767:13;;:::i;:::-;827:1;796:8;:19;805:9;796:19;;;;;;;;;;;:28;;;:32;788:54;;;;;;;;;;;;;;;;;;;;;;856:8;:19;865:9;856:19;;;;;;;;;;;848:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;708:173;;;:::o;930:81:21:-;971:5;995:9;;;;;;;;;;;988:16;;930:81;:::o;4067:200:19:-;4147:4;4163:76;4172:10;4184:7;4193:45;4227:10;4193:8;:20;4202:10;4193:20;;;;;;;;;;;;;;;:29;4214:7;4193:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4163:8;:76::i;:::-;4256:4;4249:11;;4067:200;;;;:::o;1225:104:5:-;863:9:18;:7;:9::i;:::-;855:18;;;;;;1292:30:5;1306:9;1317:4;1292:13;:30::i;:::-;1225:104;:::o;443:128:22:-;511:4;350:20:15;359:10;350:8;:20::i;:::-;342:29;;;;;;527:16:22;533:2;537:5;527;:16::i;:::-;560:4;553:11;;443:128;;;;:::o;295:77:20:-;341:24;347:10;359:5;341;:24::i;:::-;295:77;:::o;2249:255:3:-;2409:90;2420:10;2432:11;2445:8;2455:9;2466;2477:7;2486:12;2409:10;:90::i;:::-;2249:255;;;;;;:::o;1437:127:1:-;1488:7;586:2;1510:11;:23;1522:10;1510:23;;;;;;;;;;;;;;;:30;;:37;;;;:49;;;;;;1503:56;;1437:127;:::o;3264:541::-;3347:20;;:::i;:::-;3370:28;3388:9;3370:17;:28::i;:::-;3347:51;;3404:13;3420:6;3404:22;;3438:6;3447:1;3438:10;;3433:260;3487:1;3454:6;:25;;;:32;:34;3450:1;:38;3433:260;;;3503:13;3519:64;3539:6;3546;:25;;;3572:1;3546:28;;;;;;;;;;;;;;:36;;;3519:19;:64::i;:::-;3503:80;;3591:67;3607:6;:25;;;3633:1;3607:28;;;;;;;;;;;;;;:37;;;3646:8;3656:1;3591:15;:67::i;:::-;3678:8;3666:20;;;;3433:260;3490:3;;;;;;;3433:260;;;;3699:100;3715:6;:25;;;3774:1;3741:6;:25;;;:32;:34;3715:61;;;;;;;;;;;;;;:70;;;3787:8;3797:1;3699:15;:100::i;:::-;3264:541;;;;;:::o;1114:107:5:-;863:9:18;:7;:9::i;:::-;855:18;;;;;;1183:31:5;1197:9;1208:5;1183:13;:31::i;:::-;1114:107;:::o;1070:705:3:-;1126:15;1149:27;393:2;1179:23;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1149:53;;1209:21;393:2;1245:5;393:2;1233:17;:29;1209:53;;1268:24;1295:12;:24;1308:10;1295:24;;;;;;;;;;;;;;;:36;;1268:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:1;1342:7;:14;:19;:57;;;;1398:1;1381:7;:14;:18;1365:13;:34;1342:57;1338:119;;;1409:21;1445:5;1438:12;;;;;;;;1338:119;1466:21;1490:1;1466:25;;1498:249;1546:5;393:2;1534:17;1518:13;:33;1498:249;;;1598:7;:14;1582:13;:30;1578:140;;;1653:12;:24;1666:10;1653:24;;;;;;;;;;;;;;;:32;;:56;1686:7;1694:13;1686:22;;;;;;;;;;;;;;1653:56;;;;;;;;;;;1624:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:11;1636:13;1624:26;;;;;;;;;;;;;:85;;;;1578:140;1725:15;;;;;;;1553;;;;;;;1498:249;;;1759:11;1752:18;;;;;;1070:705;;;;:::o;867:180:1:-;976:4;995:45;1011:7;1020:8;1030:9;995:15;:45::i;:::-;988:52;;867:180;;;;;:::o;1217:104:19:-;1272:7;1298:9;:16;1308:5;1298:16;;;;;;;;;;;;;;;;1291:23;;1217:104;;;:::o;1423:137:18:-;863:9;:7;:9::i;:::-;855:18;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;517:196:3:-;578:4;590:12;684:3;605:12;:40;618:13;:26;632:11;618:26;;;;;;;;;;;;;;;;;;;;;605:40;;;;;;;;;;;;;;;:48;;:61;654:11;605:61;;;;;;;;;;;:76;;;:82;590:97;;701:7;694:14;;;517:196;;;:::o;619:93:20:-;683:22;693:4;699:5;683:9;:22::i;:::-;619:93;;:::o;1051:170:1:-;1155:59;1160:10;1172:8;1182:9;1193:7;1202;1155:59;;;;;;;;;;;;:4;:59::i;:::-;1051:170;;;;:::o;395:107:16:-;451:4;474:21;487:7;474:8;:12;;:21;;;;:::i;:::-;467:28;;395:107;;;:::o;1645:184:4:-;1695:7;851:1;821:6;:15;828:7;821:15;;;;;;;;;;;:27;;;:31;813:53;;;;;;;;;;;;;;;;;;;;;;350:20:16;359:10;350:8;:20::i;:::-;342:29;;;;;;1762:5:4;1736:31;;:6;:15;1743:7;1736:15;;;;;;;;;;;:22;;;;;;;;;;;;:31;;;1728:59;;;;;;;;;;;;;;;;;;;;;;1816:4;1793:6;:15;1800:7;1793:15;;;;;;;;;;;:22;;;:27;;;;;;;;;;;;;;;;;;1645:184;;:::o;1163:478::-;863:9:18;:7;:9::i;:::-;855:18;;;;;;1270:1:4;1260:7;:11;1252:36;;;;;;;;;;;;;;;;;;;;;;1312:1;1302:7;:11;1294:40;;;;;;;;;;;;;;;;;;;;;;1379:1;1348:6;:15;1355:7;1348:15;;;;;;;;;;;:27;;;:32;1340:55;;;;;;;;;;;;;;;;;;;;;;1432:1;1409:12;:19;1422:5;1409:19;;;;;;;;;;;;:24;1401:52;;;;;;;;;;;;;;;;;;;;;;1460:28;1474:4;1480:7;1460:5;:28::i;:::-;1494:19;;:::i;:::-;1516:51;;;;;;;;1521:5;1516:51;;;;1528:7;1516:51;;;;1537:7;1516:51;;;;1546:5;1516:51;;;;;;1553:10;1516:51;;;;;;1565:1;1516:51;;;1494:73;;1591:7;1573:6;:15;1580:7;1573:15;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1629:7;1607:12;:19;1620:5;1607:19;;;;;;;;;;;:29;;;;883:1:18;1163:478:4;;;:::o;659:77:18:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;911:248:4:-;985:14;1001:13;1016:14;1032:11;956:7;851:1;821:6;:15;828:7;821:15;;;;;;;;;;;:27;;;:31;813:53;;;;;;;;;;;;;;;;;;;;;;1060:6;:15;1067:7;1060:15;;;;;;;;;;;:22;;;1084:6;:15;1091:7;1084:15;;;;;;;;;;;:21;;;;;;;;;;;;1107:6;:15;1114:7;1107:15;;;;;;;;;;;:22;;;1131:6;:15;1138:7;1131:15;;;;;;;;;;;:22;;;;;;;;;;;;1052:102;;;;;;;;911:248;;;;;;:::o;885:98:5:-;928:16;964:13;956:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;885:98;:::o;771:85:21:-;810:13;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;771:85;:::o;508:90:15:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;987:123:5:-;863:9:18;:7;:9::i;:::-;855:18;;;;;;1072:31:5;1086:9;1097:5;1072:13;:31::i;:::-;987:123;;:::o;4786:210:19:-;4871:4;4887:81;4896:10;4908:7;4917:50;4951:15;4917:8;:20;4926:10;4917:20;;;;;;;;;;;;;;;:29;4938:7;4917:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4887:8;:81::i;:::-;4985:4;4978:11;;4786:210;;;;:::o;1083:202:6:-;1143:4;1181:32;1191:10;1202:3;1206:6;1181:9;:32::i;:::-;1219:44;1234:10;1246:3;1251:6;1260:1;1219:14;:44::i;:::-;1276:4;1269:11;;1083:202;;;;:::o;395:107:15:-;451:4;474:21;487:7;474:8;:12;;:21;;;;:::i;:::-;467:28;;395:107;;;:::o;1833:505:4:-;1890:12;1915:7;1905:18;;;;;;1890:33;;1929:14;1946:12;:18;1959:4;1946:18;;;;;;;;;;;;1929:35;;1987:1;1978:6;:10;1970:37;;;;;;;;;;;;;;;;;;;;;;2046:4;2021:29;;:6;:14;2028:6;2021:14;;;;;;;;;;;:21;;;;;;;;;;;;:29;;;2013:52;;;;;;;;;;;;;;;;;;;;;;2103:4;2079:6;:14;2086:6;2079:14;;;;;;;;;;;:19;;;:28;2071:53;;;;;;;;;;;;;;;;;;;;;;2133:58;2151:4;2158:10;2169:6;:14;2176:6;2169:14;;;;;;;;;;;:21;;;2133:9;:58::i;:::-;2261:10;2202:70;;2216:6;:14;2223:6;2216:14;;;;;;;;;;;:20;;;;;;;;;;;;2202:70;;;2238:6;:14;2245:6;2238:14;;;;;;;;;;;:21;;;2202:70;;;;;;;;;;;;;;;2288:12;:18;2301:4;2288:18;;;;;;;;;;;2281:25;;;2319:6;:14;2326:6;2319:14;;;;;;;;;;;;2312:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1833:505;;;:::o;932:134:3:-;984:7;393:2;1006:12;:24;1019:10;1006:24;;;;;;;;;;;;;;;:36;;:43;;;;:55;;;;;;999:62;;932:134;:::o;1568:657:1:-;1623:14;1650:21;586:2;1686:5;586:2;1674:17;:29;1650:53;;1709:21;1733:11;:23;1745:10;1733:23;;;;;;;;;;;;;;;:30;;1709:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1791:1;1774:6;:13;:18;:55;;;;1828:1;1812:6;:13;:17;1796:13;:33;1774:55;1770:117;;;1839:20;1874:5;1867:12;;;;;;;1770:117;1893:25;586:2;1921:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1893:50;;1951:21;1975:1;1951:25;;1983:212;2031:5;586:2;2019:17;2003:13;:33;1983:212;;;2083:6;:13;2067;:29;2063:103;;;2136:6;2143:13;2136:21;;;;;;;;;;;;;;2108:10;2119:13;2108:25;;;;;;;;;;;;;:49;;;;2063:103;2173:15;;;;;;;2038;;;;;;;1983:212;;;2209:10;2201:19;;;;;;1568:657;;;;:::o;1652:129:19:-;1724:7;1750:8;:15;1759:5;1750:15;;;;;;;;;;;;;;;:24;1766:7;1750:24;;;;;;;;;;;;;;;;1743:31;;1652:129;;;;:::o;604:75:16:-;647:25;661:10;647:13;:25::i;:::-;604:75::o;508:90::-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;1731:107:18:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;2853:407:1:-;2954:4;2976:6;2985:1;2976:10;;2971:262;2992:11;:19;3004:6;2992:19;;;;;;;;;;;;;;;:26;;:33;;;;2988:1;:37;2971:262;;;3040:18;;:::i;:::-;3061:11;:19;3073:6;3061:19;;;;;;;;;;;;;;;:26;;3088:1;3061:29;;;;;;;;;;;;;;;;;;3040:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3122:8;3105:5;:13;;;:25;3104:60;;;;;3154:9;3136:5;:14;;;:27;3104:60;:92;;;;;3192:3;3169:5;:20;;;:26;3104:92;3099:128;;;3214:4;3207:11;;;;;;3099:128;2971:262;3027:3;;;;;;;2971:262;;;;3250:5;3243:12;;2853:407;;;;;;:::o;2229:620::-;2379:20;;:::i;:::-;2402:28;2420:9;2402:17;:28::i;:::-;2379:51;;2461:7;2444:6;:13;;;:24;2436:53;;;;;;;;;;;;;;;;;;;;;;2508:43;2524:5;2531:8;2541:9;2508:15;:43::i;:::-;2507:44;2499:67;;;;;;;;;;;;;;;;;;;;;;2586:1;2577:7;:10;2573:126;;;2642:50;2666:4;2673:7;2682:9;2642:15;:50::i;:::-;2573:126;2734:11;:18;2746:5;2734:18;;;;;;;;;;;;;;;:25;;2765:78;;;;;;;;2777:6;:20;;;2771:3;:26;2765:78;;;;2800:8;2765:78;;;;2810:9;2765:78;;;;2821:7;2765:78;;;;2830:12;2765:78;;;2734:110;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2734:110:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2229:620;;;;;;;:::o;1588:218:6:-;1771:30;1787:4;1792:2;1795:5;1771:15;:30::i;:::-;1588:218;;;:::o;1289:293::-;1388:22;1407:2;1388:18;:22::i;:::-;1385:155;;;1420:32;1479:2;1420:62;;1490:8;:22;;;1513:6;1521:5;1528:4;1490:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1490:43:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1490:43:6;;;;1385:155;;1567:2;1550:27;;1559:6;1550:27;;;1571:5;1550:27;;;;;;;;;;;;;;;1289:293;;;;:::o;6831:248:19:-;6942:1;6923:21;;:7;:21;;;;6915:30;;;;;;6980:1;6963:19;;:5;:19;;;;6955:28;;;;;;7021:5;6994:8;:15;7003:5;6994:15;;;;;;;;;;;;;;;:24;7010:7;6994:24;;;;;;;;;;;;;;;:32;;;;7057:7;7041:31;;7050:5;7041:31;;;7066:5;7041:31;;;;;;;;;;;;;;;6831:248;;;:::o;2616:696:3:-;2804:51;2827:6;2835:8;2845:9;2804:22;:51::i;:::-;2796:74;;;;;;;;;;;;;;;;;;;;;;2920:1;2882:40;;:13;:26;2896:11;2882:26;;;;;;;;;;;;;;;;;;;;;:40;;;;2881:71;;;;;2929:22;2939:11;2929:9;:22::i;:::-;2928:23;2881:71;2877:146;;;2962:54;2976:13;:26;2990:11;2976:26;;;;;;;;;;;;;;;;;;;;;3004:11;2962:13;:54::i;:::-;2877:146;3075:1;3037:40;;:13;:26;3051:11;3037:26;;;;;;;;;;;;;;;;;;;;;:40;;;3029:68;;;;;;;;;;;;;;;;;;;;;;3132:6;3103:13;:26;3117:11;3103:26;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;3190:61;;;;;;;;3197:9;3190:61;;;;3208:8;3190:61;;;;3218:9;3190:61;;;;3229:7;3190:61;;;;3238:12;3190:61;;;3145:12;:20;3158:6;3145:20;;;;;;;;;;;;;;;:28;;:41;3174:11;3145:41;;;;;;;;;;;:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3257:12;:20;3270:6;3257:20;;;;;;;;;;;;;;;:32;;3295:11;3257:50;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3257:50:3;;;;;;;;;;;;;;;;;;;;;;2616:696;;;;;;;:::o;3316:661::-;3429:6;3399:36;;:13;:26;3413:11;3399:26;;;;;;;;;;;;;;;;;;;;;:36;;;3391:59;;;;;;;;;;;;;;;;;;;;;;3463:13;:26;3477:11;3463:26;;;;;;;;;;;;3456:33;;;;;;;;;;;3502:12;:20;3515:6;3502:20;;;;;;;;;;;;;;;:28;;:41;3531:11;3502:41;;;;;;;;;;;;3495:48;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;3549:10;3560:5;3549:16;;3576:6;3585:1;3576:10;;3571:267;3632:1;3592:12;:20;3605:6;3592:20;;;;;;;;;;;;;;;:32;;:39;;;;:41;3588:1;:45;3571:267;;;3649:5;3646:186;;;3703:12;:20;3716:6;3703:20;;;;;;;;;;;;;;;:32;;3738:1;3736;:3;3703:37;;;;;;;;;;;;;;;;3665:12;:20;3678:6;3665:20;;;;;;;;;;;;;;;:32;;3698:1;3665:35;;;;;;;;;;;;;;;:75;;;;3646:186;;;3812:11;3773:12;:20;3786:6;3773:20;;;;;;;;;;;;;;;:32;;3806:1;3773:35;;;;;;;;;;;;;;;;:50;3765:58;;3646:186;3634:3;;;;;;;3571:267;;;;3850:12;:20;3863:6;3850:20;;;;;;;;;;;;;;;:32;;3923:1;3883:12;:20;3896:6;3883:20;;;;;;;;;;;;;;;:32;;:39;;;;:41;3850:75;;;;;;;;;;;;;;;3843:82;;;3931:12;:20;3944:6;3931:20;;;;;;;;;;;;;;;:32;;:41;;;;;;;;;;;;:::i;:::-;;3316:661;;;:::o;1211:145:17:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;1439:::-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;2818:250:5:-;2933:1;2901:8;:19;2910:9;2901:19;;;;;;;;;;;:28;;;:33;;2893:55;;;;;;;;;;;;;;;;;;;;;;2992:10;2963:39;;:8;:19;2972:9;2963:19;;;;;;;;;;;:25;;;;;;;;;;;;:39;;;;2955:64;;;;;;;;;;;;;;;;;;;;;;3053:10;3025:8;:19;3034:9;3025:19;;;;;;;;;;;:25;;;:38;;;;;;;;;;;;;;;;;;2818:250;;:::o;5814:263:19:-;5907:1;5888:21;;:7;:21;;;;5880:30;;;;;;5936:23;5953:5;5936:12;;:16;;:23;;;;:::i;:::-;5921:12;:38;;;;5990:29;6013:5;5990:9;:18;6000:7;5990:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;5969:9;:18;5979:7;5969:18;;;;;;;;;;;;;;;:50;;;;6055:7;6034:36;;6051:1;6034:36;;;6064:5;6034:36;;;;;;;;;;;;;;;5814:263;;:::o;6303:::-;6396:1;6377:21;;:7;:21;;;;6369:30;;;;;;6425:23;6442:5;6425:12;;:16;;:23;;;;:::i;:::-;6410:12;:38;;;;6479:29;6502:5;6479:9;:18;6489:7;6479:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6458:9;:18;6468:7;6458:18;;;;;;;;;;;;;;;:50;;;;6549:1;6523:36;;6532:7;6523:36;;;6553:5;6523:36;;;;;;;;;;;;;;;6303:263;;:::o;7468:179::-;7538:21;7544:7;7553:5;7538;:21::i;:::-;7569:71;7578:7;7587:10;7599:40;7633:5;7599:8;:17;7608:7;7599:17;;;;;;;;;;;;;;;:29;7617:10;7599:29;;;;;;;;;;;;;;;;:33;;:40;;;;:::i;:::-;7569:8;:71::i;:::-;7468:179;;:::o;786:162:14:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;685:119:15:-;741:21;754:7;741:8;:12;;:21;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;810:127::-;869:24;885:7;869:8;:15;;:24;;;;:::i;:::-;922:7;908:22;;;;;;;;;;;;810:127;:::o;1333:1481:5:-;1600:1;1568:8;:19;1577:9;1568:19;;;;;;;;;;;:28;;;:33;1560:51;;;;;;;;;;;;;;;;;;;;;;1622:29;;:::i;:::-;1654:15;:3;:13;:15::i;:::-;1622:47;;1675:35;1713:13;:4;:11;:13::i;:::-;1675:51;;1733:19;1755:20;:8;1764:1;1755:11;;;;;;;;;;;;;;:18;:20::i;:::-;1733:42;;1807:3;1790:14;:20;1782:40;;;;;;;;;;;;;;;;;;;;;;1829:16;1856:20;:8;1865:1;1856:11;;;;;;;;;;;;;;:18;:20::i;:::-;1829:48;;1883:14;1908:20;:8;1917:1;1908:11;;;;;;;;;;;;;;:18;:20::i;:::-;1883:46;;1935:21;1967:20;:8;1976:1;1967:11;;;;;;;;;;;;;;:18;:20::i;:::-;1935:53;;2000;2056:20;:8;2065:1;2056:11;;;;;;;;;;;;;;:18;:20::i;:::-;2000:76;;2087:15;2105:26;:33;2087:51;;2149:6;2158:1;2149:10;;2144:319;2165:10;2161:1;:14;2144:319;;;2190:39;2232:38;:26;2259:1;2232:29;;;;;;;;;;;;;;:36;:38::i;:::-;2190:80;;2287:8;:18;2296:8;2287:18;;;;;;;;;;;:37;;2339:105;;;;;;;;2357:24;:12;2370:1;2357:15;;;;;;;;;;;;;;:22;:24::i;:::-;2339:105;;;;2382:27;:12;2395:1;2382:15;;;;;;;;;;;;;;:25;:27::i;:::-;2339:105;;;;;;2417:25;:12;2430:1;2417:15;;;;;;;;;;;;;;:23;:25::i;:::-;2339:105;;;2287:165;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2287:165:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2144:319;2177:3;;;;;;;2144:319;;;;2473:66;2501:8;:18;2510:8;2501:18;;;;;;;;;;;:37;;2473:27;:66::i;:::-;2586:14;2550:8;:18;2559:8;2550:18;;;;;;;;;;;:33;;:50;;;;2636:8;2606;:18;2615:8;2606:18;;;;;;;;;;;:27;;:38;;;;2678:6;2650:8;:18;2659:8;2650:18;;;;;;;;;;;:25;;:34;;;;2725:13;2690:8;:18;2699:8;2690:18;;;;;;;;;;;:32;;:48;;;;2771:4;2744:8;:18;2753:8;2744:18;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;2781:13;2800:8;2781:28;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2781:28:5;;;;;;;;;;;;;;;;;;;;;;1333:1481;;;;;;;;;;:::o;810:127:16:-;869:24;885:7;869:8;:15;;:24;;;;:::i;:::-;922:7;908:22;;;;;;;;;;;;810:127;:::o;685:119::-;741:21;754:7;741:8;:12;;:21;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;1982:183:18:-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;5215:256:19:-;5316:1;5302:16;;:2;:16;;;;5294:25;;;;;;5348:26;5368:5;5348:9;:15;5358:4;5348:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5330:9;:15;5340:4;5330:15;;;;;;;;;;;;;;;:44;;;;5400:24;5418:5;5400:9;:13;5410:2;5400:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5384:9;:13;5394:2;5384:13;;;;;;;;;;;;;;;:40;;;;5454:2;5439:25;;5448:4;5439:25;;;5458:5;5439:25;;;;;;;;;;;;;;;5215:256;;;:::o;463:616:24:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;259:181:14:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;489:218:25:-;550:14;;:::i;:::-;576:11;640:4;634;630:15;620:25;;672:28;;;;;;;;680:4;:11;672:28;;;;693:6;672:28;;;665:35;;;489:218;;;:::o;1113:474::-;1173:23;1216:12;1223:4;1216:6;:12::i;:::-;1208:21;;;;;;1240:10;1253:14;1262:4;1253:8;:14::i;:::-;1240:27;;1300:5;1286:20;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1277:29;;1317:11;1345:27;1360:4;:11;;;1345:14;:27::i;:::-;1331:4;:11;;;:41;1317:55;;1382:12;1409:6;1418:1;1409:10;;1404:177;1425:5;1421:1;:9;1404:177;;;1461:19;1473:6;1461:11;:19::i;:::-;1451:29;;1506:24;;;;;;;;1514:7;1506:24;;;;1523:6;1506:24;;;1494:6;1501:1;1494:9;;;;;;;;;;;;;:36;;;;1563:7;1554:6;:16;1545:25;;1432:3;;;;;;;1404:177;;;;1113:474;;;;;;:::o;2995:531::-;3055:4;3090:1;3079:4;:8;;;:12;:30;;;;;3107:2;3095:4;:8;;;:14;;3079:30;3071:39;;;;;;3121:11;3135:27;3150:4;:11;;;3135:14;:27::i;:::-;3121:41;;3172:8;3194:6;3183:4;:8;;;:17;3172:28;;3211:11;3232;3260:6;3246:4;:11;;;:20;3232:34;;3315:6;3309:13;3299:23;;3405:2;3400:3;3397:11;3394:2;;;3466:3;3462:2;3458:12;3453:3;3449:22;3441:6;3437:35;3427:45;;3394:2;3513:6;3506:13;;;;;;2995:531;;;:::o;2798:191::-;2861:7;2940:2;2928:4;:8;;;:14;2920:23;;;;;;2969:12;2976:4;2969:6;:12::i;:::-;2954:28;;2798:191;;;:::o;3858:431::-;3919:12;3962:1;3951:4;:8;;;:12;3943:21;;;;;;3975:11;3989:27;4004:4;:11;;;3989:14;:27::i;:::-;3975:41;;4026:8;4048:6;4037:4;:8;;;:17;4026:28;;4079:19;4111:3;4101:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;4101:14:25;;;;4079:36;;4126:12;4192:6;4186:4;4182:17;4171:28;;4219:40;4238:6;4224:4;:11;;;:20;4246:7;4255:3;4219:4;:40::i;:::-;4276:6;4269:13;;;;;;3858:431;;;:::o;3072:380:5:-;3209:1;3181:18;:25;;;;:29;3173:51;;;;;;;;;;;;;;;;;;;;;;3231:15;3249:18;:25;;;;3231:43;;3280:10;3293:1;3280:14;;3305:6;3314:1;3305:10;;3300:91;3321:10;3317:1;:14;3300:91;;;3355:18;3374:1;3355:21;;;;;;;;;;;;;;;;;;:29;;;3346:38;;;;3333:3;;;;;;;3300:91;;;;3413:3;3404:5;:12;3396:47;;;;;;;;;;;;;;;;;;;;;;3072:380;;;:::o;1691:330:25:-;1751:4;1783:1;1771:4;:8;;;:13;1767:31;;;1793:5;1786:12;;;;1767:31;1809:11;1830;1844:4;:11;;;1830:25;;1911:6;1905:13;1902:1;1897:22;1888:31;;279:4;1943:24;;:5;:24;;;1939:54;;;1988:5;1981:12;;;;;;1939:54;2010:4;2003:11;;;;1691:330;;;;:::o;4395:410::-;4456:4;4488:1;4476:4;:8;;;:13;4472:27;;;4498:1;4491:8;;;;4472:27;4510:10;4523:1;4510:14;;4534:12;4563:27;4578:4;:11;;;4563:14;:27::i;:::-;4549:4;:11;;;:41;4534:56;;4600:11;4628:4;:8;;;4614:4;:11;;;:22;4600:36;;4646:130;4663:6;4653:7;:16;4646:130;;;4704:20;4716:7;4704:11;:20::i;:::-;4694:7;:30;4684:40;;4758:7;;;;;;;4646:130;;;4793:5;4786:12;;;;;4395:410;;;;:::o;6134:538::-;6193:4;6209:10;6275:6;6269:13;6266:1;6261:22;6252:31;;187:4;6307:26;;:5;:26;6303:362;;;6355:1;6348:8;;;;;6303:362;233:4;6375:25;;:5;:25;:83;;;;279:4;6405:25;;:5;:25;;:52;;;;;325:4;6434:23;;:5;:23;6405:52;6375:83;6371:294;;;6479:1;6472:8;;;;;6371:294;279:4;6499:24;;:5;:24;6495:170;;;6597:1;6592;233:4;6572:21;6563:31;;:5;:31;:35;6556:42;;;;;6495:170;6664:1;6659;325:4;6641:19;6632:29;;:5;:29;:33;6625:40;;;6134:538;;;;:::o;4854:1228::-;4910:8;4930:10;4996:6;4990:13;4987:1;4982:22;4973:31;;187:4;5028:26;;:5;:26;5024:1052;;;5075:1;5068:8;;;;;5024:1052;233:4;5104:25;;:5;:25;5100:976;;;5179:1;187:4;5150:26;;:5;:26;:30;5143:37;;;;;5100:976;279:4;5200:24;;:5;:24;5196:880;;;5293:4;5286:5;5282:16;5372:1;5364:6;5360:14;5350:24;;5527:7;5523:2;5519:16;5514:3;5510:26;5501:6;5495:13;5491:46;5620:1;5611:7;5607:15;5598:7;5594:29;5587:36;;5249:388;;;;;325:4;5666:23;;:5;:23;5662:414;;;5739:1;279:4;5712:24;;:5;:24;:28;5705:35;;;;;5662:414;5834:4;5827:5;5823:16;5878:1;5870:6;5866:14;5856:24;;5949:7;5945:2;5941:16;5936:3;5932:26;5923:6;5917:13;5913:46;6049:1;6040:7;6036:15;6027:7;6023:29;6016:36;;5790:276;;5196:880;4854:1228;;;;;:::o;6826:697::-;6905:1;6898:3;:8;6894:21;;;6908:7;;6894:21;6972:194;363:2;6979:16;;:3;:16;6972:194;;7075:3;7069:10;7063:4;7056:24;363:2;7108:16;;;;;;363:2;7138:17;;;;;;363:2;6997:16;;;;;;6972:194;;;7256:9;7295:1;7288:3;363:2;7276:15;;;7268:3;:24;:28;7256:40;;7364:4;7360:9;7354:3;7348:10;7344:26;7432:4;7425;7419:11;7415:22;7498:7;7488:8;7485:21;7479:4;7472:35;7315:202;;;;;;;:::o;336:2005:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:118;;197:46;235:6;222:20;197:46;;;188:55;;182:66;;;;;256:440;;357:3;350:4;342:6;338:17;334:27;324:2;;375:1;372;365:12;324:2;412:6;399:20;434:64;449:48;490:6;449:48;;;434:64;;;425:73;;518:6;511:5;504:21;554:4;546:6;542:17;587:4;580:5;576:16;622:3;613:6;608:3;604:16;601:25;598:2;;;639:1;636;629:12;598:2;649:41;683:6;678:3;673;649:41;;;317:379;;;;;;;;705:442;;807:3;800:4;792:6;788:17;784:27;774:2;;825:1;822;815:12;774:2;862:6;849:20;884:65;899:49;941:6;899:49;;;884:65;;;875:74;;969:6;962:5;955:21;1005:4;997:6;993:17;1038:4;1031:5;1027:16;1073:3;1064:6;1059:3;1055:16;1052:25;1049:2;;;1090:1;1087;1080:12;1049:2;1100:41;1134:6;1129:3;1124;1100:41;;;767:380;;;;;;;;1155:118;;1222:46;1260:6;1247:20;1222:46;;;1213:55;;1207:66;;;;;1280:241;;1384:2;1372:9;1363:7;1359:23;1355:32;1352:2;;;1400:1;1397;1390:12;1352:2;1435:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;;;1442:63;;1414:97;1346:175;;;;;1528:366;;;1649:2;1637:9;1628:7;1624:23;1620:32;1617:2;;;1665:1;1662;1655:12;1617:2;1700:1;1717:53;1762:7;1753:6;1742:9;1738:22;1717:53;;;1707:63;;1679:97;1807:2;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;;;1815:63;;1786:98;1611:283;;;;;;1901:491;;;;2039:2;2027:9;2018:7;2014:23;2010:32;2007:2;;;2055:1;2052;2045:12;2007:2;2090:1;2107:53;2152:7;2143:6;2132:9;2128:22;2107:53;;;2097:63;;2069:97;2197:2;2215:53;2260:7;2251:6;2240:9;2236:22;2215:53;;;2205:63;;2176:98;2305:2;2323:53;2368:7;2359:6;2348:9;2344:22;2323:53;;;2313:63;;2284:98;2001:391;;;;;;2399:366;;;2520:2;2508:9;2499:7;2495:23;2491:32;2488:2;;;2536:1;2533;2526:12;2488:2;2571:1;2588:53;2633:7;2624:6;2613:9;2609:22;2588:53;;;2578:63;;2550:97;2678:2;2696:53;2741:7;2732:6;2721:9;2717:22;2696:53;;;2686:63;;2657:98;2482:283;;;;;;2772:366;;;2893:2;2881:9;2872:7;2868:23;2864:32;2861:2;;;2909:1;2906;2899:12;2861:2;2944:1;2961:53;3006:7;2997:6;2986:9;2982:22;2961:53;;;2951:63;;2923:97;3051:2;3069:53;3114:7;3105:6;3094:9;3090:22;3069:53;;;3059:63;;3030:98;2855:283;;;;;;3145:491;;;;3283:2;3271:9;3262:7;3258:23;3254:32;3251:2;;;3299:1;3296;3289:12;3251:2;3334:1;3351:53;3396:7;3387:6;3376:9;3372:22;3351:53;;;3341:63;;3313:97;3441:2;3459:53;3504:7;3495:6;3484:9;3480:22;3459:53;;;3449:63;;3420:98;3549:2;3567:53;3612:7;3603:6;3592:9;3588:22;3567:53;;;3557:63;;3528:98;3245:391;;;;;;3643:241;;3747:2;3735:9;3726:7;3722:23;3718:32;3715:2;;;3763:1;3760;3753:12;3715:2;3798:1;3815:53;3860:7;3851:6;3840:9;3836:22;3815:53;;;3805:63;;3777:97;3709:175;;;;;3891:849;;;;;;4073:3;4061:9;4052:7;4048:23;4044:33;4041:2;;;4090:1;4087;4080:12;4041:2;4125:1;4142:53;4187:7;4178:6;4167:9;4163:22;4142:53;;;4132:63;;4104:97;4232:2;4250:53;4295:7;4286:6;4275:9;4271:22;4250:53;;;4240:63;;4211:98;4340:2;4358:53;4403:7;4394:6;4383:9;4379:22;4358:53;;;4348:63;;4319:98;4448:2;4466:53;4511:7;4502:6;4491:9;4487:22;4466:53;;;4456:63;;4427:98;4584:3;4573:9;4569:19;4556:33;4609:18;4601:6;4598:30;4595:2;;;4641:1;4638;4631:12;4595:2;4661:63;4716:7;4707:6;4696:9;4692:22;4661:63;;;4651:73;;4535:195;4035:705;;;;;;;;;4747:1081;;;;;;;4956:3;4944:9;4935:7;4931:23;4927:33;4924:2;;;4973:1;4970;4963:12;4924:2;5008:1;5025:53;5070:7;5061:6;5050:9;5046:22;5025:53;;;5015:63;;4987:97;5115:2;5133:53;5178:7;5169:6;5158:9;5154:22;5133:53;;;5123:63;;5094:98;5223:2;5241:53;5286:7;5277:6;5266:9;5262:22;5241:53;;;5231:63;;5202:98;5331:2;5349:53;5394:7;5385:6;5374:9;5370:22;5349:53;;;5339:63;;5310:98;5467:3;5456:9;5452:19;5439:33;5492:18;5484:6;5481:30;5478:2;;;5524:1;5521;5514:12;5478:2;5544:63;5599:7;5590:6;5579:9;5575:22;5544:63;;;5534:73;;5418:195;5672:3;5661:9;5657:19;5644:33;5697:18;5689:6;5686:30;5683:2;;;5729:1;5726;5719:12;5683:2;5749:63;5804:7;5795:6;5784:9;5780:22;5749:63;;;5739:73;;5623:195;4918:910;;;;;;;;;5835:345;;5948:2;5936:9;5927:7;5923:23;5919:32;5916:2;;;5964:1;5961;5954:12;5916:2;6027:1;6016:9;6012:17;5999:31;6050:18;6042:6;6039:30;6036:2;;;6082:1;6079;6072:12;6036:2;6102:62;6156:7;6147:6;6136:9;6132:22;6102:62;;;6092:72;;5978:192;5910:270;;;;;6187:241;;6291:2;6279:9;6270:7;6266:23;6262:32;6259:2;;;6307:1;6304;6297:12;6259:2;6342:1;6359:53;6404:7;6395:6;6384:9;6380:22;6359:53;;;6349:63;;6321:97;6253:175;;;;;6435:470;;;6565:2;6553:9;6544:7;6540:23;6536:32;6533:2;;;6581:1;6578;6571:12;6533:2;6616:1;6633:53;6678:7;6669:6;6658:9;6654:22;6633:53;;;6623:63;;6595:97;6751:2;6740:9;6736:18;6723:32;6775:18;6767:6;6764:30;6761:2;;;6807:1;6804;6797:12;6761:2;6827:62;6881:7;6872:6;6861:9;6857:22;6827:62;;;6817:72;;6702:193;6527:378;;;;;;6912:366;;;7033:2;7021:9;7012:7;7008:23;7004:32;7001:2;;;7049:1;7046;7039:12;7001:2;7084:1;7101:53;7146:7;7137:6;7126:9;7122:22;7101:53;;;7091:63;;7063:97;7191:2;7209:53;7254:7;7245:6;7234:9;7230:22;7209:53;;;7199:63;;7170:98;6995:283;;;;;;7285:491;;;;7423:2;7411:9;7402:7;7398:23;7394:32;7391:2;;;7439:1;7436;7429:12;7391:2;7474:1;7491:53;7536:7;7527:6;7516:9;7512:22;7491:53;;;7481:63;;7453:97;7581:2;7599:53;7644:7;7635:6;7624:9;7620:22;7599:53;;;7589:63;;7560:98;7689:2;7707:53;7752:7;7743:6;7732:9;7728:22;7707:53;;;7697:63;;7668:98;7385:391;;;;;;7783:723;;;;;7948:3;7936:9;7927:7;7923:23;7919:33;7916:2;;;7965:1;7962;7955:12;7916:2;8000:1;8017:53;8062:7;8053:6;8042:9;8038:22;8017:53;;;8007:63;;7979:97;8107:2;8125:53;8170:7;8161:6;8150:9;8146:22;8125:53;;;8115:63;;8086:98;8215:2;8233:53;8278:7;8269:6;8258:9;8254:22;8233:53;;;8223:63;;8194:98;8351:2;8340:9;8336:18;8323:32;8375:18;8367:6;8364:30;8361:2;;;8407:1;8404;8397:12;8361:2;8427:63;8482:7;8473:6;8462:9;8458:22;8427:63;;;8417:73;;8302:194;7910:596;;;;;;;;8513:955;;;;;;8705:3;8693:9;8684:7;8680:23;8676:33;8673:2;;;8722:1;8719;8712:12;8673:2;8757:1;8774:53;8819:7;8810:6;8799:9;8795:22;8774:53;;;8764:63;;8736:97;8864:2;8882:53;8927:7;8918:6;8907:9;8903:22;8882:53;;;8872:63;;8843:98;8972:2;8990:53;9035:7;9026:6;9015:9;9011:22;8990:53;;;8980:63;;8951:98;9108:2;9097:9;9093:18;9080:32;9132:18;9124:6;9121:30;9118:2;;;9164:1;9161;9154:12;9118:2;9184:63;9239:7;9230:6;9219:9;9215:22;9184:63;;;9174:73;;9059:194;9312:3;9301:9;9297:19;9284:33;9337:18;9329:6;9326:30;9323:2;;;9369:1;9366;9359:12;9323:2;9389:63;9444:7;9435:6;9424:9;9420:22;9389:63;;;9379:73;;9263:195;8667:801;;;;;;;;;9476:225;;9611:84;9691:3;9683:6;9611:84;;;9597:98;;9590:111;;;;;9710:281;;9873:112;9981:3;9973:6;9873:112;;;9859:126;;9852:139;;;;;10000:233;;10139:88;10223:3;10215:6;10139:88;;;10125:102;;10118:115;;;;;10242:173;;10329:46;10371:3;10363:6;10329:46;;;10404:4;10399:3;10395:14;10381:28;;10322:93;;;;;10423:110;10496:31;10521:5;10496:31;;;10491:3;10484:44;10478:55;;;10540:120;10623:31;10648:5;10623:31;;;10618:3;10611:44;10605:55;;;10722:915;;10901:71;10966:5;10901:71;;;10985:103;11081:6;11076:3;10985:103;;;10978:110;;11111:3;11153:4;11145:6;11141:17;11136:3;11132:27;11179:73;11246:5;11179:73;;;11273:1;11258:340;11283:6;11280:1;11277:13;11258:340;;;11345:9;11339:4;11335:20;11330:3;11323:33;11371:98;11464:4;11455:6;11449:13;11371:98;;;11363:106;;11486:77;11556:6;11486:77;;;11476:87;;11586:4;11581:3;11577:14;11570:21;;11305:1;11302;11298:9;11293:14;;11258:340;;;11262:14;11611:4;11604:11;;11628:3;11621:10;;10880:757;;;;;;;;;11726:991;;11919:81;11994:5;11919:81;;;12013:107;12113:6;12108:3;12013:107;;;12006:114;;12143:3;12185:4;12177:6;12173:17;12168:3;12164:27;12211:83;12288:5;12211:83;;;12315:1;12300:378;12325:6;12322:1;12319:13;12300:378;;;12387:9;12381:4;12377:20;12372:3;12365:33;12413:126;12534:4;12525:6;12519:13;12413:126;;;12405:134;;12556:87;12636:6;12556:87;;;12546:97;;12666:4;12661:3;12657:14;12650:21;;12347:1;12344;12340:9;12335:14;;12300:378;;;12304:14;12691:4;12684:11;;12708:3;12701:10;;11898:819;;;;;;;;;12784:931;;12967:73;13034:5;12967:73;;;13053:105;13151:6;13146:3;13053:105;;;13046:112;;13181:3;13223:4;13215:6;13211:17;13206:3;13202:27;13249:75;13318:5;13249:75;;;13345:1;13330:346;13355:6;13352:1;13349:13;13330:346;;;13417:9;13411:4;13407:20;13402:3;13395:33;13443:102;13540:4;13531:6;13525:13;13443:102;;;13435:110;;13562:79;13634:6;13562:79;;;13552:89;;13664:4;13659:3;13655:14;13648:21;;13377:1;13374;13370:9;13365:14;;13330:346;;;13334:14;13689:4;13682:11;;13706:3;13699:10;;12946:769;;;;;;;;;13754:621;;13899:54;13947:5;13899:54;;;13966:86;14045:6;14040:3;13966:86;;;13959:93;;14072:56;14122:5;14072:56;;;14149:1;14134:219;14159:6;14156:1;14153:13;14134:219;;;14206:63;14265:3;14256:6;14250:13;14206:63;;;14199:70;;14286:60;14339:6;14286:60;;;14276:70;;14181:1;14178;14174:9;14169:14;;14134:219;;;14138:14;14366:3;14359:10;;13878:497;;;;;;;14383:101;14450:28;14472:5;14450:28;;;14445:3;14438:41;14432:52;;;14491:111;14568:28;14590:5;14568:28;;;14563:3;14556:41;14550:52;;;14609:347;;14721:39;14754:5;14721:39;;;14772:71;14836:6;14831:3;14772:71;;;14765:78;;14848:52;14893:6;14888:3;14881:4;14874:5;14870:16;14848:52;;;14921:29;14943:6;14921:29;;;14916:3;14912:39;14905:46;;14701:255;;;;;;14963:319;;15061:35;15090:5;15061:35;;;15108:61;15162:6;15157:3;15108:61;;;15101:68;;15174:52;15219:6;15214:3;15207:4;15200:5;15196:16;15174:52;;;15247:29;15269:6;15247:29;;;15242:3;15238:39;15231:46;;15041:241;;;;;;15290:364;;15450:67;15514:2;15509:3;15450:67;;;15443:74;;15550:66;15546:1;15541:3;15537:11;15530:87;15645:2;15640:3;15636:12;15629:19;;15436:218;;;;15663:364;;15823:67;15887:2;15882:3;15823:67;;;15816:74;;15923:66;15919:1;15914:3;15910:11;15903:87;16018:2;16013:3;16009:12;16002:19;;15809:218;;;;16036:363;;16196:66;16260:1;16255:3;16196:66;;;16189:73;;16295:66;16291:1;16286:3;16282:11;16275:87;16390:2;16385:3;16381:12;16374:19;;16182:217;;;;16408:364;;16568:67;16632:2;16627:3;16568:67;;;16561:74;;16668:66;16664:1;16659:3;16655:11;16648:87;16763:2;16758:3;16754:12;16747:19;;16554:218;;;;16781:364;;16941:67;17005:2;17000:3;16941:67;;;16934:74;;17041:66;17037:1;17032:3;17028:11;17021:87;17136:2;17131:3;17127:12;17120:19;;16927:218;;;;17154:363;;17314:66;17378:1;17373:3;17314:66;;;17307:73;;17413:66;17409:1;17404:3;17400:11;17393:87;17508:2;17503:3;17499:12;17492:19;;17300:217;;;;17526:364;;17686:67;17750:2;17745:3;17686:67;;;17679:74;;17786:66;17782:1;17777:3;17773:11;17766:87;17881:2;17876:3;17872:12;17865:19;;17672:218;;;;17899:363;;18059:66;18123:1;18118:3;18059:66;;;18052:73;;18158:66;18154:1;18149:3;18145:11;18138:87;18253:2;18248:3;18244:12;18237:19;;18045:217;;;;18271:363;;18431:66;18495:1;18490:3;18431:66;;;18424:73;;18530:66;18526:1;18521:3;18517:11;18510:87;18625:2;18620:3;18616:12;18609:19;;18417:217;;;;18643:364;;18803:67;18867:2;18862:3;18803:67;;;18796:74;;18903:66;18899:1;18894:3;18890:11;18883:87;18998:2;18993:3;18989:12;18982:19;;18789:218;;;;19016:364;;19176:67;19240:2;19235:3;19176:67;;;19169:74;;19276:66;19272:1;19267:3;19263:11;19256:87;19371:2;19366:3;19362:12;19355:19;;19162:218;;;;19389:363;;19549:66;19613:1;19608:3;19549:66;;;19542:73;;19648:66;19644:1;19639:3;19635:11;19628:87;19743:2;19738:3;19734:12;19727:19;;19535:217;;;;19761:364;;19921:67;19985:2;19980:3;19921:67;;;19914:74;;20021:66;20017:1;20012:3;20008:11;20001:87;20116:2;20111:3;20107:12;20100:19;;19907:218;;;;20134:364;;20294:67;20358:2;20353:3;20294:67;;;20287:74;;20394:66;20390:1;20385:3;20381:11;20374:87;20489:2;20484:3;20480:12;20473:19;;20280:218;;;;20507:364;;20667:67;20731:2;20726:3;20667:67;;;20660:74;;20767:66;20763:1;20758:3;20754:11;20747:87;20862:2;20857:3;20853:12;20846:19;;20653:218;;;;20880:364;;21040:67;21104:2;21099:3;21040:67;;;21033:74;;21140:66;21136:1;21131:3;21127:11;21120:87;21235:2;21230:3;21226:12;21219:19;;21026:218;;;;21253:364;;21413:67;21477:2;21472:3;21413:67;;;21406:74;;21513:66;21509:1;21504:3;21500:11;21493:87;21608:2;21603:3;21599:12;21592:19;;21399:218;;;;21626:364;;21786:67;21850:2;21845:3;21786:67;;;21779:74;;21886:66;21882:1;21877:3;21873:11;21866:87;21981:2;21976:3;21972:12;21965:19;;21772:218;;;;21999:364;;22159:67;22223:2;22218:3;22159:67;;;22152:74;;22259:66;22255:1;22250:3;22246:11;22239:87;22354:2;22349:3;22345:12;22338:19;;22145:218;;;;22372:364;;22532:67;22596:2;22591:3;22532:67;;;22525:74;;22632:66;22628:1;22623:3;22619:11;22612:87;22727:2;22722:3;22718:12;22711:19;;22518:218;;;;22793:1093;;22922:4;22917:3;22913:14;23014:3;23007:5;23003:15;22997:22;23025:61;23081:3;23076;23072:13;23059:11;23025:61;;;22942:150;23167:4;23160:5;23156:16;23150:23;23179:62;23235:4;23230:3;23226:14;23213:11;23179:62;;;23102:145;23323:4;23316:5;23312:16;23306:23;23335:62;23391:4;23386:3;23382:14;23369:11;23335:62;;;23257:146;23477:4;23470:5;23466:16;23460:23;23529:3;23523:4;23519:14;23512:4;23507:3;23503:14;23496:38;23549:68;23612:4;23599:11;23549:68;;;23541:76;;23413:216;23708:4;23701:5;23697:16;23691:23;23760:3;23754:4;23750:14;23743:4;23738:3;23734:14;23727:38;23780:68;23843:4;23830:11;23780:68;;;23772:76;;23639:221;23877:4;23870:11;;22895:991;;;;;;23968:733;;24125:4;24120:3;24116:14;24210:3;24203:5;24199:15;24193:22;24221:61;24277:3;24272;24268:13;24255:11;24221:61;;;24145:143;24364:4;24357:5;24353:16;24347:23;24376:62;24432:4;24427:3;24423:14;24410:11;24376:62;;;24298:146;24523:4;24516:5;24512:16;24506:23;24575:3;24569:4;24565:14;24558:4;24553:3;24549:14;24542:38;24595:68;24658:4;24645:11;24595:68;;;24587:76;;24454:221;24692:4;24685:11;;24098:603;;;;;;24761:1097;;24894:4;24889:3;24885:14;24986:3;24979:5;24975:15;24969:22;24997:61;25053:3;25048;25044:13;25031:11;24997:61;;;24914:150;25139:4;25132:5;25128:16;25122:23;25151:62;25207:4;25202:3;25198:14;25185:11;25151:62;;;25074:145;25295:4;25288:5;25284:16;25278:23;25307:62;25363:4;25358:3;25354:14;25341:11;25307:62;;;25229:146;25449:4;25442:5;25438:16;25432:23;25501:3;25495:4;25491:14;25484:4;25479:3;25475:14;25468:38;25521:68;25584:4;25571:11;25521:68;;;25513:76;;25385:216;25680:4;25673:5;25669:16;25663:23;25732:3;25726:4;25722:14;25715:4;25710:3;25706:14;25699:38;25752:68;25815:4;25802:11;25752:68;;;25744:76;;25611:221;25849:4;25842:11;;24867:991;;;;;;25918:1293;;26067:4;26062:3;26058:14;26159:3;26152:5;26148:15;26142:22;26170:61;26226:3;26221;26217:13;26204:11;26170:61;;;26087:150;26313:4;26306:5;26302:16;26296:23;26325:62;26381:4;26376:3;26372:14;26359:11;26325:62;;;26247:146;26467:4;26460:5;26456:16;26450:23;26479:62;26535:4;26530:3;26526:14;26513:11;26479:62;;;26403:144;26628:4;26621:5;26617:16;26611:23;26640:62;26696:4;26691:3;26687:14;26674:11;26640:62;;;26557:151;26794:4;26787:5;26783:16;26777:23;26846:3;26840:4;26836:14;26829:4;26824:3;26820:14;26813:38;26866:160;27021:4;27008:11;26866:160;;;26858:168;;26718:320;27111:4;27104:5;27100:16;27094:23;27123:56;27173:4;27168:3;27164:14;27151:11;27123:56;;;27048:137;27202:4;27195:11;;26040:1171;;;;;;27218:110;27291:31;27316:5;27291:31;;;27286:3;27279:44;27273:55;;;27335:120;27418:31;27443:5;27418:31;;;27413:3;27406:44;27400:55;;;27462:114;27541:29;27564:5;27541:29;;;27536:3;27529:42;27523:53;;;27583:213;;27701:2;27690:9;27686:18;27678:26;;27715:71;27783:1;27772:9;27768:17;27759:6;27715:71;;;27672:124;;;;;27803:435;;27977:2;27966:9;27962:18;27954:26;;27991:71;28059:1;28048:9;28044:17;28035:6;27991:71;;;28073:72;28141:2;28130:9;28126:18;28117:6;28073:72;;;28156;28224:2;28213:9;28209:18;28200:6;28156:72;;;27948:290;;;;;;;28245:429;;28447:2;28436:9;28432:18;28424:26;;28497:9;28491:4;28487:20;28483:1;28472:9;28468:17;28461:47;28522:142;28659:4;28650:6;28522:142;;;28514:150;;28418:256;;;;;28681:437;;28887:2;28876:9;28872:18;28864:26;;28937:9;28931:4;28927:20;28923:1;28912:9;28908:17;28901:47;28962:146;29103:4;29094:6;28962:146;;;28954:154;;28858:260;;;;;29125:361;;29293:2;29282:9;29278:18;29270:26;;29343:9;29337:4;29333:20;29329:1;29318:9;29314:17;29307:47;29368:108;29471:4;29462:6;29368:108;;;29360:116;;29264:222;;;;;29493:201;;29605:2;29594:9;29590:18;29582:26;;29619:65;29681:1;29670:9;29666:17;29657:6;29619:65;;;29576:118;;;;;29701:301;;29839:2;29828:9;29824:18;29816:26;;29889:9;29883:4;29879:20;29875:1;29864:9;29860:17;29853:47;29914:78;29987:4;29978:6;29914:78;;;29906:86;;29810:192;;;;;30009:407;;30200:2;30189:9;30185:18;30177:26;;30250:9;30244:4;30240:20;30236:1;30225:9;30221:17;30214:47;30275:131;30401:4;30275:131;;;30267:139;;30171:245;;;;30423:407;;30614:2;30603:9;30599:18;30591:26;;30664:9;30658:4;30654:20;30650:1;30639:9;30635:17;30628:47;30689:131;30815:4;30689:131;;;30681:139;;30585:245;;;;30837:407;;31028:2;31017:9;31013:18;31005:26;;31078:9;31072:4;31068:20;31064:1;31053:9;31049:17;31042:47;31103:131;31229:4;31103:131;;;31095:139;;30999:245;;;;31251:407;;31442:2;31431:9;31427:18;31419:26;;31492:9;31486:4;31482:20;31478:1;31467:9;31463:17;31456:47;31517:131;31643:4;31517:131;;;31509:139;;31413:245;;;;31665:407;;31856:2;31845:9;31841:18;31833:26;;31906:9;31900:4;31896:20;31892:1;31881:9;31877:17;31870:47;31931:131;32057:4;31931:131;;;31923:139;;31827:245;;;;32079:407;;32270:2;32259:9;32255:18;32247:26;;32320:9;32314:4;32310:20;32306:1;32295:9;32291:17;32284:47;32345:131;32471:4;32345:131;;;32337:139;;32241:245;;;;32493:407;;32684:2;32673:9;32669:18;32661:26;;32734:9;32728:4;32724:20;32720:1;32709:9;32705:17;32698:47;32759:131;32885:4;32759:131;;;32751:139;;32655:245;;;;32907:407;;33098:2;33087:9;33083:18;33075:26;;33148:9;33142:4;33138:20;33134:1;33123:9;33119:17;33112:47;33173:131;33299:4;33173:131;;;33165:139;;33069:245;;;;33321:407;;33512:2;33501:9;33497:18;33489:26;;33562:9;33556:4;33552:20;33548:1;33537:9;33533:17;33526:47;33587:131;33713:4;33587:131;;;33579:139;;33483:245;;;;33735:407;;33926:2;33915:9;33911:18;33903:26;;33976:9;33970:4;33966:20;33962:1;33951:9;33947:17;33940:47;34001:131;34127:4;34001:131;;;33993:139;;33897:245;;;;34149:407;;34340:2;34329:9;34325:18;34317:26;;34390:9;34384:4;34380:20;34376:1;34365:9;34361:17;34354:47;34415:131;34541:4;34415:131;;;34407:139;;34311:245;;;;34563:407;;34754:2;34743:9;34739:18;34731:26;;34804:9;34798:4;34794:20;34790:1;34779:9;34775:17;34768:47;34829:131;34955:4;34829:131;;;34821:139;;34725:245;;;;34977:407;;35168:2;35157:9;35153:18;35145:26;;35218:9;35212:4;35208:20;35204:1;35193:9;35189:17;35182:47;35243:131;35369:4;35243:131;;;35235:139;;35139:245;;;;35391:407;;35582:2;35571:9;35567:18;35559:26;;35632:9;35626:4;35622:20;35618:1;35607:9;35603:17;35596:47;35657:131;35783:4;35657:131;;;35649:139;;35553:245;;;;35805:407;;35996:2;35985:9;35981:18;35973:26;;36046:9;36040:4;36036:20;36032:1;36021:9;36017:17;36010:47;36071:131;36197:4;36071:131;;;36063:139;;35967:245;;;;36219:407;;36410:2;36399:9;36395:18;36387:26;;36460:9;36454:4;36450:20;36446:1;36435:9;36431:17;36424:47;36485:131;36611:4;36485:131;;;36477:139;;36381:245;;;;36633:407;;36824:2;36813:9;36809:18;36801:26;;36874:9;36868:4;36864:20;36860:1;36849:9;36845:17;36838:47;36899:131;37025:4;36899:131;;;36891:139;;36795:245;;;;37047:407;;37238:2;37227:9;37223:18;37215:26;;37288:9;37282:4;37278:20;37274:1;37263:9;37259:17;37252:47;37313:131;37439:4;37313:131;;;37305:139;;37209:245;;;;37461:407;;37652:2;37641:9;37637:18;37629:26;;37702:9;37696:4;37692:20;37688:1;37677:9;37673:17;37666:47;37727:131;37853:4;37727:131;;;37719:139;;37623:245;;;;37875:407;;38066:2;38055:9;38051:18;38043:26;;38116:9;38110:4;38106:20;38102:1;38091:9;38087:17;38080:47;38141:131;38267:4;38141:131;;;38133:139;;38037:245;;;;38289:357;;38455:2;38444:9;38440:18;38432:26;;38505:9;38499:4;38495:20;38491:1;38480:9;38476:17;38469:47;38530:106;38631:4;38622:6;38530:106;;;38522:114;;38426:220;;;;;38653:213;;38771:2;38760:9;38756:18;38748:26;;38785:71;38853:1;38842:9;38838:17;38829:6;38785:71;;;38742:124;;;;;38873:535;;39069:3;39058:9;39054:19;39046:27;;39084:71;39152:1;39141:9;39137:17;39128:6;39084:71;;;39166:72;39234:2;39223:9;39219:18;39210:6;39166:72;;;39249;39317:2;39306:9;39302:18;39293:6;39249:72;;;39332:66;39394:2;39383:9;39379:18;39370:6;39332:66;;;39040:368;;;;;;;;39415:205;;39529:2;39518:9;39514:18;39506:26;;39543:67;39607:1;39596:9;39592:17;39583:6;39543:67;;;39500:120;;;;;39627:256;;39689:2;39683:9;39673:19;;39727:4;39719:6;39715:17;39826:6;39814:10;39811:22;39790:18;39778:10;39775:34;39772:62;39769:2;;;39847:1;39844;39837:12;39769:2;39867:10;39863:2;39856:22;39667:216;;;;;39890:258;;40033:18;40025:6;40022:30;40019:2;;;40065:1;40062;40055:12;40019:2;40109:4;40105:9;40098:4;40090:6;40086:17;40082:33;40074:41;;40138:4;40132;40128:15;40120:23;;39956:192;;;;40155:259;;40299:18;40291:6;40288:30;40285:2;;;40331:1;40328;40321:12;40285:2;40375:4;40371:9;40364:4;40356:6;40352:17;40348:33;40340:41;;40404:4;40398;40394:15;40386:23;;40222:192;;;;40423:138;;40549:4;40541:6;40537:17;40526:28;;40518:43;;;;40572:148;;40708:4;40700:6;40696:17;40685:28;;40677:43;;;;40731:140;;40859:4;40851:6;40847:17;40836:28;;40828:43;;;;40882:121;;40991:4;40983:6;40979:17;40968:28;;40960:43;;;;41012:124;;41125:5;41119:12;41109:22;;41103:33;;;;41143:134;;41266:5;41260:12;41250:22;;41244:33;;;;41284:126;;41399:5;41393:12;41383:22;;41377:33;;;;41417:107;;41513:5;41507:12;41497:22;;41491:33;;;;41531:88;;41608:5;41602:12;41592:22;;41586:33;;;;41626:92;;41707:5;41701:12;41691:22;;41685:33;;;;41726:139;;41854:4;41846:6;41842:17;41831:28;;41824:41;;;;41874:149;;42012:4;42004:6;42000:17;41989:28;;41982:41;;;;42032:141;;42162:4;42154:6;42150:17;42139:28;;42132:41;;;;42182:122;;42293:4;42285:6;42281:17;42270:28;;42263:41;;;;42313:195;;42460:6;42455:3;42448:19;42497:4;42492:3;42488:14;42473:29;;42441:67;;;;;42517:199;;42668:6;42663:3;42656:19;42705:4;42700:3;42696:14;42681:29;;42649:67;;;;;42725:197;;42874:6;42869:3;42862:19;42911:4;42906:3;42902:14;42887:29;;42855:67;;;;;42931:178;;43061:6;43056:3;43049:19;43098:4;43093:3;43089:14;43074:29;;43042:67;;;;;43118:153;;43223:6;43218:3;43211:19;43260:4;43255:3;43251:14;43236:29;;43204:67;;;;;43280:163;;43395:6;43390:3;43383:19;43432:4;43427:3;43423:14;43408:29;;43376:67;;;;;43451:105;;43520:31;43545:5;43520:31;;;43509:42;;43503:53;;;;43563:92;;43643:5;43636:13;43629:21;43618:32;;43612:43;;;;43662:128;;43742:42;43735:5;43731:54;43720:65;;43714:76;;;;43797:79;;43866:5;43855:16;;43849:27;;;;43883:88;;43961:4;43954:5;43950:16;43939:27;;43933:38;;;;43978:105;;44047:31;44072:5;44047:31;;;44036:42;;44030:53;;;;44090:79;;44159:5;44148:16;;44142:27;;;;44176:128;;44256:42;44249:5;44245:54;44234:65;;44228:76;;;;44311:79;;44380:5;44369:16;;44363:27;;;;44398:145;44479:6;44474:3;44469;44456:30;44535:1;44526:6;44521:3;44517:16;44510:27;44449:94;;;;44552:268;44617:1;44624:101;44638:6;44635:1;44632:13;44624:101;;;44714:1;44709:3;44705:11;44699:18;44695:1;44690:3;44686:11;44679:39;44660:2;44657:1;44653:10;44648:15;;44624:101;;;44740:6;44737:1;44734:13;44731:2;;;44805:1;44796:6;44791:3;44787:16;44780:27;44731:2;44601:219;;;;;44828:97;;44916:2;44912:7;44907:2;44900:5;44896:14;44892:28;44882:38;;44876:49;;;",
  "source": "pragma solidity ^0.5.2;\npragma experimental ABIEncoderV2;\n\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"./Devices.sol\";\n\ncontract PrepaidCardManager is SignerRole, Ownable , Devices {\n  using SafeMath for uint256;\n\n  event CardValidated(\n    address indexed owner,\n    uint256 cardId,\n    address indexed user\n  );\n\n  struct Card {\n    bytes32 hash;\n    uint256 cardId;  \n    uint256 tokens;\n    bool active;\n    address owner;\n    uint initialized;\n  }\n\n  mapping (uint256 => Card) private cards_;\n  mapping (bytes32 => uint256) private cardsByHash_;\n\n  modifier cardExists(uint256 _cardId) {\n    require(cards_[_cardId].initialized > 0, \"not_exist\");\n    _;\n  }\n  \n  constructor() public {}\n\n  function getCard(uint256 _cardId) cardExists(_cardId) public view returns(uint256 cardId, address owner, uint256 tokens, bool active)  {\n    return (cards_[_cardId].cardId, cards_[_cardId].owner, cards_[_cardId].tokens, cards_[_cardId].active);\n  }\n\n  function addCard(uint256 _cardId, uint256 _tokens, bytes32 _hash) onlyOwner public {\n    require(_tokens > 0, \"empty_tokens\");\n    require(_cardId > 0, \"no_valid_card_id\");\n    require(cards_[_cardId].initialized == 0, \"card_exist\");\n    require(cardsByHash_[_hash] == 0, \"duplicated_hash\");\n\n    _mint(address(this),_tokens);\n    Card memory newCard = Card(_hash, _cardId, _tokens, false, msg.sender, 1);\n    cards_[_cardId] = newCard;   \n    cardsByHash_[_hash] = _cardId;\n  }\n\n  function activateCard(uint256 _cardId) cardExists(_cardId) onlySigner public {\n    require(cards_[_cardId].active == false, \"not_activatable\");\n    cards_[_cardId].active=true;    \n  }\n\n  function validateCard(bytes memory _secret) public {\n    bytes32 hash = keccak256(_secret);\n    uint256 cardId = cardsByHash_[hash];\n    require(cardId > 0, \"hash_not_found\");\n    require(cards_[cardId].active == true, \"not_active\");\n    require(cards_[cardId].hash ==  hash, \"wrong_secret\");\n  \n    _transfer(address(this), msg.sender,cards_[cardId].tokens);\n    emit CardValidated(cards_[cardId].owner, cards_[cardId].cardId, msg.sender);\n  \n    delete cardsByHash_[hash];\n    delete cards_[cardId];\n  }\n\n}",
  "sourcePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/PrepaidCardManager.sol",
  "ast": {
    "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/PrepaidCardManager.sol",
    "exportedSymbols": {
      "PrepaidCardManager": [
        1374
      ]
    },
    "id": 1375,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1091,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "id": 1092,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:4"
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1093,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4725,
        "src": "59:78:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol",
        "id": 1094,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4597,
        "src": "138:88:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1095,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4834,
        "src": "227:82:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/Devices.sol",
        "file": "./Devices.sol",
        "id": 1096,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 1090,
        "src": "311:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1097,
              "name": "SignerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4596,
              "src": "367:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignerRole_$4596",
                "typeString": "contract SignerRole"
              }
            },
            "id": 1098,
            "nodeType": "InheritanceSpecifier",
            "src": "367:10:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1099,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4833,
              "src": "379:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4833",
                "typeString": "contract Ownable"
              }
            },
            "id": 1100,
            "nodeType": "InheritanceSpecifier",
            "src": "379:7:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1101,
              "name": "Devices",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1089,
              "src": "389:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Devices_$1089",
                "typeString": "contract Devices"
              }
            },
            "id": 1102,
            "nodeType": "InheritanceSpecifier",
            "src": "389:7:4"
          }
        ],
        "contractDependencies": [
          516,
          1089,
          1771,
          1914,
          1926,
          1939,
          4493,
          4596,
          4833,
          5216,
          5247,
          5305,
          5333,
          5402
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1374,
        "linearizedBaseContracts": [
          1374,
          1089,
          516,
          1914,
          1939,
          5247,
          5333,
          4493,
          5305,
          5216,
          5402,
          1926,
          1771,
          4833,
          4596
        ],
        "name": "PrepaidCardManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1105,
            "libraryName": {
              "contractScope": null,
              "id": 1103,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4724,
              "src": "407:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4724",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "401:27:4",
            "typeName": {
              "id": 1104,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "420:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1113,
            "name": "CardValidated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "457:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1109,
                  "indexed": false,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "484:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "indexed": true,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "504:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "451:77:4"
            },
            "src": "432:97:4"
          },
          {
            "canonicalName": "PrepaidCardManager.Card",
            "id": 1126,
            "members": [
              {
                "constant": false,
                "id": 1115,
                "name": "hash",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "551:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1114,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "551:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1117,
                "name": "cardId",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "569:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1116,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "569:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1119,
                "name": "tokens",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "591:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1118,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "591:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1121,
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "611:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1120,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "611:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1123,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "628:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1122,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "628:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1125,
                "name": "initialized",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "647:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1124,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "647:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Card",
            "nodeType": "StructDefinition",
            "scope": 1374,
            "src": "533:135:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1130,
            "name": "cards_",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "672:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card)"
            },
            "typeName": {
              "id": 1129,
              "keyType": {
                "id": 1127,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "681:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "672:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1128,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1126,
                "src": "692:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$1126_storage_ptr",
                  "typeString": "struct PrepaidCardManager.Card"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1134,
            "name": "cardsByHash_",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "716:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 1133,
              "keyType": {
                "id": 1131,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "725:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "716:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 1132,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "736:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1149,
              "nodeType": "Block",
              "src": "807:71:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1139,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "821:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1141,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1140,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "828:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "821:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1125,
                          "src": "821:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "851:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "821:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f6578697374",
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "854:11:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_523f997d98c93444ea35e2c5360d0525961260bc44d38981594693864d5dc39f",
                          "typeString": "literal_string \"not_exist\""
                        },
                        "value": "not_exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_523f997d98c93444ea35e2c5360d0525961260bc44d38981594693864d5dc39f",
                          "typeString": "literal_string \"not_exist\""
                        }
                      ],
                      "id": 1138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "813:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1147,
                  "nodeType": "ExpressionStatement",
                  "src": "813:53:4"
                },
                {
                  "id": 1148,
                  "nodeType": "PlaceholderStatement",
                  "src": "872:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 1150,
            "name": "cardExists",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "790:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "789:17:4"
            },
            "src": "770:108:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1153,
              "nodeType": "Block",
              "src": "905:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 1154,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:4"
            },
            "returnParameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "905:0:4"
            },
            "scope": 1374,
            "src": "884:23:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "1046:113:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1170,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1060:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1172,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1171,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1067:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1060:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cardId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1117,
                        "src": "1060:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1174,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1084:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1176,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1175,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1091:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1084:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1123,
                        "src": "1084:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1178,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1107:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1180,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1179,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1114:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1107:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1119,
                        "src": "1107:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1182,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1131:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1184,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1183,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1138:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1131:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1121,
                        "src": "1131:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1186,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1059:95:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,address,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 1169,
                  "id": 1187,
                  "nodeType": "Return",
                  "src": "1052:102:4"
                }
              ]
            },
            "documentation": null,
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1159,
                    "name": "_cardId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1156,
                    "src": "956:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1158,
                  "name": "cardExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1150,
                  "src": "945:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "945:19:4"
              }
            ],
            "name": "getCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "928:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:17:4"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1162,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "985:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1164,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1001:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1166,
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1016:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "name": "active",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1032:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "984:60:4"
            },
            "scope": 1374,
            "src": "911:248:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1264,
              "nodeType": "Block",
              "src": "1246:395:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1201,
                          "name": "_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "1260:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1270:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1260:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "656d7074795f746f6b656e73",
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1273:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb13cafb2118c5bb28e18830bb5cbbe1bfd46963cfcc272777b7a32c3876885c",
                          "typeString": "literal_string \"empty_tokens\""
                        },
                        "value": "empty_tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb13cafb2118c5bb28e18830bb5cbbe1bfd46963cfcc272777b7a32c3876885c",
                          "typeString": "literal_string \"empty_tokens\""
                        }
                      ],
                      "id": 1200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1252:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1208,
                          "name": "_cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1191,
                          "src": "1302:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1312:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1302:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f5f76616c69645f636172645f6964",
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1315:18:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b4c67f8be76e34068d204b82f0c05ded8513cb35ef65bdfccb745f5742cf16a",
                          "typeString": "literal_string \"no_valid_card_id\""
                        },
                        "value": "no_valid_card_id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b4c67f8be76e34068d204b82f0c05ded8513cb35ef65bdfccb745f5742cf16a",
                          "typeString": "literal_string \"no_valid_card_id\""
                        }
                      ],
                      "id": 1207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1294:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1215,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "1348:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1217,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1216,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "1355:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1348:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1218,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1125,
                          "src": "1348:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1379:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1348:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636172645f6578697374",
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1382:12:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b91b9fade96b22efa037ef0cfce2aca35512e4e284faa6e96fa461d2b5e6c898",
                          "typeString": "literal_string \"card_exist\""
                        },
                        "value": "card_exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b91b9fade96b22efa037ef0cfce2aca35512e4e284faa6e96fa461d2b5e6c898",
                          "typeString": "literal_string \"card_exist\""
                        }
                      ],
                      "id": 1214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1340:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1223,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:55:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1225,
                            "name": "cardsByHash_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "1409:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 1227,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1226,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "1422:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1409:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1432:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1409:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6475706c6963617465645f68617368",
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1435:17:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17094c899c2c07a998da10c057bd0fdf1262cf668ece5a711b5ac09ad35a478a",
                          "typeString": "literal_string \"duplicated_hash\""
                        },
                        "value": "duplicated_hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17094c899c2c07a998da10c057bd0fdf1262cf668ece5a711b5ac09ad35a478a",
                          "typeString": "literal_string \"duplicated_hash\""
                        }
                      ],
                      "id": 1224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1401:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1401:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1235,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6082,
                            "src": "1474:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          ],
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1466:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1466:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1237,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "1480:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1233,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5105,
                      "src": "1460:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:28:4"
                },
                {
                  "assignments": [
                    1241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1241,
                      "name": "newCard",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "1494:19:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_memory_ptr",
                        "typeString": "struct PrepaidCardManager.Card"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1240,
                        "name": "Card",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1126,
                        "src": "1494:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1126_storage_ptr",
                          "typeString": "struct PrepaidCardManager.Card"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1251,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1243,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "1521:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1244,
                        "name": "_cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "1528:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1245,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "1537:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 1246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1546:5:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1247,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6028,
                          "src": "1553:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1553:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1565:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1242,
                      "name": "Card",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "1516:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Card_$1126_storage_ptr_$",
                        "typeString": "type(struct PrepaidCardManager.Card storage pointer)"
                      }
                    },
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$1126_memory",
                      "typeString": "struct PrepaidCardManager.Card memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1494:73:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1252,
                        "name": "cards_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "1573:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                          "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                        }
                      },
                      "id": 1254,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1253,
                        "name": "_cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "1580:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1573:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_storage",
                        "typeString": "struct PrepaidCardManager.Card storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1255,
                      "name": "newCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1241,
                      "src": "1591:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_memory_ptr",
                        "typeString": "struct PrepaidCardManager.Card memory"
                      }
                    },
                    "src": "1573:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$1126_storage",
                      "typeString": "struct PrepaidCardManager.Card storage ref"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1258,
                        "name": "cardsByHash_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "1607:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1260,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1259,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "1620:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1607:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1261,
                      "name": "_cardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "1629:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1607:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:29:4"
                }
              ]
            },
            "documentation": null,
            "id": 1265,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1198,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1197,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4767,
                  "src": "1229:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1229:9:4"
              }
            ],
            "name": "addCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1180:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1197:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1214:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1179:49:4"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:4"
            },
            "scope": 1374,
            "src": "1163:478:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1292,
              "nodeType": "Block",
              "src": "1722:107:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1276,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "1736:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1278,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1277,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1267,
                              "src": "1743:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1736:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1121,
                          "src": "1736:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1762:5:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1736:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f6163746976617461626c65",
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1769:17:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8289227395bfb8cb9af2a39717217c9a1c5c9e1bd82e5646b55ecab8e36d7ff",
                          "typeString": "literal_string \"not_activatable\""
                        },
                        "value": "not_activatable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8289227395bfb8cb9af2a39717217c9a1c5c9e1bd82e5646b55ecab8e36d7ff",
                          "typeString": "literal_string \"not_activatable\""
                        }
                      ],
                      "id": 1275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1728:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1728:59:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:59:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1285,
                          "name": "cards_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1130,
                          "src": "1793:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                            "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                          }
                        },
                        "id": 1287,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1286,
                          "name": "_cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1267,
                          "src": "1800:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1793:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1126_storage",
                          "typeString": "struct PrepaidCardManager.Card storage ref"
                        }
                      },
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1121,
                      "src": "1793:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1816:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1793:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1291,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:27:4"
                }
              ]
            },
            "documentation": null,
            "id": 1293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1270,
                    "name": "_cardId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1267,
                    "src": "1695:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1271,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1269,
                  "name": "cardExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1150,
                  "src": "1684:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1684:19:4"
              },
              {
                "arguments": null,
                "id": 1273,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1272,
                  "name": "onlySigner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4529,
                  "src": "1704:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1704:10:4"
              }
            ],
            "name": "activateCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1267,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1667:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1666:17:4"
            },
            "returnParameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:0:4"
            },
            "scope": 1374,
            "src": "1645:184:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1372,
              "nodeType": "Block",
              "src": "1884:454:4",
              "statements": [
                {
                  "assignments": [
                    1299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1299,
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "scope": 1372,
                      "src": "1890:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1298,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1890:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1303,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1301,
                        "name": "_secret",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "1915:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1300,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6022,
                      "src": "1905:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1905:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1890:33:4"
                },
                {
                  "assignments": [
                    1305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1305,
                      "name": "cardId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1372,
                      "src": "1929:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1304,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1929:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1309,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1306,
                      "name": "cardsByHash_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1134,
                      "src": "1946:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 1308,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1307,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1299,
                      "src": "1959:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1946:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1929:35:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1311,
                          "name": "cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1305,
                          "src": "1978:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1987:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1978:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "686173685f6e6f745f666f756e64",
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1990:16:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_967846ff23a2795bf2636f5a5bb345095054347e4ec78b75c7363ede7e9096bf",
                          "typeString": "literal_string \"hash_not_found\""
                        },
                        "value": "hash_not_found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_967846ff23a2795bf2636f5a5bb345095054347e4ec78b75c7363ede7e9096bf",
                          "typeString": "literal_string \"hash_not_found\""
                        }
                      ],
                      "id": 1310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1970:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1316,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:37:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1318,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "2021:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1320,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1319,
                              "name": "cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "2028:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2021:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1121,
                          "src": "2021:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2046:4:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2021:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f616374697665",
                        "id": 1324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2052:12:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f936e29bffe40d9e27626ea77a4ee04fff5389b578200e4cadce51658981641",
                          "typeString": "literal_string \"not_active\""
                        },
                        "value": "not_active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f936e29bffe40d9e27626ea77a4ee04fff5389b578200e4cadce51658981641",
                          "typeString": "literal_string \"not_active\""
                        }
                      ],
                      "id": 1317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "2013:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1326,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1328,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "2079:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1330,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1329,
                              "name": "cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "2086:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2079:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1115,
                          "src": "2079:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1332,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1299,
                          "src": "2103:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2079:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77726f6e675f736563726574",
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2109:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b09677a4a459917962a32c91cf6b87d1f224e23bde6493cd5578dc54311ddd1",
                          "typeString": "literal_string \"wrong_secret\""
                        },
                        "value": "wrong_secret"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b09677a4a459917962a32c91cf6b87d1f224e23bde6493cd5578dc54311ddd1",
                          "typeString": "literal_string \"wrong_secret\""
                        }
                      ],
                      "id": 1327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "2071:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:53:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1339,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6082,
                            "src": "2151:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          ],
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2143:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2143:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1341,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6028,
                          "src": "2158:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2158:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1343,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2169:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1345,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1344,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2176:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2169:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1119,
                        "src": "2169:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1337,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1913
                      ],
                      "referencedDeclaration": 1913,
                      "src": "2133:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2133:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1348,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:58:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1350,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2216:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1352,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1351,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2223:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2216:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1123,
                        "src": "2216:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1354,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2238:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1356,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1355,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2245:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2238:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1357,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cardId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1117,
                        "src": "2238:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6028,
                          "src": "2261:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2261:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1349,
                      "name": "CardValidated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1113,
                      "src": "2202:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:70:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1361,
                  "nodeType": "EmitStatement",
                  "src": "2197:75:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2281:25:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1362,
                        "name": "cardsByHash_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "2288:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1364,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1363,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "2301:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2288:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1366,
                  "nodeType": "ExpressionStatement",
                  "src": "2281:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2312:21:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1367,
                        "name": "cards_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "2319:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                          "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                        }
                      },
                      "id": 1369,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1368,
                        "name": "cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1305,
                        "src": "2326:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2319:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_storage",
                        "typeString": "struct PrepaidCardManager.Card storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1371,
                  "nodeType": "ExpressionStatement",
                  "src": "2312:21:4"
                }
              ]
            },
            "documentation": null,
            "id": 1373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "name": "_secret",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "1855:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1854:22:4"
            },
            "returnParameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1884:0:4"
            },
            "scope": 1374,
            "src": "1833:505:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1375,
        "src": "336:2005:4"
      }
    ],
    "src": "0:2341:4"
  },
  "legacyAST": {
    "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/PrepaidCardManager.sol",
    "exportedSymbols": {
      "PrepaidCardManager": [
        1374
      ]
    },
    "id": 1375,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1091,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "id": 1092,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:4"
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1093,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4725,
        "src": "59:78:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol",
        "id": 1094,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4597,
        "src": "138:88:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1095,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4834,
        "src": "227:82:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/Devices.sol",
        "file": "./Devices.sol",
        "id": 1096,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 1090,
        "src": "311:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1097,
              "name": "SignerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4596,
              "src": "367:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignerRole_$4596",
                "typeString": "contract SignerRole"
              }
            },
            "id": 1098,
            "nodeType": "InheritanceSpecifier",
            "src": "367:10:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1099,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4833,
              "src": "379:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4833",
                "typeString": "contract Ownable"
              }
            },
            "id": 1100,
            "nodeType": "InheritanceSpecifier",
            "src": "379:7:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1101,
              "name": "Devices",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1089,
              "src": "389:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Devices_$1089",
                "typeString": "contract Devices"
              }
            },
            "id": 1102,
            "nodeType": "InheritanceSpecifier",
            "src": "389:7:4"
          }
        ],
        "contractDependencies": [
          516,
          1089,
          1771,
          1914,
          1926,
          1939,
          4493,
          4596,
          4833,
          5216,
          5247,
          5305,
          5333,
          5402
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1374,
        "linearizedBaseContracts": [
          1374,
          1089,
          516,
          1914,
          1939,
          5247,
          5333,
          4493,
          5305,
          5216,
          5402,
          1926,
          1771,
          4833,
          4596
        ],
        "name": "PrepaidCardManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1105,
            "libraryName": {
              "contractScope": null,
              "id": 1103,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4724,
              "src": "407:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4724",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "401:27:4",
            "typeName": {
              "id": 1104,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "420:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1113,
            "name": "CardValidated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "457:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1109,
                  "indexed": false,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "484:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "indexed": true,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "504:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "451:77:4"
            },
            "src": "432:97:4"
          },
          {
            "canonicalName": "PrepaidCardManager.Card",
            "id": 1126,
            "members": [
              {
                "constant": false,
                "id": 1115,
                "name": "hash",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "551:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1114,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "551:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1117,
                "name": "cardId",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "569:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1116,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "569:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1119,
                "name": "tokens",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "591:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1118,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "591:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1121,
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "611:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1120,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "611:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1123,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "628:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1122,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "628:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1125,
                "name": "initialized",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "647:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1124,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "647:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Card",
            "nodeType": "StructDefinition",
            "scope": 1374,
            "src": "533:135:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1130,
            "name": "cards_",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "672:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card)"
            },
            "typeName": {
              "id": 1129,
              "keyType": {
                "id": 1127,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "681:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "672:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1128,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1126,
                "src": "692:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$1126_storage_ptr",
                  "typeString": "struct PrepaidCardManager.Card"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1134,
            "name": "cardsByHash_",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "716:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 1133,
              "keyType": {
                "id": 1131,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "725:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "716:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 1132,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "736:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1149,
              "nodeType": "Block",
              "src": "807:71:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1139,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "821:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1141,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1140,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "828:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "821:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1125,
                          "src": "821:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "851:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "821:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f6578697374",
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "854:11:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_523f997d98c93444ea35e2c5360d0525961260bc44d38981594693864d5dc39f",
                          "typeString": "literal_string \"not_exist\""
                        },
                        "value": "not_exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_523f997d98c93444ea35e2c5360d0525961260bc44d38981594693864d5dc39f",
                          "typeString": "literal_string \"not_exist\""
                        }
                      ],
                      "id": 1138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "813:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1147,
                  "nodeType": "ExpressionStatement",
                  "src": "813:53:4"
                },
                {
                  "id": 1148,
                  "nodeType": "PlaceholderStatement",
                  "src": "872:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 1150,
            "name": "cardExists",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "790:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "789:17:4"
            },
            "src": "770:108:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1153,
              "nodeType": "Block",
              "src": "905:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 1154,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:4"
            },
            "returnParameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "905:0:4"
            },
            "scope": 1374,
            "src": "884:23:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "1046:113:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1170,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1060:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1172,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1171,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1067:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1060:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cardId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1117,
                        "src": "1060:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1174,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1084:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1176,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1175,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1091:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1084:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1123,
                        "src": "1084:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1178,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1107:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1180,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1179,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1114:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1107:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1119,
                        "src": "1107:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1182,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1131:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1184,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1183,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1138:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1131:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1121,
                        "src": "1131:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1186,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1059:95:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,address,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 1169,
                  "id": 1187,
                  "nodeType": "Return",
                  "src": "1052:102:4"
                }
              ]
            },
            "documentation": null,
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1159,
                    "name": "_cardId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1156,
                    "src": "956:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1158,
                  "name": "cardExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1150,
                  "src": "945:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "945:19:4"
              }
            ],
            "name": "getCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "928:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:17:4"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1162,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "985:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1164,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1001:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1166,
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1016:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "name": "active",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1032:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "984:60:4"
            },
            "scope": 1374,
            "src": "911:248:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1264,
              "nodeType": "Block",
              "src": "1246:395:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1201,
                          "name": "_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "1260:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1270:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1260:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "656d7074795f746f6b656e73",
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1273:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb13cafb2118c5bb28e18830bb5cbbe1bfd46963cfcc272777b7a32c3876885c",
                          "typeString": "literal_string \"empty_tokens\""
                        },
                        "value": "empty_tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb13cafb2118c5bb28e18830bb5cbbe1bfd46963cfcc272777b7a32c3876885c",
                          "typeString": "literal_string \"empty_tokens\""
                        }
                      ],
                      "id": 1200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1252:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1208,
                          "name": "_cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1191,
                          "src": "1302:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1312:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1302:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f5f76616c69645f636172645f6964",
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1315:18:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b4c67f8be76e34068d204b82f0c05ded8513cb35ef65bdfccb745f5742cf16a",
                          "typeString": "literal_string \"no_valid_card_id\""
                        },
                        "value": "no_valid_card_id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b4c67f8be76e34068d204b82f0c05ded8513cb35ef65bdfccb745f5742cf16a",
                          "typeString": "literal_string \"no_valid_card_id\""
                        }
                      ],
                      "id": 1207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1294:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1215,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "1348:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1217,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1216,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "1355:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1348:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1218,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1125,
                          "src": "1348:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1379:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1348:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636172645f6578697374",
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1382:12:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b91b9fade96b22efa037ef0cfce2aca35512e4e284faa6e96fa461d2b5e6c898",
                          "typeString": "literal_string \"card_exist\""
                        },
                        "value": "card_exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b91b9fade96b22efa037ef0cfce2aca35512e4e284faa6e96fa461d2b5e6c898",
                          "typeString": "literal_string \"card_exist\""
                        }
                      ],
                      "id": 1214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1340:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1223,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:55:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1225,
                            "name": "cardsByHash_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "1409:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 1227,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1226,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "1422:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1409:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1432:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1409:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6475706c6963617465645f68617368",
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1435:17:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17094c899c2c07a998da10c057bd0fdf1262cf668ece5a711b5ac09ad35a478a",
                          "typeString": "literal_string \"duplicated_hash\""
                        },
                        "value": "duplicated_hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17094c899c2c07a998da10c057bd0fdf1262cf668ece5a711b5ac09ad35a478a",
                          "typeString": "literal_string \"duplicated_hash\""
                        }
                      ],
                      "id": 1224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1401:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1401:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1235,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6082,
                            "src": "1474:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          ],
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1466:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1466:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1237,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "1480:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1233,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5105,
                      "src": "1460:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:28:4"
                },
                {
                  "assignments": [
                    1241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1241,
                      "name": "newCard",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "1494:19:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_memory_ptr",
                        "typeString": "struct PrepaidCardManager.Card"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1240,
                        "name": "Card",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1126,
                        "src": "1494:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1126_storage_ptr",
                          "typeString": "struct PrepaidCardManager.Card"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1251,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1243,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "1521:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1244,
                        "name": "_cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "1528:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1245,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "1537:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 1246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1546:5:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1247,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6028,
                          "src": "1553:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1553:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1565:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1242,
                      "name": "Card",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "1516:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Card_$1126_storage_ptr_$",
                        "typeString": "type(struct PrepaidCardManager.Card storage pointer)"
                      }
                    },
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$1126_memory",
                      "typeString": "struct PrepaidCardManager.Card memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1494:73:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1252,
                        "name": "cards_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "1573:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                          "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                        }
                      },
                      "id": 1254,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1253,
                        "name": "_cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "1580:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1573:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_storage",
                        "typeString": "struct PrepaidCardManager.Card storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1255,
                      "name": "newCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1241,
                      "src": "1591:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_memory_ptr",
                        "typeString": "struct PrepaidCardManager.Card memory"
                      }
                    },
                    "src": "1573:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$1126_storage",
                      "typeString": "struct PrepaidCardManager.Card storage ref"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1258,
                        "name": "cardsByHash_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "1607:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1260,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1259,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "1620:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1607:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1261,
                      "name": "_cardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "1629:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1607:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:29:4"
                }
              ]
            },
            "documentation": null,
            "id": 1265,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1198,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1197,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4767,
                  "src": "1229:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1229:9:4"
              }
            ],
            "name": "addCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1180:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1197:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1214:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1179:49:4"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:4"
            },
            "scope": 1374,
            "src": "1163:478:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1292,
              "nodeType": "Block",
              "src": "1722:107:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1276,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "1736:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1278,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1277,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1267,
                              "src": "1743:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1736:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1121,
                          "src": "1736:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1762:5:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1736:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f6163746976617461626c65",
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1769:17:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8289227395bfb8cb9af2a39717217c9a1c5c9e1bd82e5646b55ecab8e36d7ff",
                          "typeString": "literal_string \"not_activatable\""
                        },
                        "value": "not_activatable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8289227395bfb8cb9af2a39717217c9a1c5c9e1bd82e5646b55ecab8e36d7ff",
                          "typeString": "literal_string \"not_activatable\""
                        }
                      ],
                      "id": 1275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1728:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1728:59:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:59:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1285,
                          "name": "cards_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1130,
                          "src": "1793:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                            "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                          }
                        },
                        "id": 1287,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1286,
                          "name": "_cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1267,
                          "src": "1800:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1793:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1126_storage",
                          "typeString": "struct PrepaidCardManager.Card storage ref"
                        }
                      },
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1121,
                      "src": "1793:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1816:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1793:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1291,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:27:4"
                }
              ]
            },
            "documentation": null,
            "id": 1293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1270,
                    "name": "_cardId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1267,
                    "src": "1695:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1271,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1269,
                  "name": "cardExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1150,
                  "src": "1684:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1684:19:4"
              },
              {
                "arguments": null,
                "id": 1273,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1272,
                  "name": "onlySigner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4529,
                  "src": "1704:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1704:10:4"
              }
            ],
            "name": "activateCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1267,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1667:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1666:17:4"
            },
            "returnParameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:0:4"
            },
            "scope": 1374,
            "src": "1645:184:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1372,
              "nodeType": "Block",
              "src": "1884:454:4",
              "statements": [
                {
                  "assignments": [
                    1299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1299,
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "scope": 1372,
                      "src": "1890:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1298,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1890:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1303,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1301,
                        "name": "_secret",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "1915:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1300,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6022,
                      "src": "1905:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1905:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1890:33:4"
                },
                {
                  "assignments": [
                    1305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1305,
                      "name": "cardId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1372,
                      "src": "1929:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1304,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1929:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1309,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1306,
                      "name": "cardsByHash_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1134,
                      "src": "1946:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 1308,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1307,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1299,
                      "src": "1959:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1946:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1929:35:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1311,
                          "name": "cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1305,
                          "src": "1978:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1987:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1978:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "686173685f6e6f745f666f756e64",
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1990:16:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_967846ff23a2795bf2636f5a5bb345095054347e4ec78b75c7363ede7e9096bf",
                          "typeString": "literal_string \"hash_not_found\""
                        },
                        "value": "hash_not_found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_967846ff23a2795bf2636f5a5bb345095054347e4ec78b75c7363ede7e9096bf",
                          "typeString": "literal_string \"hash_not_found\""
                        }
                      ],
                      "id": 1310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "1970:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1316,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:37:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1318,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "2021:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1320,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1319,
                              "name": "cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "2028:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2021:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1121,
                          "src": "2021:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2046:4:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2021:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f616374697665",
                        "id": 1324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2052:12:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f936e29bffe40d9e27626ea77a4ee04fff5389b578200e4cadce51658981641",
                          "typeString": "literal_string \"not_active\""
                        },
                        "value": "not_active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f936e29bffe40d9e27626ea77a4ee04fff5389b578200e4cadce51658981641",
                          "typeString": "literal_string \"not_active\""
                        }
                      ],
                      "id": 1317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "2013:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1326,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1328,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "2079:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1330,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1329,
                              "name": "cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "2086:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2079:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1115,
                          "src": "2079:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1332,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1299,
                          "src": "2103:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2079:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77726f6e675f736563726574",
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2109:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b09677a4a459917962a32c91cf6b87d1f224e23bde6493cd5578dc54311ddd1",
                          "typeString": "literal_string \"wrong_secret\""
                        },
                        "value": "wrong_secret"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b09677a4a459917962a32c91cf6b87d1f224e23bde6493cd5578dc54311ddd1",
                          "typeString": "literal_string \"wrong_secret\""
                        }
                      ],
                      "id": 1327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6031,
                        6032
                      ],
                      "referencedDeclaration": 6032,
                      "src": "2071:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:53:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1339,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6082,
                            "src": "2151:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          ],
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2143:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2143:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1341,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6028,
                          "src": "2158:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2158:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1343,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2169:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1345,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1344,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2176:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2169:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1119,
                        "src": "2169:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1337,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1913
                      ],
                      "referencedDeclaration": 1913,
                      "src": "2133:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2133:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1348,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:58:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1350,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2216:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1352,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1351,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2223:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2216:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1123,
                        "src": "2216:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1354,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2238:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1356,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1355,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2245:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2238:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1357,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cardId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1117,
                        "src": "2238:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6028,
                          "src": "2261:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2261:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1349,
                      "name": "CardValidated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1113,
                      "src": "2202:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:70:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1361,
                  "nodeType": "EmitStatement",
                  "src": "2197:75:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2281:25:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1362,
                        "name": "cardsByHash_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "2288:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1364,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1363,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "2301:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2288:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1366,
                  "nodeType": "ExpressionStatement",
                  "src": "2281:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2312:21:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1367,
                        "name": "cards_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "2319:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                          "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                        }
                      },
                      "id": 1369,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1368,
                        "name": "cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1305,
                        "src": "2326:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2319:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_storage",
                        "typeString": "struct PrepaidCardManager.Card storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1371,
                  "nodeType": "ExpressionStatement",
                  "src": "2312:21:4"
                }
              ]
            },
            "documentation": null,
            "id": 1373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "name": "_secret",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "1855:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1854:22:4"
            },
            "returnParameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1884:0:4"
            },
            "scope": 1374,
            "src": "1833:505:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1375,
        "src": "336:2005:4"
      }
    ],
    "src": "0:2341:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {
    "82584648528": {
      "events": {},
      "links": {},
      "address": "0xcE93FD2E99F83b862bcCbf59281d9eDF94741877",
      "transactionHash": "0x6d1ffea9b85517818f6ee8c00926673c3a0a6688b2779ee2843d3d2a7d30dc06"
    },
    "83584648538": {
      "events": {},
      "links": {},
      "address": "0x8e07b05843DB1F70B6AC74Fc9d4df7F9a4B06639",
      "transactionHash": "0x9cbdc867217f165b89b37e4e3709dd6db1d92c3ced5283b5270287f62edb395c"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-17T08:24:15.247Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The account whose tokens will be burned.",
          "value": "uint256 The amount of token to be burned."
        }
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}