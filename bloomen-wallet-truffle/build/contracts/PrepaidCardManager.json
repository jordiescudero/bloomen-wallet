{
  "contractName": "PrepaidCardManager",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "checkOwnership",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_dappId",
          "type": "string"
        },
        {
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_deviceHash",
          "type": "bytes32"
        },
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        },
        {
          "name": "_lifeTime",
          "type": "uint256"
        },
        {
          "name": "_dappId",
          "type": "string"
        }
      ],
      "name": "handshake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_deviceHash",
          "type": "bytes32"
        }
      ],
      "name": "removeDevice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        },
        {
          "name": "_deviceHash",
          "type": "bytes32"
        }
      ],
      "name": "isAllowedForAddress",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "theNumber",
          "type": "uint256"
        },
        {
          "name": "percentage",
          "type": "uint256"
        }
      ],
      "name": "calculatePercentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_deviceHash",
          "type": "bytes32"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "getSchema",
      "outputs": [
        {
          "components": [
            {
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "name": "schemaId",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "uint256"
            },
            {
              "name": "assetLifeTime",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "name": "percent",
                  "type": "uint256"
                },
                {
                  "name": "receptor",
                  "type": "address"
                },
                {
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "clearingHouseRules",
              "type": "tuple[]"
            },
            {
              "name": "valid",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "validateSchema",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_deviceHash",
          "type": "bytes32"
        },
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        },
        {
          "name": "_lifeTime",
          "type": "uint256"
        },
        {
          "name": "_dappId",
          "type": "string"
        },
        {
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "handshake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAssetsPageCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "invalidateSchema",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_page",
          "type": "uint256"
        }
      ],
      "name": "getDevices",
      "outputs": [
        {
          "components": [
            {
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "name": "assetId",
              "type": "uint256"
            },
            {
              "name": "schemaId",
              "type": "uint256"
            },
            {
              "name": "dappId",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        },
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        }
      ],
      "name": "checkOwnershipForAddress",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_deviceHash",
          "type": "bytes32"
        }
      ],
      "name": "isAllowed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "name": "_schemaId",
          "type": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_dappId",
          "type": "string"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isSigner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSchemas",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_schemaId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "createSchema",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDevicesPageCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_page",
          "type": "uint256"
        }
      ],
      "name": "getAssets",
      "outputs": [
        {
          "components": [
            {
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "name": "assetId",
              "type": "uint256"
            },
            {
              "name": "schemaId",
              "type": "uint256"
            },
            {
              "name": "dappId",
              "type": "string"
            },
            {
              "name": "description",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceSigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addSigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "cardId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "user",
          "type": "address"
        }
      ],
      "name": "CardValidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SignerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SignerRemoved",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_cardId",
          "type": "uint256"
        }
      ],
      "name": "getCard",
      "outputs": [
        {
          "name": "cardId",
          "type": "uint256"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "tokens",
          "type": "uint256"
        },
        {
          "name": "active",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cardId",
          "type": "uint256"
        },
        {
          "name": "_tokens",
          "type": "uint256"
        },
        {
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "addCard",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cardId",
          "type": "uint256"
        }
      ],
      "name": "activateCard",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_secret",
          "type": "bytes"
        }
      ],
      "name": "validateCard",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"checkOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_dappId\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_deviceHash\",\"type\":\"bytes32\"},{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"},{\"name\":\"_lifeTime\",\"type\":\"uint256\"},{\"name\":\"_dappId\",\"type\":\"string\"}],\"name\":\"handshake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_deviceHash\",\"type\":\"bytes32\"}],\"name\":\"removeDevice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_deviceHash\",\"type\":\"bytes32\"}],\"name\":\"isAllowedForAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"theNumber\",\"type\":\"uint256\"},{\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"calculatePercentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_deviceHash\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"name\":\"schemaId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"assetLifeTime\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"percent\",\"type\":\"uint256\"},{\"name\":\"receptor\",\"type\":\"address\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"clearingHouseRules\",\"type\":\"tuple[]\"},{\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"validateSchema\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_deviceHash\",\"type\":\"bytes32\"},{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"},{\"name\":\"_lifeTime\",\"type\":\"uint256\"},{\"name\":\"_dappId\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"handshake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAssetsPageCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"invalidateSchema\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_page\",\"type\":\"uint256\"}],\"name\":\"getDevices\",\"outputs\":[{\"components\":[{\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"name\":\"assetId\",\"type\":\"uint256\"},{\"name\":\"schemaId\",\"type\":\"uint256\"},{\"name\":\"dappId\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"}],\"name\":\"checkOwnershipForAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_deviceHash\",\"type\":\"bytes32\"}],\"name\":\"isAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"_schemaId\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_dappId\",\"type\":\"string\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"}],\"name\":\"activateCard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"},{\"name\":\"_tokens\",\"type\":\"uint256\"},{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"addCard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"}],\"name\":\"getCard\",\"outputs\":[{\"name\":\"cardId\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"active\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSchemas\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_schemaId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createSchema\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_secret\",\"type\":\"bytes\"}],\"name\":\"validateCard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDevicesPageCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_page\",\"type\":\"uint256\"}],\"name\":\"getAssets\",\"outputs\":[{\"components\":[{\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"name\":\"assetId\",\"type\":\"uint256\"},{\"name\":\"schemaId\",\"type\":\"uint256\"},{\"name\":\"dappId\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cardId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"}],\"name\":\"CardValidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"value\":\"The amount of token to be burned.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns a specific amount of tokens from the target address and decrements allowance\",\"params\":{\"from\":\"address The account whose tokens will be burned.\",\"value\":\"uint256 The amount of token to be burned.\"}},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"return\":\"the name of the token.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/PrepaidCardManager.sol\":\"PrepaidCardManager\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/Assets.sol\":{\"keccak256\":\"0x99f6af42a38d8f214bc053a04db2a79e50e69d418fab60d4551086b5399a7103\",\"urls\":[\"bzzr://e95745f08f42de29214257da6be247c2b8679a30c1794f95d789d50a292114cf\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/Devices.sol\":{\"keccak256\":\"0x9943440941ebea62e8abe42e0d5ba0f8e7d355ce0938825313097192604374ed\",\"urls\":[\"bzzr://c0f00cc4beba6a61a4428a9edf98617cc53fe718f24b2a117bac0a1b091179d3\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/PrepaidCardManager.sol\":{\"keccak256\":\"0x9f269601810d881114737170044af6154440edee1fd05daec0680558c0bb9c35\",\"urls\":[\"bzzr://a145130ab35820356d5ed5ba037d6d691782902a6f39ab26833ca1ec12d6397c\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/Schemas.sol\":{\"keccak256\":\"0xcc5ee7260e436e7ad30407e4a911bb5df881ed6f109298141fd7a83402702b0a\",\"urls\":[\"bzzr://76504c39d40940b0c06355821a02453678c5724ac9b2f432cf8d8086d667b75b\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/token/ERC223.sol\":{\"keccak256\":\"0x05220f82d0e19ee0f3c5fae22eda586234b7154443dd76f972d10c496dc11167\",\"urls\":[\"bzzr://b2bb5b633986f18a56549eb4d2540122bc64ac22f6c2729d015a25c89647637b\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/token/ERC223ReceivingContract.sol\":{\"keccak256\":\"0x858e34c11f744eb33192d41cce3f43dc1c4f4e4f8e2ff9273b7239fe1fd62e7e\",\"urls\":[\"bzzr://76acf0f63a80db66bb85e91101b6be3458e47ecf5665b0e87432d330621e8ed3\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/token/MovementHistory.sol\":{\"keccak256\":\"0x4b9b0a33cafc900fe341c1f7eff02439dd4dd0a440d6f14fec95bb9268c6dc98\",\"urls\":[\"bzzr://50d7e47846286fe70298089a56ed59d0e6ccd4502527362703bb1117affbe3ef\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\",\"urls\":[\"bzzr://da472135eb9268d863825ea26e227a9f8980c54bd32e0764d61711acca59fc89\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x317b01d5df6753f57244b354d0a23d5055b293f3fa22693c2ff7906cc988ce97\",\"urls\":[\"bzzr://d3f08352c241a34db9b244c5fb569c7ffb3dcd1a0aa288c855a4a70eddb9e2a3\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol\":{\"keccak256\":\"0x6a7b3cc7605ccb056aa758efc05fe91c0100632b56d09bc6f558b431bb46d324\",\"urls\":[\"bzzr://dfa471b4c2a704eb9c403392254df9019b070a02113b80a5e74581a34fa7a447\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xcf6b3e804a9b1e3d6ca4a695524cbaa52cd26cc86978a2b99052ba1a5d25653f\",\"urls\":[\"bzzr://8f763f9e6a0cdf1b7f07be575b3d4011e18a672b1365e26634e03580761e6858\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xa60f7f7ce98ca2d75c8e02da982d3fe91176269fdab2589bbbb7cc65f2d7c9d3\",\"urls\":[\"bzzr://5edd2c9be304a1e8ed055e243daba5345f242008164f9a0565c33197b860323b\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xd7956aed5535d9563bef5482c6fc41894aed3352aab764b3397bbc33dc2de0ea\",\"urls\":[\"bzzr://77acda78fc09e0be0c1954db02a97bed0f211618be5153ad5aed0bc0cf13f778\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/solidity-rlp/contracts/RLPReader.sol\":{\"keccak256\":\"0x383e82e56641440097f7337c539796c75e3c28a487c0ade06f3b3ab50e99acb5\",\"urls\":[\"bzzr://e8aacff86f7d09a0b1153de0e32c9a3dfbe35ab1b56d843f6e5a63f9bce1a1a7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "336:2005:4:-;;;884:23;8:9:-1;5:2;;;30:1;27;20:12;5:2;884:23:4;642:123:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:1:1;737:5:6;744:7;753:9;275:22:16;286:10;275;;;:22;;:::i;:::-;515:6:18;:19;;-1:-1:-1;;;;;;515:19:18;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:18;;;;;515;;549:40;;515:6;;549:40;493:12:21;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;515:16:21;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:21;:20;;-1:-1:-1;;541:20:21;;;;;;;;;;;;-1:-1:-1;275:22:15;;-1:-1:-1;286:10:15;275;;;;;:22;;:::i;:::-;642:123:6;;;336:2005:4;;685:119:16;741:21;754:7;741:8;:12;;;;;;:21;;;;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:16;;;;;;;;685:119;:::o;::15:-;741:21;754:7;741:8;:12;;;;;;:21;;;;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:15;;;;;;;;685:119;:::o;259:181:14:-;-1:-1:-1;;;;;335:21:14;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:14;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:14;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:14;;874:30;;;;;;-1:-1:-1;;;;;;921:20:14;:11;:20;;;;;;;;;;;;;;;786:162::o;336:2005:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;336:2005:4;;;-1:-1:-1;336:2005:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "336:2005:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;336:2005:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;707:156:1;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;628:81:21;;;:::i;:::-;;;;;;;;1225:208:1;;;;;;;;;:::i;:::-;;841:163:6;;;;;;;;;:::i;2721:145:19:-;;;;;;;;;:::i;2028:217:3:-;;;;;;;;;:::i;916:89:19:-;;;:::i;:::-;;;;;;;;2508:99:3;;;;;;;;;:::i;717:208::-;;;;;;;;;:::i;3809:136:1:-;;;;;;;;;:::i;1779:245:3:-;;;;;;;;;:::i;:::-;;;;;;;;3329:224:19;;;;;;;;;:::i;708:173:5:-;;;;;;;;;:::i;:::-;;;;;;;;930:81:21;;;:::i;:::-;;;;;;;;4067:200:19;;;;;;;;;:::i;1225:104:5:-;;;;;;;;;:::i;443:128:22:-;;;;;;;;;:::i;295:77:20:-;;;;;;;;;:::i;2249:255:3:-;;;;;;;;;:::i;1437:127:1:-;;;:::i;3264:541::-;;;;;;;;;:::i;1114:107:5:-;;;;;;;;;:::i;1070:705:3:-;;;;;;;;;:::i;:::-;;;;;;;;867:180:1;;;;;;;;;:::i;1217:104:19:-;;;;;;;;;:::i;1423:137:18:-;;;:::i;517:196:3:-;;;;;;;;;:::i;619:93:20:-;;;;;;;;;:::i;1051:170:1:-;;;;;;;;;:::i;395:107:16:-;;;;;;;;;:::i;1645:184:4:-;;;;;;;;;:::i;1163:478::-;;;;;;;;;:::i;659:77:18:-;;;:::i;979:90::-;;;:::i;911:248:4:-;;;;;;;;;:::i;:::-;;;;;;;;;;;885:98:5;;;:::i;:::-;;;;;;;;771:85:21;;;:::i;508:90:15:-;;;;;;;;;:::i;604:75::-;;;:::i;987:123:5:-;;;;;;;;;:::i;4786:210:19:-;;;;;;;;;:::i;1083:202:6:-;;;;;;;;;:::i;395:107:15:-;;;;;;;;;:::i;1833:505:4:-;;;;;;;;;:::i;932:134:3:-;;;:::i;1568:657:1:-;;;;;;;;;:::i;:::-;;;;;;;;1652:129:19;;;;;;;;;:::i;604:75:16:-;;;:::i;508:90::-;;;;;;;;;:::i;1731:107:18:-;;;;;;;;;:::i;707:156:1:-;789:4;808:48;824:10;836:8;846:9;808:15;:48::i;:::-;801:55;;707:156;;;;;:::o;628:81:21:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;;:::o;1225:208:1:-;1357:69;1362:10;1374:8;1384:9;1395:7;1404;1413:12;1357:4;:69::i;:::-;1225:208;;;;;:::o;841:163:6:-;913:32;923:10;934:3;938:6;913:9;:32::i;:::-;951:48;966:10;978:3;983:6;992:5;951:14;:48::i;:::-;841:163;;;:::o;2721:145:19:-;2786:4;2802:36;2811:10;2823:7;2832:5;2802:8;:36::i;:::-;-1:-1:-1;2855:4:19;2721:145;;;;:::o;2028:217:3:-;2160:80;2171:10;2183:11;2196:8;2206:9;2217;2228:7;2160:80;;;;;;;;;;;;:10;:80::i;916:89:19:-;986:12;;916:89;:::o;2508:99:3:-;2564:38;2578:10;2590:11;2564:13;:38::i;:::-;2508:99;:::o;717:208::-;805:4;834:26;;;:13;:26;;;;;;805:4;;-1:-1:-1;;;;;834:37:3;;;:26;;:37;833:67;;;;;877:22;887:11;877:9;:22::i;:::-;817:83;717:208;-1:-1:-1;;;;717:208:3:o;3809:136:1:-;3936:3;3911:22;;:28;;3809:136::o;1779:245:3:-;1841:7;1856:12;1871:22;1881:11;1871:9;:22::i;:::-;1856:37;;1899:20;1929:7;1925:69;;;-1:-1:-1;1961:26:3;;;;:13;:26;;;;;;-1:-1:-1;;;;;1961:26:3;1925:69;2007:12;-1:-1:-1;;1779:245:3;;;;:::o;3329:224:19:-;3408:4;3424:26;3434:4;3440:2;3444:5;3424:9;:26::i;:::-;-1:-1:-1;;;;;3487:14:19;;;;;;:8;:14;;;;;;;;3475:10;3487:26;;;;;;;;;3460:65;;3469:4;;3487:37;;3518:5;3487:37;:30;:37;:::i;:::-;3460:8;:65::i;:::-;-1:-1:-1;3542:4:19;3329:224;;;;;;:::o;708:173:5:-;767:13;;:::i;:::-;827:1;796:19;;;:8;:19;;;;;:28;;;788:54;;;;-1:-1:-1;;;;;788:54:5;;;;;;;;;;;;;;;;;856:19;;;;:8;:19;;;;;;;;848:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:19;;848:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;848:28:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;848:28:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;848:28:5;;;-1:-1:-1;848:28:5;;;;;;;;;;;;;;;;708:173;-1:-1:-1;;708:173:5:o;930:81:21:-;995:9;;;;930:81;:::o;4067:200:19:-;4172:10;4147:4;4193:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4193:29:19;;;;;;;;;;4147:4;;4163:76;;4184:7;;4193:45;;4227:10;4193:45;:33;:45;:::i;1225:104:5:-;863:9:18;:7;:9::i;:::-;855:18;;;;;;1292:30:5;1306:9;1317:4;1292:13;:30::i;443:128:22:-;511:4;350:20:15;359:10;350:8;:20::i;:::-;342:29;;;;;;527:16:22;533:2;537:5;527;:16::i;295:77:20:-;341:24;347:10;359:5;341;:24::i;2249:255:3:-;2409:90;2420:10;2432:11;2445:8;2455:9;2466;2477:7;2486:12;2409:10;:90::i;:::-;2249:255;;;;;;:::o;1437:127:1:-;1522:10;1488:7;1510:23;;;:11;:23;;;;;:37;586:2;;1510:49;;1503:56;;1437:127;:::o;3264:541::-;3347:20;;:::i;:::-;3370:28;3388:9;3370:17;:28::i;:::-;3347:51;-1:-1:-1;3420:6:1;3404:13;3433:260;3487:1;3454:6;:25;;;:32;:34;3450:1;:38;3433:260;;;3503:13;3519:64;3539:6;3546;:25;;;3572:1;3546:28;;;;;;;;;;;;;;:36;;;3519:19;:64::i;:::-;3503:80;;3591:67;3607:6;:25;;;3633:1;3607:28;;;;;;;;;;;;;;:37;;;3646:8;3656:1;3591:15;:67::i;:::-;3666:20;;;;3490:3;;3433:260;;;-1:-1:-1;3715:25:1;;;;3741:32;;3699:100;;3715:25;-1:-1:-1;;3741:34:1;;;3715:61;;;;;1114:107:5;863:9:18;:7;:9::i;:::-;855:18;;;;;;1183:31:5;1197:9;1208:5;1183:13;:31::i;1070:705:3:-;1179:23;;;393:2;1179:23;;;;;;;;;1126:15;;;;1179:23;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1308:10:3;1209:21;1295:24;;;:12;:24;;;;;;;;;:36;;1268:63;;;;;;;;;;;;;;;;;1149:53;;-1:-1:-1;393:2:3;1233:17;;-1:-1:-1;;1233:29:3;;1268:24;;:63;;;1295:36;1268:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1342:7;:14;1360:1;1342:19;:57;;;;1398:1;1381:7;:14;:18;1365:13;:34;1342:57;1338:119;;;-1:-1:-1;1409:21:3;;-1:-1:-1;1438:12:3;;-1:-1:-1;;1438:12:3;1338:119;1466:21;1498:249;1546:5;393:2;1534:17;1518:13;:33;1498:249;;;1598:7;:14;1582:13;:30;1578:140;;;1666:10;1653:24;;;;:12;:24;;;;;1686:22;;1653:24;;;1686:7;;1694:13;;1686:22;;;;;;;;;;;;1653:56;;;;;;;;;;;1624:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1624:85:3;;;-1:-1:-1;;1624:85:3;;;;;;;;;;;;;;;;-1:-1:-1;;1624:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:11;1636:13;1624:26;;;;;;;;;;;;;:85;;;;1578:140;1725:15;1553;;;;1725;1498:249;;;-1:-1:-1;1759:11:3;;1070:705;-1:-1:-1;;;;1070:705:3:o;867:180:1:-;976:4;995:45;1011:7;1020:8;1030:9;995:15;:45::i;1217:104:19:-;-1:-1:-1;;;;;1298:16:19;1272:7;1298:16;;;:9;:16;;;;;;;1217:104::o;1423:137:18:-;863:9;:7;:9::i;:::-;855:18;;;;;;1505:6;;1484:40;;1521:1;;-1:-1:-1;;;;;1505:6:18;;1484:40;;1521:1;;1484:40;1534:6;:19;;-1:-1:-1;;;;;;1534:19:18;;;1423:137::o;517:196:3:-;578:4;618:26;;;:13;:26;;;;;;;;;-1:-1:-1;;;;;618:26:3;605:40;;:12;:40;;;;;:61;;;;;;;:76;684:3;-1:-1:-1;;517:196:3:o;619:93:20:-;683:22;693:4;699:5;683:9;:22::i;:::-;619:93;;:::o;1051:170:1:-;1155:59;1160:10;1172:8;1182:9;1193:7;1202;1155:59;;;;;;;;;;;;:4;:59::i;:::-;1051:170;;;;:::o;395:107:16:-;451:4;474:21;451:4;487:7;474:21;:12;:21;:::i;1645:184:4:-;851:1;821:15;;;:6;:15;;;;;:27;;;1695:7;;813:53;;;;-1:-1:-1;;;;;813:53:4;;;;;;;;;350:20:16;359:10;350:8;:20::i;:::-;342:29;;;;;;1736:15:4;;;;:6;:15;;;;;:22;;;;;:31;1728:59;;;;-1:-1:-1;;;;;1728:59:4;;;;;;;;;-1:-1:-1;1793:15:4;;;;:6;:15;;;;;:22;;:27;;-1:-1:-1;;1793:27:4;1816:4;1793:27;;;1645:184::o;1163:478::-;863:9:18;:7;:9::i;:::-;855:18;;;;;;1270:1:4;1260:7;:11;1252:36;;;;-1:-1:-1;;;;;1252:36:4;;;;;;;;;1312:1;1302:7;:11;1294:40;;;;-1:-1:-1;;;;;1294:40:4;;;;;;;;;1348:15;;;;:6;:15;;;;;:27;;;:32;1340:55;;;;-1:-1:-1;;;;;1340:55:4;;;;;;;;;1409:19;;;;:12;:19;;;;;;:24;1401:52;;;;-1:-1:-1;;;;;1401:52:4;;;;;;;;;1460:28;1474:4;1480:7;1460:5;:28::i;:::-;1494:19;;:::i;:::-;-1:-1:-1;1516:51:4;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1516:51:4;;;;;;1553:10;1516:51;;;;;;;;;;;;;1573:15;;;:6;:15;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1573:25:4;;;-1:-1:-1;;;;;;1573:25:4;;;-1:-1:-1;;1573:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1607:19;;;:12;:19;;;;;:29;1163:478::o;659:77:18:-;723:6;;-1:-1:-1;;;;;723:6:18;659:77;:::o;979:90::-;1056:6;;-1:-1:-1;;;;;1056:6:18;1042:10;:20;;979:90::o;911:248:4:-;985:14;821:15;;;:6;:15;;;;;:27;;;985:14;;;;;;956:7;;813:53;;;;-1:-1:-1;;;;;813:53:4;;;;;;;;;-1:-1:-1;;;1060:15:4;;;;-1:-1:-1;;1060:6:4;:15;;;;;:22;;;;1084:21;;;;1107:22;;;;;1060;;1084:21;;;-1:-1:-1;;;;;1084:21:4;;1131:22;;;911:248::o;885:98:5:-;928:16;964:13;956:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;885:98;:::o;771:85:21:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:15;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;987:123:5:-;863:9:18;:7;:9::i;:::-;855:18;;;;;;1072:31:5;1086:9;1097:5;1072:13;:31::i;4786:210:19:-;4896:10;4871:4;4917:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4917:29:19;;;;;;;;;;4871:4;;4887:81;;4908:7;;4917:50;;4951:15;4917:50;:33;:50;:::i;1083:202:6:-;1143:4;1181:32;1191:10;1202:3;1206:6;1181:9;:32::i;:::-;1219:44;1234:10;1246:3;1251:6;1260:1;1219:14;:44::i;395:107:15:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;1833:505:4:-;1905:18;;;;;;;;;;1890:12;1946:18;;;:12;:18;;;;;;;;1978:10;1970:37;;;;-1:-1:-1;;;;;1970:37:4;;;;;;;;;2021:14;;;;:6;:14;;;;;:21;;;;;:29;;:21;:29;2013:52;;;;-1:-1:-1;;;;;2013:52:4;;;;;;;;;2079:14;;;;:6;:14;;;;;:19;:28;;2071:53;;;;-1:-1:-1;;;;;2071:53:4;;;;;;;;;2169:14;;;;:6;:14;;;;;:21;;;2133:58;;2151:4;;2158:10;;2133:9;:58::i;:::-;2216:14;;;;:6;:14;;;;;;;:20;;;;;2238:21;;;;2202:70;;2261:10;;2216:20;;;;-1:-1:-1;;;;;2216:20:4;;2202:70;;;;2238:21;2202:70;;;;;;;;;;2288:18;;;;:12;:18;;;;;;;;2281:25;;;2319:14;;;:6;:14;;;;2312:21;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2312:21:4;;;;;;-1:-1:-1;1833:505:4:o;932:134:3:-;1019:10;984:7;1006:24;;;:12;:24;;;;;:36;;:43;393:2;;1006:55;;1568:657:1;1745:10;1650:21;1733:23;;;:11;:23;;;;;;;;1709:54;;;;;;;;;;;;;;;;;1623:14;;-1:-1:-1;;586:2:1;1674:17;;:29;;1623:14;;1709:54;1733:23;1709:54;1650:21;1709:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1709:54:1;;;-1:-1:-1;;1709:54:1;;;;;;;;;;;;;;;;-1:-1:-1;;1709:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1774:6;:13;1791:1;1774:18;:55;;;;1828:1;1812:6;:13;:17;1796:13;:33;1774:55;1770:117;;;-1:-1:-1;1839:20:1;;-1:-1:-1;1867:12:1;;-1:-1:-1;1867:12:1;1770:117;1921:22;;;586:2;1921:22;;;;;;;;;1893:25;;1921:22;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;1893:50:1;-1:-1:-1;1951:21:1;1983:212;2031:5;586:2;2019:17;2003:13;:33;1983:212;;;2083:6;:13;2067;:29;2063:103;;;2136:6;2143:13;2136:21;;;;;;;;;;;;;;2108:10;2119:13;2108:25;;;;;;;;;;;;;:49;;;;2063:103;2173:15;2038;;;;2173;1983:212;;;-1:-1:-1;2209:10:1;1568:657;-1:-1:-1;;;;1568:657:1:o;1652:129:19:-;-1:-1:-1;;;;;1750:15:19;;;1724:7;1750:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1652:129::o;604:75:16:-;647:25;661:10;647:13;:25::i;508:90::-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;1731:107:18:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;1803:18;:28::i;2853:407:1:-;2954:4;;2971:262;-1:-1:-1;;;;;2992:19:1;;;;;;:11;:19;;;;;:33;2988:37;;2971:262;;;3040:18;;:::i;:::-;-1:-1:-1;;;;;3061:19:1;;;;;;:11;:19;;;;;:29;;3088:1;;3061:29;;;;;;;;;;;;;;;;3040:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3040:50:1;;;-1:-1:-1;;3040:50:1;;;;;;;;;;;;;;;;-1:-1:-1;;3040:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3122:8;3105:5;:13;;;:25;3104:60;;;;;3154:9;3136:5;:14;;;:27;3104:60;:92;;;;-1:-1:-1;3169:20:1;;3192:3;-1:-1:-1;3104:92:1;3099:128;;;3214:4;3207:11;;;;;;3099:128;-1:-1:-1;3027:3:1;;2971:262;;;-1:-1:-1;3250:5:1;;2853:407;-1:-1:-1;;;;2853:407:1:o;2229:620::-;2379:20;;:::i;:::-;2402:28;2420:9;2402:17;:28::i;:::-;2379:51;;2461:7;2444:6;:13;;;:24;2436:53;;;;-1:-1:-1;;;;;2436:53:1;;;;;;;;;2508:43;2524:5;2531:8;2541:9;2508:15;:43::i;:::-;2507:44;2499:67;;;;-1:-1:-1;;;;;2499:67:1;;;;;;;;;2577:10;;2573:126;;2642:50;2666:4;2673:7;2682:9;2642:15;:50::i;:::-;-1:-1:-1;;;;;2734:18:1;;;;;;:11;:18;;;;;;;;2765:78;;;;;;;2777:20;;;;;2771:3;:26;2765:78;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;;2734:110:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:18:-1;;2765:78:1;2734:110;;;;;;;;;;;:::i;:::-;-1:-1:-1;2734:110:1;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2229:620;;;;;;;:::o;1588:218:6:-;1771:30;1787:4;1792:2;1795:5;1771:15;:30::i;1289:293::-;1388:22;1407:2;1388:18;:22::i;:::-;1385:155;;;1490:43;;-1:-1:-1;;;;;1490:43:6;;1479:2;;-1:-1:-1;;;;;1490:22:6;;;;;:43;;1513:6;;1521:5;;1528:4;;1490:43;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1490:43:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1490:43:6;;;;1385:155;;1567:2;-1:-1:-1;;;;;1550:27:6;1559:6;-1:-1:-1;;;;;1550:27:6;-1:-1:-1;;;;;;;;;;;1571:5:6;1550:27;;;;;;;;;;;;;;;1289:293;;;;:::o;6831:248:19:-;-1:-1:-1;;;;;6923:21:19;;6915:30;;;;;;-1:-1:-1;;;;;6963:19:19;;6955:28;;;;;;-1:-1:-1;;;;;6994:15:19;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;;:32;;;7041:31;;;;;7021:5;;7041:31;;;;;;;;;;6831:248;;;:::o;2616:696:3:-;2804:51;2827:6;2835:8;2845:9;2804:22;:51::i;:::-;2796:74;;;;-1:-1:-1;;;;;2796:74:3;;;;;;;;;2920:1;2882:26;;;:13;:26;;;;;;-1:-1:-1;;;;;2882:26:3;:40;;;;2881:71;;;2929:22;2939:11;2929:9;:22::i;:::-;2928:23;2881:71;2877:146;;;2976:26;;;;:13;:26;;;;;;2962:54;;-1:-1:-1;;;;;2976:26:3;2990:11;2962:13;:54::i;:::-;3075:1;3037:26;;;:13;:26;;;;;;-1:-1:-1;;;;;3037:26:3;:40;3029:68;;;;-1:-1:-1;;;;;3029:68:3;;;;;;;;;3103:26;;;;:13;:26;;;;;;;;:35;;-1:-1:-1;;;;;;3103:35:3;-1:-1:-1;;;;;3103:35:3;;;;;;;;3190:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3145:20;;;:12;:20;;;;;:41;;;;;;;;;:106;;;;;;-1:-1:-1;3145:106:3;;;;;;;;;;;;3190:61;;3145:41;:106;;;;;;;;;;;:::i;:::-;-1:-1:-1;3145:106:3;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;3257:20:3;;;;;;;:12;:20;;;;;;;:32;;;;27:10:-1;;23:18;;;45:23;;3257:50:3;;;;;;;;;-1:-1:-1;;;;;2616:696:3:o;3316:661::-;3399:26;;;;:13;:26;;;;;;-1:-1:-1;;;;;3399:36:3;;;:26;;:36;3391:59;;;;-1:-1:-1;;;;;3391:59:3;;;;;;;;;3463:26;;;;:13;:26;;;;;;;;3456:33;;-1:-1:-1;;;;;;3456:33:3;;;-1:-1:-1;;;;;3502:20:3;;;;:12;:20;;;;;:41;;;;;;;;3495:48;;;3456:33;3495:48;;;;;;;;;;;3502:41;3495:48;;;;3463:26;3495:48;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;3549:10:3;;-1:-1:-1;3549:10:3;3571:267;-1:-1:-1;;;;;3592:20:3;;;;;;:12;:20;;;;;3632:1;3592:32;:39;-1:-1:-1;;3592:41:3;3588:45;;3571:267;;;3649:5;3646:186;;;-1:-1:-1;;;;;3703:20:3;;;;;;:12;:20;;;;;:32;;;;:37;;:32;;3736:3;;;3703:37;;;;;;;;;;;;;;3665:12;:20;3678:6;-1:-1:-1;;;;;3665:20:3;-1:-1:-1;;;;;3665:20:3;;;;;;;;;;;;:32;;3698:1;3665:35;;;;;;;;;;;;;;;;;:75;3646:186;;;-1:-1:-1;;;;;3773:20:3;;;;;;:12;:20;;;;;:32;;:35;;3812:11;;3773:32;3806:1;;3773:35;;;;;;;;;;;;;;:50;3765:58;;3646:186;3634:3;;3571:267;;;-1:-1:-1;;;;;;3850:20:3;;;;;;:12;:20;;;;;:32;;3883:39;;-1:-1:-1;;3883:41:3;;;3850:75;;;;;;;;;;;;;;;;;3843:82;;;-1:-1:-1;;;;;3931:20:3;;;;:12;:20;;;;;:32;;:41;;;;;-1:-1:-1;;3931:41:3;;;:::i;1211:145:17:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:17;;;1211:145::o;1439:::-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;2818:250:5;2901:19;;;;:8;:19;;;;;:28;;;2893:55;;;;-1:-1:-1;;;;;2893:55:5;;;;;;;;;2963:19;;;;:8;:19;;;;;:25;;;;;:39;;;;;;;2955:64;;;;-1:-1:-1;;;;;2955:64:5;;;;;;;;;3025:19;;;;:8;:19;;;;;;:25;;:38;;-1:-1:-1;;3025:38:5;;;;;;;;;;2818:250::o;5814:263:19:-;-1:-1:-1;;;;;5888:21:19;;5880:30;;;;;;5936:12;;:23;;5953:5;5936:23;:16;:23;:::i;:::-;5921:12;:38;-1:-1:-1;;;;;5990:18:19;;;;;;:9;:18;;;;;;:29;;6013:5;5990:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5969:18:19;;;;;;:9;:18;;;;;;:50;;;;6034:36;;5969:18;;;-1:-1:-1;;;;;;;;;;;6034:36:19;;;6064:5;;6034:36;;;;;;;;;;5814:263;;:::o;6303:::-;-1:-1:-1;;;;;6377:21:19;;6369:30;;;;;;6425:12;;:23;;6442:5;6425:23;:16;:23;:::i;:::-;6410:12;:38;-1:-1:-1;;;;;6479:18:19;;;;;;:9;:18;;;;;;:29;;6502:5;6479:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6458:18:19;;;;;;:9;:18;;;;;;:50;;;;6523:36;;-1:-1:-1;;;;;;;;;;;6523:36:19;;;6553:5;;6523:36;;7468:179;7538:21;7544:7;7553:5;7538;:21::i;:::-;-1:-1:-1;;;;;7599:17:19;;;;;;:8;:17;;;;;;;;7587:10;7599:29;;;;;;;;;7569:71;;7578:7;;7599:40;;7633:5;7599:40;:33;:40;:::i;786:162:14:-;858:4;-1:-1:-1;;;;;882:21:14;;874:30;;;;;;-1:-1:-1;;;;;;921:20:14;:11;:20;;;;;;;;;;;;;;;786:162::o;685:119:15:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:15;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:15;;;;;;;;810:127;:::o;1333:1481:5:-;1568:19;;;;:8;:19;;;;;:28;;;:33;1560:51;;;;-1:-1:-1;;;;;1560:51:5;;;;;;;;;1622:29;;:::i;:::-;1654:15;:3;:13;:15::i;:::-;1622:47;;1675:35;1713:13;:4;:11;:13::i;:::-;1675:51;;1733:19;1755:20;:8;1764:1;1755:11;;;;;;;;;;;;;;:18;:20::i;:::-;1733:42;;1807:3;1790:14;:20;1782:40;;;;-1:-1:-1;;;;;1782:40:5;;;;;;;;;1829:16;1856:20;:8;1865:1;1856:11;;;;;;;:20;1829:48;;1883:14;1908:20;:8;1917:1;1908:11;;;;;;;:20;1883:46;;1935:21;1967:20;:8;1976:1;1967:11;;;;;;;:20;1935:53;;2000;2056:20;:8;2065:1;2056:11;;;;;;;;;;;;;;:18;:20::i;:::-;2105:33;;2000:76;;-1:-1:-1;2087:15:5;2144:319;2165:10;2161:1;:14;2144:319;;;2190:39;2232:38;:26;2259:1;2232:29;;;;;;;:38;2190:80;;2287:8;:18;2296:8;2287:18;;;;;;;;;;;:37;;2339:105;;;;;;;;2357:24;:12;2370:1;2357:15;;;;;;;:24;2339:105;;;;2382:27;:12;2395:1;2382:15;;;;;;;;;;;;;;:25;:27::i;:::-;-1:-1:-1;;;;;2339:105:5;;;;;2417:25;:12;2430:1;2417:15;;;;;;;;;;;;;;:23;:25::i;:::-;2339:105;;27:10:-1;;39:1;23:18;;;45:23;;;-1:-1;2287:165:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2287:165:5;-1:-1:-1;;;;;2287:165:5;;;;;;;;;;;;;;;;23:18:-1;;2287:165:5;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2177:3:5;;;;;-1:-1:-1;2144:319:5;;-1:-1:-1;;2144:319:5;;-1:-1:-1;2501:18:5;;;;:8;:18;;;;;2473:66;;2501:37;;2473:27;:66::i;:::-;-1:-1:-1;;2550:18:5;;;;:8;:18;;;;;;;:50;;;2606:27;;;;:38;;;2650:25;;;:34;;;;2690:32;;;;:48;;;;2744:24;;;;:31;;-1:-1:-1;;2744:31:5;;;;;27:10:-1;;23:18;;;45:23;;2781:28:5;;;;;;;;-1:-1:-1;;;;1333:1481:5:o;810:127:16:-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:16;;;;;;;;810:127;:::o;685:119::-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:16;;;;;;;;685:119;:::o;1982:183:18:-;-1:-1:-1;;;;;2055:22:18;;2047:31;;;;;;2114:6;;2093:38;;-1:-1:-1;;;;;2093:38:18;;;;2114:6;;2093:38;;2114:6;;2093:38;2141:6;:17;;-1:-1:-1;;;;;;2141:17:18;-1:-1:-1;;;;;2141:17:18;;;;;;;;;;1982:183::o;5215:256:19:-;-1:-1:-1;;;;;5302:16:19;;5294:25;;;;;;-1:-1:-1;;;;;5348:15:19;;;;;;:9;:15;;;;;;:26;;5368:5;5348:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5330:15:19;;;;;;;:9;:15;;;;;;:44;;;;5400:13;;;;;;;:24;;5418:5;5400:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5384:13:19;;;;;;;:9;:13;;;;;;;:40;;;;5439:25;;;;;;-1:-1:-1;;;;;;;;;;;5439:25:19;;;5458:5;;5439:25;;463:616:24;1026:20;1064:8;;;463:616::o;259:181:14:-;-1:-1:-1;;;;;335:21:14;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:14;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:14;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:14;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:14;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:14;;;514:184::o;489:218:25:-;550:14;;:::i;:::-;-1:-1:-1;672:28:25;;;;;;;;;680:11;;672:28;;640:4;630:15;;;672:28;;;;489:218;;;:::o;1113:474::-;1173:23;1216:12;1223:4;1216:6;:12::i;:::-;1208:21;;;;;;1240:10;1253:14;1262:4;1253:8;:14::i;:::-;1240:27;;1300:5;1286:20;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1277:29;;1317:11;1345:27;1360:4;:11;;;1345:14;:27::i;:::-;1331:11;;;;:41;;-1:-1:-1;1382:12:25;;1404:177;1425:5;1421:1;:9;1404:177;;;1461:19;1473:6;1461:11;:19::i;:::-;1451:29;;1506:24;;;;;;;;1514:7;1506:24;;;;1523:6;1506:24;;;1494:6;1501:1;1494:9;;;;;;;;;;;;;;;;;:36;1554:16;;;;1432:3;;1404:177;;;;1113:474;;;;;;:::o;2995:531::-;3079:8;;3055:4;;3079:12;;;;:30;;-1:-1:-1;3095:8:25;;3107:2;-1:-1:-1;3095:14:25;3079:30;3071:39;;;;;;3121:11;3135:27;3150:4;:11;;;3135:14;:27::i;:::-;3183:8;;3246:11;;;;;:20;;3309:13;;3121:41;;-1:-1:-1;3183:17:25;;;;;3309:13;3246:20;3397:11;;3394:2;;;-1:-1:-1;3462:2:25;3458:12;;;;3453:3;3449:22;3437:35;;;2995:531;-1:-1:-1;;;2995:531:25:o;2798:191::-;2928:8;;2861:7;;2940:2;2928:14;2920:23;;;;;;2969:12;2976:4;2969:6;:12::i;3858:431::-;3951:8;;3919:12;;3943:21;;;;;;3975:11;3989:27;4004:4;:11;;;3989:14;:27::i;:::-;4037:8;;4101:14;;;4037:17;;;;4101:14;;;-1:-1:-1;;4101:14:25;;;;;;;;;;;3975:41;;-1:-1:-1;4079:19:25;;4037:17;4101:14;;;;;;;21:6:-1;;104:10;4101:14:25;87:34:-1;135:17;;-1:-1;4101:14:25;;4079:36;;4126:12;4192:6;4186:4;4182:17;4171:28;;4219:40;4238:6;4224:4;:11;;;:20;4246:7;4255:3;4219:4;:40::i;3072:380:5:-;3181:25;;3173:51;;;;-1:-1:-1;;;;;3173:51:5;;;;;;;;;3249:25;;3231:15;;3300:91;3321:10;3317:1;:14;3300:91;;;3355:18;3374:1;3355:21;;;;;;;;;;;;;;;;;;;;;:29;3346:38;;;;;3333:3;;3300:91;;;;3404:5;3413:3;3404:12;3396:47;;;;-1:-1:-1;;;;;3396:47:5;;;;;;;;1691:330:25;1771:8;;1751:4;;1767:31;;-1:-1:-1;1793:5:25;1786:12;;1767:31;1844:11;;;;1905:13;;1809:11;1897:22;;279:4;1943:24;;1939:54;;;1988:5;1981:12;;;;;;4395:410;4476:8;;4456:4;;4472:27;;-1:-1:-1;4498:1:25;4491:8;;4472:27;4510:10;4523:1;4510:14;;4534:12;4563:27;4578:4;:11;;;4563:14;:27::i;:::-;4549:11;;;;4628:8;;4549:41;;;;-1:-1:-1;4614:22:25;4646:130;4663:6;4653:7;:16;4646:130;;;4704:20;4716:7;4704:11;:20::i;:::-;4758:7;;;;;4694:30;;;;4646:130;;;-1:-1:-1;4793:5:25;;4395:410;-1:-1:-1;;;4395:410:25:o;6134:538::-;6269:13;;6193:4;;6261:22;;187:4;6307:26;;6303:362;;;6355:1;6348:8;;;;;6303:362;233:4;6375:25;;;:83;;-1:-1:-1;279:4:25;6405:25;;;;;:52;;-1:-1:-1;325:4:25;6434:23;;6405:52;6371:294;;;6479:1;6472:8;;;;;6371:294;279:4;6499:24;;6495:170;;;-1:-1:-1;;6563:35:25;;-1:-1:-1;6556:42:25;;6495:170;-1:-1:-1;;6632:33:25;;-1:-1:-1;6625:40:25;;6495:170;6134:538;;;;:::o;4854:1228::-;4990:13;;4910:8;;4982:22;;187:4;5028:26;;5024:1052;;;5075:1;5068:8;;;;;5024:1052;233:4;5104:25;;5100:976;;;-1:-1:-1;;5150:30:25;;-1:-1:-1;5143:37:25;;5100:976;279:4;5200:24;;5196:880;;;5293:4;5286:5;5282:16;5372:1;5364:6;5360:14;5350:24;;5527:7;5523:2;5519:16;5514:3;5510:26;5501:6;5495:13;5491:46;5620:1;5611:7;5607:15;5598:7;5594:29;5587:36;;5249:388;;;;;325:4;5666:23;;5662:414;;;-1:-1:-1;;5712:28:25;;-1:-1:-1;5705:35:25;;5662:414;5878:1;5866:14;;;;5917:13;5945:2;5941:16;;;5834:4;5941:16;5936:3;5932:26;5913:46;;6023:29;;;-1:-1:-1;;6023:29:25;;4854:1228;-1:-1:-1;4854:1228:25:o;6826:697::-;6898:8;6894:21;;6908:7;;6894:21;6972:194;363:2;6979:16;;6972:194;;7069:10;;7056:24;;363:2;7108:16;;;;7138:17;;;;-1:-1:-1;;6997:16:25;6972:194;;;7348:10;;7419:11;;363:2;7276:15;;;;7268:3;:24;-1:-1:-1;;7268:28:25;7360:9;;7344:26;;;7415:22;;7485:21;;;;7472:35;;7315:202::o;336:2005:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;336:2005:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;336:2005:4;;;-1:-1:-1;336:2005:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:118:-1;;72:46;110:6;97:20;72:46;;130:118;;197:46;235:6;222:20;197:46;;256:440;;357:3;350:4;342:6;338:17;334:27;324:2;;375:1;372;365:12;324:2;412:6;399:20;434:64;449:48;490:6;449:48;;;434:64;;;425:73;;518:6;511:5;504:21;554:4;546:6;542:17;587:4;580:5;576:16;622:3;613:6;608:3;604:16;601:25;598:2;;;639:1;636;629:12;598:2;649:41;683:6;678:3;673;649:41;;;317:379;;;;;;;;1280:241;;1384:2;1372:9;1363:7;1359:23;1355:32;1352:2;;;1400:1;1397;1390:12;1352:2;1435:1;1452:53;1497:7;1477:9;1452:53;;1528:366;;;1649:2;1637:9;1628:7;1624:23;1620:32;1617:2;;;1665:1;1662;1655:12;1617:2;1700:1;1717:53;1762:7;1742:9;1717:53;;;1707:63;;1679:97;1807:2;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;;;1815:63;;1786:98;1611:283;;;;;;1901:491;;;;2039:2;2027:9;2018:7;2014:23;2010:32;2007:2;;;2055:1;2052;2045:12;2007:2;2090:1;2107:53;2152:7;2132:9;2107:53;;;2097:63;;2069:97;2197:2;2215:53;2260:7;2251:6;2240:9;2236:22;2215:53;;;2205:63;;2176:98;2305:2;2323:53;2368:7;2359:6;2348:9;2344:22;2323:53;;;2313:63;;2284:98;2001:391;;;;;;2399:366;;;2520:2;2508:9;2499:7;2495:23;2491:32;2488:2;;;2536:1;2533;2526:12;2488:2;2571:1;2588:53;2633:7;2613:9;2588:53;;;2578:63;;2550:97;2678:2;2696:53;2741:7;2732:6;2721:9;2717:22;2696:53;;3145:491;;;;3283:2;3271:9;3262:7;3258:23;3254:32;3251:2;;;3299:1;3296;3289:12;3251:2;3334:1;3351:53;3396:7;3376:9;3351:53;;;3341:63;;3313:97;3441:2;3459:53;3504:7;3495:6;3484:9;3480:22;3459:53;;3643:241;;3747:2;3735:9;3726:7;3722:23;3718:32;3715:2;;;3763:1;3760;3753:12;3715:2;3798:1;3815:53;3860:7;3840:9;3815:53;;3891:849;;;;;;4073:3;4061:9;4052:7;4048:23;4044:33;4041:2;;;4090:1;4087;4080:12;4041:2;4125:1;4142:53;4187:7;4167:9;4142:53;;;4132:63;;4104:97;4232:2;4250:53;4295:7;4286:6;4275:9;4271:22;4250:53;;;4240:63;;4211:98;4340:2;4358:53;4403:7;4394:6;4383:9;4379:22;4358:53;;;4348:63;;4319:98;4448:2;4466:53;4511:7;4502:6;4491:9;4487:22;4466:53;;;4456:63;;4427:98;4584:3;4573:9;4569:19;4556:33;4609:18;4601:6;4598:30;4595:2;;;4641:1;4638;4631:12;4595:2;4661:63;4716:7;4707:6;4696:9;4692:22;4661:63;;;4651:73;;4535:195;4035:705;;;;;;;;;4747:1081;;;;;;;4956:3;4944:9;4935:7;4931:23;4927:33;4924:2;;;4973:1;4970;4963:12;4924:2;5008:1;5025:53;5070:7;5050:9;5025:53;;;5015:63;;4987:97;5115:2;5133:53;5178:7;5169:6;5158:9;5154:22;5133:53;;;5123:63;;5094:98;5223:2;5241:53;5286:7;5277:6;5266:9;5262:22;5241:53;;;5231:63;;5202:98;5331:2;5349:53;5394:7;5385:6;5374:9;5370:22;5349:53;;;5339:63;;5310:98;5467:3;5456:9;5452:19;5439:33;5492:18;5484:6;5481:30;5478:2;;;5524:1;5521;5514:12;5478:2;5544:63;5599:7;5590:6;5579:9;5575:22;5544:63;;;5534:73;;5418:195;5672:3;5661:9;5657:19;5644:33;5697:18;5689:6;5686:30;5683:2;;;5729:1;5726;5719:12;5683:2;5749:63;5804:7;5795:6;5784:9;5780:22;5749:63;;;5739:73;;5623:195;4918:910;;;;;;;;;5835:345;;5948:2;5936:9;5927:7;5923:23;5919:32;5916:2;;;5964:1;5961;5954:12;5916:2;5999:31;;6050:18;6039:30;;6036:2;;;6082:1;6079;6072:12;6036:2;6102:62;6156:7;6147:6;6136:9;6132:22;6102:62;;6435:470;;;6565:2;6553:9;6544:7;6540:23;6536:32;6533:2;;;6581:1;6578;6571:12;6533:2;6616:1;6633:53;6678:7;6658:9;6633:53;;;6623:63;;6595:97;6751:2;6740:9;6736:18;6723:32;6775:18;6767:6;6764:30;6761:2;;;6807:1;6804;6797:12;6761:2;6827:62;6881:7;6872:6;6861:9;6857:22;6827:62;;6912:366;;;7033:2;7021:9;7012:7;7008:23;7004:32;7001:2;;;7049:1;7046;7039:12;7001:2;7084:1;7101:53;7146:7;7126:9;7101:53;;7285:491;;;;7423:2;7411:9;7402:7;7398:23;7394:32;7391:2;;;7439:1;7436;7429:12;7391:2;7474:1;7491:53;7536:7;7516:9;7491:53;;7783:723;;;;;7948:3;7936:9;7927:7;7923:23;7919:33;7916:2;;;7965:1;7962;7955:12;7916:2;8000:1;8017:53;8062:7;8042:9;8017:53;;;8007:63;;7979:97;8107:2;8125:53;8170:7;8161:6;8150:9;8146:22;8125:53;;;8115:63;;8086:98;8215:2;8233:53;8278:7;8269:6;8258:9;8254:22;8233:53;;;8223:63;;8194:98;8351:2;8340:9;8336:18;8323:32;8375:18;8367:6;8364:30;8361:2;;;8407:1;8404;8397:12;8361:2;8427:63;8482:7;8473:6;8462:9;8458:22;8427:63;;;8417:73;;8302:194;7910:596;;;;;;;;8513:955;;;;;;8705:3;8693:9;8684:7;8680:23;8676:33;8673:2;;;8722:1;8719;8712:12;8673:2;8757:1;8774:53;8819:7;8799:9;8774:53;;;8764:63;;8736:97;8864:2;8882:53;8927:7;8918:6;8907:9;8903:22;8882:53;;;8872:63;;8843:98;8972:2;8990:53;9035:7;9026:6;9015:9;9011:22;8990:53;;;8980:63;;8951:98;9108:2;9097:9;9093:18;9080:32;9132:18;9124:6;9121:30;9118:2;;;9164:1;9161;9154:12;9118:2;9184:63;9239:7;9230:6;9219:9;9215:22;9184:63;;9476:225;;9611:84;9691:3;9683:6;9611:84;;9710:281;;9873:112;9981:3;9973:6;9873:112;;10242:173;;10329:46;10371:3;10363:6;10329:46;;;-1:-1;;10404:4;10395:14;;10322:93;10423:110;10496:31;10521:5;10496:31;;;10491:3;10484:44;10478:55;;;10722:915;;10901:71;10966:5;10901:71;;;10985:103;11081:6;11076:3;10985:103;;;10978:110;;11111:3;11153:4;11145:6;11141:17;11136:3;11132:27;11179:73;11246:5;11179:73;;;11273:1;11258:340;11283:6;11280:1;11277:13;11258:340;;;11345:9;11339:4;11335:20;11330:3;11323:33;11371:98;11464:4;11455:6;11449:13;11371:98;;;11363:106;;11486:77;11556:6;11486:77;;;11586:4;11577:14;;;;;11476:87;-1:-1;11305:1;11298:9;11258:340;;;-1:-1;11611:4;;10880:757;-1:-1;;;;;;10880:757;11726:991;;11919:81;11994:5;11919:81;;;12013:107;12113:6;12108:3;12013:107;;;12006:114;;12143:3;12185:4;12177:6;12173:17;12168:3;12164:27;12211:83;12288:5;12211:83;;;12315:1;12300:378;12325:6;12322:1;12319:13;12300:378;;;12387:9;12381:4;12377:20;12372:3;12365:33;12413:126;12534:4;12525:6;12519:13;12413:126;;;12405:134;;12556:87;12636:6;12556:87;;;12666:4;12657:14;;;;;12546:97;-1:-1;12347:1;12340:9;12300:378;;12784:931;;12967:73;13034:5;12967:73;;;13053:105;13151:6;13146:3;13053:105;;;13046:112;;13181:3;13223:4;13215:6;13211:17;13206:3;13202:27;13249:75;13318:5;13249:75;;;13345:1;13330:346;13355:6;13352:1;13349:13;13330:346;;;13417:9;13411:4;13407:20;13402:3;13395:33;13443:102;13540:4;13531:6;13525:13;13443:102;;;13435:110;;13562:79;13634:6;13562:79;;;13664:4;13655:14;;;;;13552:89;-1:-1;13377:1;13370:9;13330:346;;13754:621;;13899:54;13947:5;13899:54;;;13966:86;14045:6;14040:3;13966:86;;;13959:93;;14072:56;14122:5;14072:56;;;14149:1;14134:219;14159:6;14156:1;14153:13;14134:219;;;14206:63;14265:3;14256:6;14250:13;14206:63;;;14199:70;;14286:60;14339:6;14286:60;;;14276:70;-1:-1;14181:1;14174:9;14134:219;;;-1:-1;14366:3;;13878:497;-1:-1;;;;13878:497;14383:101;14450:28;14472:5;14450:28;;14609:347;;14721:39;14754:5;14721:39;;;14772:71;14836:6;14831:3;14772:71;;;14765:78;;14848:52;14893:6;14888:3;14881:4;14874:5;14870:16;14848:52;;;14921:29;14943:6;14921:29;;;14912:39;;;;14701:255;-1:-1;;;14701:255;15290:364;;15450:67;15514:2;15509:3;15450:67;;;15550:66;15530:87;;15645:2;15636:12;;15436:218;-1:-1;;15436:218;15663:364;;15823:67;15887:2;15882:3;15823:67;;;15923:66;15903:87;;16018:2;16009:12;;15809:218;-1:-1;;15809:218;16036:363;;16196:66;16260:1;16255:3;16196:66;;;-1:-1;;;;;16275:87;;16390:2;16381:12;;16182:217;-1:-1;;16182:217;16408:364;;16568:67;16632:2;16627:3;16568:67;;;16668:66;16648:87;;16763:2;16754:12;;16554:218;-1:-1;;16554:218;16781:364;;16941:67;17005:2;17000:3;16941:67;;;-1:-1;;;;;17021:87;;17136:2;17127:12;;16927:218;-1:-1;;16927:218;17154:363;;17314:66;17378:1;17373:3;17314:66;;;-1:-1;;;;;17393:87;;17508:2;17499:12;;17300:217;-1:-1;;17300:217;17526:364;;17686:67;17750:2;17745:3;17686:67;;;-1:-1;;;;;17766:87;;17881:2;17872:12;;17672:218;-1:-1;;17672:218;17899:363;;18059:66;18123:1;18118:3;18059:66;;;-1:-1;;;;;18138:87;;18253:2;18244:12;;18045:217;-1:-1;;18045:217;18271:363;;18431:66;18495:1;18490:3;18431:66;;;-1:-1;;;;;18510:87;;18625:2;18616:12;;18417:217;-1:-1;;18417:217;18643:364;;18803:67;18867:2;18862:3;18803:67;;;-1:-1;;;;;18883:87;;18998:2;18989:12;;18789:218;-1:-1;;18789:218;19016:364;;19176:67;19240:2;19235:3;19176:67;;;19276:66;19256:87;;19371:2;19362:12;;19162:218;-1:-1;;19162:218;19389:363;;19549:66;19613:1;19608:3;19549:66;;;-1:-1;;;;;19628:87;;19743:2;19734:12;;19535:217;-1:-1;;19535:217;19761:364;;19921:67;19985:2;19980:3;19921:67;;;20021:66;20001:87;;20116:2;20107:12;;19907:218;-1:-1;;19907:218;20134:364;;20294:67;20358:2;20353:3;20294:67;;;-1:-1;;;;;20374:87;;20489:2;20480:12;;20280:218;-1:-1;;20280:218;20507:364;;20667:67;20731:2;20726:3;20667:67;;;-1:-1;;;;;20747:87;;20862:2;20853:12;;20653:218;-1:-1;;20653:218;20880:364;;21040:67;21104:2;21099:3;21040:67;;;-1:-1;;;;;21120:87;;21235:2;21226:12;;21026:218;-1:-1;;21026:218;21253:364;;21413:67;21477:2;21472:3;21413:67;;;21513:66;21493:87;;21608:2;21599:12;;21399:218;-1:-1;;21399:218;21626:364;;21786:67;21850:2;21845:3;21786:67;;;21886:66;21866:87;;21981:2;21972:12;;21772:218;-1:-1;;21772:218;21999:364;;22159:67;22223:2;22218:3;22159:67;;;22259:66;22239:87;;22354:2;22345:12;;22145:218;-1:-1;;22145:218;22372:364;;22532:67;22596:2;22591:3;22532:67;;;22632:66;22612:87;;22727:2;22718:12;;22518:218;-1:-1;;22518:218;22793:1093;22997:22;;22793:1093;;22922:4;22913:14;;;23025:61;22917:3;22997:22;23025:61;;;22942:150;23167:4;23160:5;23156:16;23150:23;23179:62;23235:4;23230:3;23226:14;23213:11;23179:62;;;23102:145;23323:4;23316:5;23312:16;23306:23;23335:62;23391:4;23386:3;23382:14;23369:11;23335:62;;;23257:146;23477:4;23470:5;23466:16;23460:23;23529:3;23523:4;23519:14;23512:4;23507:3;23503:14;23496:38;23549:68;23612:4;23599:11;23549:68;;;23541:76;;23413:216;23708:4;23701:5;23697:16;23691:23;23760:3;23754:4;23750:14;23743:4;23738:3;23734:14;23727:38;23780:68;23843:4;23830:11;23780:68;;;23772:76;22895:991;-1:-1;;;;;22895:991;23968:733;24193:22;;23968:733;;24125:4;24116:14;;;24221:61;24120:3;24193:22;24221:61;;;24145:143;24364:4;24357:5;24353:16;24347:23;24376:62;24432:4;24427:3;24423:14;24410:11;24376:62;;;24298:146;24523:4;24516:5;24512:16;24506:23;24575:3;24569:4;24565:14;24558:4;24553:3;24549:14;24542:38;24595:68;24658:4;24645:11;24595:68;;25918:1293;26142:22;;25918:1293;;26067:4;26058:14;;;26170:61;26062:3;26142:22;26170:61;;;26087:150;26313:4;26306:5;26302:16;26296:23;26325:62;26381:4;26376:3;26372:14;26359:11;26325:62;;;26247:146;26467:4;26460:5;26456:16;26450:23;26479:62;26535:4;26530:3;26526:14;26513:11;26479:62;;;26403:144;26628:4;26621:5;26617:16;26611:23;26640:62;26696:4;26691:3;26687:14;26674:11;26640:62;;;26557:151;26794:4;26787:5;26783:16;26777:23;26846:3;26840:4;26836:14;26829:4;26824:3;26820:14;26813:38;26866:160;27021:4;27008:11;26866:160;;;26858:168;;26718:320;27111:4;27104:5;27100:16;27094:23;27123:56;27173:4;27168:3;27164:14;27151:11;27123:56;;;-1:-1;27202:4;26040:1171;-1:-1;;;26040:1171;27218:110;27291:31;27316:5;27291:31;;27462:114;27541:29;27564:5;27541:29;;27583:213;27701:2;27686:18;;27715:71;27690:9;27759:6;27715:71;;27803:435;27977:2;27962:18;;27991:71;27966:9;28035:6;27991:71;;;28073:72;28141:2;28130:9;28126:18;28117:6;28073:72;;;28156;28224:2;28213:9;28209:18;28200:6;28156:72;;28245:429;28447:2;28461:47;;;28432:18;;28522:142;28432:18;28650:6;28522:142;;28681:437;28887:2;28901:47;;;28872:18;;28962:146;28872:18;29094:6;28962:146;;29125:361;29293:2;29307:47;;;29278:18;;29368:108;29278:18;29462:6;29368:108;;29493:201;29605:2;29590:18;;29619:65;29594:9;29657:6;29619:65;;29701:301;29839:2;29853:47;;;29824:18;;29914:78;29824:18;29978:6;29914:78;;30009:407;30200:2;30214:47;;;30185:18;;30275:131;30185:18;30275:131;;30423:407;30614:2;30628:47;;;30599:18;;30689:131;30599:18;30689:131;;30837:407;31028:2;31042:47;;;31013:18;;31103:131;31013:18;31103:131;;31251:407;31442:2;31456:47;;;31427:18;;31517:131;31427:18;31517:131;;31665:407;31856:2;31870:47;;;31841:18;;31931:131;31841:18;31931:131;;32079:407;32270:2;32284:47;;;32255:18;;32345:131;32255:18;32345:131;;32493:407;32684:2;32698:47;;;32669:18;;32759:131;32669:18;32759:131;;32907:407;33098:2;33112:47;;;33083:18;;33173:131;33083:18;33173:131;;33321:407;33512:2;33526:47;;;33497:18;;33587:131;33497:18;33587:131;;33735:407;33926:2;33940:47;;;33911:18;;34001:131;33911:18;34001:131;;34149:407;34340:2;34354:47;;;34325:18;;34415:131;34325:18;34415:131;;34563:407;34754:2;34768:47;;;34739:18;;34829:131;34739:18;34829:131;;34977:407;35168:2;35182:47;;;35153:18;;35243:131;35153:18;35243:131;;35391:407;35582:2;35596:47;;;35567:18;;35657:131;35567:18;35657:131;;35805:407;35996:2;36010:47;;;35981:18;;36071:131;35981:18;36071:131;;36219:407;36410:2;36424:47;;;36395:18;;36485:131;36395:18;36485:131;;36633:407;36824:2;36838:47;;;36809:18;;36899:131;36809:18;36899:131;;37047:407;37238:2;37252:47;;;37223:18;;37313:131;37223:18;37313:131;;37461:407;37652:2;37666:47;;;37637:18;;37727:131;37637:18;37727:131;;37875:407;38066:2;38080:47;;;38051:18;;38141:131;38051:18;38141:131;;38289:357;38455:2;38469:47;;;38440:18;;38530:106;38440:18;38622:6;38530:106;;38653:213;38771:2;38756:18;;38785:71;38760:9;38829:6;38785:71;;38873:535;39069:3;39054:19;;39084:71;39058:9;39128:6;39084:71;;;39166:72;39234:2;39223:9;39219:18;39210:6;39166:72;;;39249;39317:2;39306:9;39302:18;39293:6;39249:72;;;39332:66;39394:2;39383:9;39379:18;39370:6;39332:66;;39415:205;39529:2;39514:18;;39543:67;39518:9;39583:6;39543:67;;39627:256;39689:2;39683:9;39715:17;;;39790:18;39775:34;;39811:22;;;39772:62;39769:2;;;39847:1;39844;39837:12;39769:2;39863;39856:22;39667:216;;-1:-1;39667:216;39890:258;;40033:18;40025:6;40022:30;40019:2;;;40065:1;40062;40055:12;40019:2;-1:-1;40138:4;40109;40086:17;;;;-1:-1;;40082:33;40128:15;;39956:192;40423:138;40549:4;40537:17;;40518:43;41012:124;41119:12;;41103:33;42313:195;42448:19;;;42497:4;42488:14;;42441:67;43451:105;;43520:31;43545:5;43520:31;;43563:92;43636:13;43629:21;;43612:43;43662:128;-1:-1;;;;;43731:54;;43714:76;43883:88;43961:4;43950:16;;43933:38;44398:145;44479:6;44474:3;44469;44456:30;-1:-1;44535:1;44517:16;;44510:27;44449:94;44552:268;44617:1;44624:101;44638:6;44635:1;44632:13;44624:101;;;44705:11;;;44699:18;44686:11;;;44679:39;44660:2;44653:10;44624:101;;;44740:6;44737:1;44734:13;44731:2;;;-1:-1;;44805:1;44787:16;;44780:27;44601:219;44828:97;44916:2;44896:14;-1:-1;;44892:28;;44876:49",
  "source": "pragma solidity ^0.5.2;\npragma experimental ABIEncoderV2;\n\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"./Devices.sol\";\n\ncontract PrepaidCardManager is SignerRole, Ownable , Devices {\n  using SafeMath for uint256;\n\n  event CardValidated(\n    address indexed owner,\n    uint256 cardId,\n    address indexed user\n  );\n\n  struct Card {\n    bytes32 hash;\n    uint256 cardId;  \n    uint256 tokens;\n    bool active;\n    address owner;\n    uint initialized;\n  }\n\n  mapping (uint256 => Card) private cards_;\n  mapping (bytes32 => uint256) private cardsByHash_;\n\n  modifier cardExists(uint256 _cardId) {\n    require(cards_[_cardId].initialized > 0, \"not_exist\");\n    _;\n  }\n  \n  constructor() public {}\n\n  function getCard(uint256 _cardId) cardExists(_cardId) public view returns(uint256 cardId, address owner, uint256 tokens, bool active)  {\n    return (cards_[_cardId].cardId, cards_[_cardId].owner, cards_[_cardId].tokens, cards_[_cardId].active);\n  }\n\n  function addCard(uint256 _cardId, uint256 _tokens, bytes32 _hash) onlyOwner public {\n    require(_tokens > 0, \"empty_tokens\");\n    require(_cardId > 0, \"no_valid_card_id\");\n    require(cards_[_cardId].initialized == 0, \"card_exist\");\n    require(cardsByHash_[_hash] == 0, \"duplicated_hash\");\n\n    _mint(address(this),_tokens);\n    Card memory newCard = Card(_hash, _cardId, _tokens, false, msg.sender, 1);\n    cards_[_cardId] = newCard;   \n    cardsByHash_[_hash] = _cardId;\n  }\n\n  function activateCard(uint256 _cardId) cardExists(_cardId) onlySigner public {\n    require(cards_[_cardId].active == false, \"not_activatable\");\n    cards_[_cardId].active=true;    \n  }\n\n  function validateCard(bytes memory _secret) public {\n    bytes32 hash = keccak256(_secret);\n    uint256 cardId = cardsByHash_[hash];\n    require(cardId > 0, \"hash_not_found\");\n    require(cards_[cardId].active == true, \"not_active\");\n    require(cards_[cardId].hash ==  hash, \"wrong_secret\");\n  \n    _transfer(address(this), msg.sender,cards_[cardId].tokens);\n    emit CardValidated(cards_[cardId].owner, cards_[cardId].cardId, msg.sender);\n  \n    delete cardsByHash_[hash];\n    delete cards_[cardId];\n  }\n\n}",
  "sourcePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/PrepaidCardManager.sol",
  "ast": {
    "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/PrepaidCardManager.sol",
    "exportedSymbols": {
      "PrepaidCardManager": [
        1374
      ]
    },
    "id": 1375,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1091,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "id": 1092,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:4"
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1093,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4734,
        "src": "59:78:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol",
        "id": 1094,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4606,
        "src": "138:88:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1095,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4843,
        "src": "227:82:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/Devices.sol",
        "file": "./Devices.sol",
        "id": 1096,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 1090,
        "src": "311:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1097,
              "name": "SignerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4605,
              "src": "367:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignerRole_$4605",
                "typeString": "contract SignerRole"
              }
            },
            "id": 1098,
            "nodeType": "InheritanceSpecifier",
            "src": "367:10:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1099,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4842,
              "src": "379:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4842",
                "typeString": "contract Ownable"
              }
            },
            "id": 1100,
            "nodeType": "InheritanceSpecifier",
            "src": "379:7:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1101,
              "name": "Devices",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1089,
              "src": "389:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Devices_$1089",
                "typeString": "contract Devices"
              }
            },
            "id": 1102,
            "nodeType": "InheritanceSpecifier",
            "src": "389:7:4"
          }
        ],
        "contractDependencies": [
          516,
          1089,
          1771,
          1914,
          1926,
          1948,
          4502,
          4605,
          4842,
          5225,
          5256,
          5314,
          5342,
          5411
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1374,
        "linearizedBaseContracts": [
          1374,
          1089,
          516,
          1914,
          1948,
          5256,
          5342,
          4502,
          5314,
          5225,
          5411,
          1926,
          1771,
          4842,
          4605
        ],
        "name": "PrepaidCardManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1105,
            "libraryName": {
              "contractScope": null,
              "id": 1103,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4733,
              "src": "407:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4733",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "401:27:4",
            "typeName": {
              "id": 1104,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "420:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1113,
            "name": "CardValidated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "457:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1109,
                  "indexed": false,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "484:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "indexed": true,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "504:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "451:77:4"
            },
            "src": "432:97:4"
          },
          {
            "canonicalName": "PrepaidCardManager.Card",
            "id": 1126,
            "members": [
              {
                "constant": false,
                "id": 1115,
                "name": "hash",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "551:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1114,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "551:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1117,
                "name": "cardId",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "569:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1116,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "569:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1119,
                "name": "tokens",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "591:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1118,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "591:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1121,
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "611:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1120,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "611:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1123,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "628:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1122,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "628:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1125,
                "name": "initialized",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "647:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1124,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "647:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Card",
            "nodeType": "StructDefinition",
            "scope": 1374,
            "src": "533:135:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1130,
            "name": "cards_",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "672:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card)"
            },
            "typeName": {
              "id": 1129,
              "keyType": {
                "id": 1127,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "681:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "672:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1128,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1126,
                "src": "692:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$1126_storage_ptr",
                  "typeString": "struct PrepaidCardManager.Card"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1134,
            "name": "cardsByHash_",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "716:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 1133,
              "keyType": {
                "id": 1131,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "725:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "716:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 1132,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "736:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1149,
              "nodeType": "Block",
              "src": "807:71:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1139,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "821:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1141,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1140,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "828:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "821:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1125,
                          "src": "821:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "851:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "821:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f6578697374",
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "854:11:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_523f997d98c93444ea35e2c5360d0525961260bc44d38981594693864d5dc39f",
                          "typeString": "literal_string \"not_exist\""
                        },
                        "value": "not_exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_523f997d98c93444ea35e2c5360d0525961260bc44d38981594693864d5dc39f",
                          "typeString": "literal_string \"not_exist\""
                        }
                      ],
                      "id": 1138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "813:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1147,
                  "nodeType": "ExpressionStatement",
                  "src": "813:53:4"
                },
                {
                  "id": 1148,
                  "nodeType": "PlaceholderStatement",
                  "src": "872:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 1150,
            "name": "cardExists",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "790:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "789:17:4"
            },
            "src": "770:108:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1153,
              "nodeType": "Block",
              "src": "905:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 1154,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:4"
            },
            "returnParameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "905:0:4"
            },
            "scope": 1374,
            "src": "884:23:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "1046:113:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1170,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1060:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1172,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1171,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1067:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1060:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cardId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1117,
                        "src": "1060:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1174,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1084:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1176,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1175,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1091:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1084:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1123,
                        "src": "1084:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1178,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1107:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1180,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1179,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1114:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1107:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1119,
                        "src": "1107:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1182,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1131:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1184,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1183,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1138:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1131:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1121,
                        "src": "1131:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1186,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1059:95:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,address,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 1169,
                  "id": 1187,
                  "nodeType": "Return",
                  "src": "1052:102:4"
                }
              ]
            },
            "documentation": null,
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1159,
                    "name": "_cardId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1156,
                    "src": "956:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1158,
                  "name": "cardExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1150,
                  "src": "945:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "945:19:4"
              }
            ],
            "name": "getCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "928:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:17:4"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1162,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "985:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1164,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1001:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1166,
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1016:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "name": "active",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1032:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "984:60:4"
            },
            "scope": 1374,
            "src": "911:248:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1264,
              "nodeType": "Block",
              "src": "1246:395:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1201,
                          "name": "_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "1260:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1270:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1260:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "656d7074795f746f6b656e73",
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1273:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb13cafb2118c5bb28e18830bb5cbbe1bfd46963cfcc272777b7a32c3876885c",
                          "typeString": "literal_string \"empty_tokens\""
                        },
                        "value": "empty_tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb13cafb2118c5bb28e18830bb5cbbe1bfd46963cfcc272777b7a32c3876885c",
                          "typeString": "literal_string \"empty_tokens\""
                        }
                      ],
                      "id": 1200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1252:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1208,
                          "name": "_cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1191,
                          "src": "1302:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1312:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1302:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f5f76616c69645f636172645f6964",
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1315:18:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b4c67f8be76e34068d204b82f0c05ded8513cb35ef65bdfccb745f5742cf16a",
                          "typeString": "literal_string \"no_valid_card_id\""
                        },
                        "value": "no_valid_card_id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b4c67f8be76e34068d204b82f0c05ded8513cb35ef65bdfccb745f5742cf16a",
                          "typeString": "literal_string \"no_valid_card_id\""
                        }
                      ],
                      "id": 1207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1294:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1215,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "1348:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1217,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1216,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "1355:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1348:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1218,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1125,
                          "src": "1348:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1379:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1348:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636172645f6578697374",
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1382:12:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b91b9fade96b22efa037ef0cfce2aca35512e4e284faa6e96fa461d2b5e6c898",
                          "typeString": "literal_string \"card_exist\""
                        },
                        "value": "card_exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b91b9fade96b22efa037ef0cfce2aca35512e4e284faa6e96fa461d2b5e6c898",
                          "typeString": "literal_string \"card_exist\""
                        }
                      ],
                      "id": 1214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1340:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1223,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:55:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1225,
                            "name": "cardsByHash_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "1409:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 1227,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1226,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "1422:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1409:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1432:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1409:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6475706c6963617465645f68617368",
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1435:17:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17094c899c2c07a998da10c057bd0fdf1262cf668ece5a711b5ac09ad35a478a",
                          "typeString": "literal_string \"duplicated_hash\""
                        },
                        "value": "duplicated_hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17094c899c2c07a998da10c057bd0fdf1262cf668ece5a711b5ac09ad35a478a",
                          "typeString": "literal_string \"duplicated_hash\""
                        }
                      ],
                      "id": 1224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1401:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1401:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1235,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6091,
                            "src": "1474:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          ],
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1466:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1466:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1237,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "1480:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1233,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5114,
                      "src": "1460:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:28:4"
                },
                {
                  "assignments": [
                    1241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1241,
                      "name": "newCard",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "1494:19:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_memory_ptr",
                        "typeString": "struct PrepaidCardManager.Card"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1240,
                        "name": "Card",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1126,
                        "src": "1494:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1126_storage_ptr",
                          "typeString": "struct PrepaidCardManager.Card"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1251,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1243,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "1521:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1244,
                        "name": "_cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "1528:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1245,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "1537:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 1246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1546:5:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1247,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6037,
                          "src": "1553:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1553:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1565:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1242,
                      "name": "Card",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "1516:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Card_$1126_storage_ptr_$",
                        "typeString": "type(struct PrepaidCardManager.Card storage pointer)"
                      }
                    },
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$1126_memory",
                      "typeString": "struct PrepaidCardManager.Card memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1494:73:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1252,
                        "name": "cards_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "1573:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                          "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                        }
                      },
                      "id": 1254,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1253,
                        "name": "_cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "1580:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1573:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_storage",
                        "typeString": "struct PrepaidCardManager.Card storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1255,
                      "name": "newCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1241,
                      "src": "1591:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_memory_ptr",
                        "typeString": "struct PrepaidCardManager.Card memory"
                      }
                    },
                    "src": "1573:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$1126_storage",
                      "typeString": "struct PrepaidCardManager.Card storage ref"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1258,
                        "name": "cardsByHash_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "1607:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1260,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1259,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "1620:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1607:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1261,
                      "name": "_cardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "1629:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1607:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:29:4"
                }
              ]
            },
            "documentation": null,
            "id": 1265,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1198,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1197,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4776,
                  "src": "1229:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1229:9:4"
              }
            ],
            "name": "addCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1180:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1197:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1214:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1179:49:4"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:4"
            },
            "scope": 1374,
            "src": "1163:478:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1292,
              "nodeType": "Block",
              "src": "1722:107:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1276,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "1736:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1278,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1277,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1267,
                              "src": "1743:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1736:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1121,
                          "src": "1736:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1762:5:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1736:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f6163746976617461626c65",
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1769:17:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8289227395bfb8cb9af2a39717217c9a1c5c9e1bd82e5646b55ecab8e36d7ff",
                          "typeString": "literal_string \"not_activatable\""
                        },
                        "value": "not_activatable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8289227395bfb8cb9af2a39717217c9a1c5c9e1bd82e5646b55ecab8e36d7ff",
                          "typeString": "literal_string \"not_activatable\""
                        }
                      ],
                      "id": 1275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1728:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1728:59:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:59:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1285,
                          "name": "cards_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1130,
                          "src": "1793:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                            "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                          }
                        },
                        "id": 1287,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1286,
                          "name": "_cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1267,
                          "src": "1800:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1793:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1126_storage",
                          "typeString": "struct PrepaidCardManager.Card storage ref"
                        }
                      },
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1121,
                      "src": "1793:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1816:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1793:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1291,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:27:4"
                }
              ]
            },
            "documentation": null,
            "id": 1293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1270,
                    "name": "_cardId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1267,
                    "src": "1695:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1271,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1269,
                  "name": "cardExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1150,
                  "src": "1684:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1684:19:4"
              },
              {
                "arguments": null,
                "id": 1273,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1272,
                  "name": "onlySigner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4538,
                  "src": "1704:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1704:10:4"
              }
            ],
            "name": "activateCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1267,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1667:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1666:17:4"
            },
            "returnParameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:0:4"
            },
            "scope": 1374,
            "src": "1645:184:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1372,
              "nodeType": "Block",
              "src": "1884:454:4",
              "statements": [
                {
                  "assignments": [
                    1299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1299,
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "scope": 1372,
                      "src": "1890:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1298,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1890:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1303,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1301,
                        "name": "_secret",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "1915:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1300,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6031,
                      "src": "1905:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1905:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1890:33:4"
                },
                {
                  "assignments": [
                    1305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1305,
                      "name": "cardId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1372,
                      "src": "1929:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1304,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1929:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1309,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1306,
                      "name": "cardsByHash_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1134,
                      "src": "1946:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 1308,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1307,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1299,
                      "src": "1959:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1946:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1929:35:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1311,
                          "name": "cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1305,
                          "src": "1978:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1987:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1978:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "686173685f6e6f745f666f756e64",
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1990:16:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_967846ff23a2795bf2636f5a5bb345095054347e4ec78b75c7363ede7e9096bf",
                          "typeString": "literal_string \"hash_not_found\""
                        },
                        "value": "hash_not_found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_967846ff23a2795bf2636f5a5bb345095054347e4ec78b75c7363ede7e9096bf",
                          "typeString": "literal_string \"hash_not_found\""
                        }
                      ],
                      "id": 1310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1970:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1316,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:37:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1318,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "2021:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1320,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1319,
                              "name": "cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "2028:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2021:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1121,
                          "src": "2021:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2046:4:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2021:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f616374697665",
                        "id": 1324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2052:12:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f936e29bffe40d9e27626ea77a4ee04fff5389b578200e4cadce51658981641",
                          "typeString": "literal_string \"not_active\""
                        },
                        "value": "not_active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f936e29bffe40d9e27626ea77a4ee04fff5389b578200e4cadce51658981641",
                          "typeString": "literal_string \"not_active\""
                        }
                      ],
                      "id": 1317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "2013:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1326,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1328,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "2079:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1330,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1329,
                              "name": "cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "2086:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2079:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1115,
                          "src": "2079:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1332,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1299,
                          "src": "2103:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2079:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77726f6e675f736563726574",
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2109:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b09677a4a459917962a32c91cf6b87d1f224e23bde6493cd5578dc54311ddd1",
                          "typeString": "literal_string \"wrong_secret\""
                        },
                        "value": "wrong_secret"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b09677a4a459917962a32c91cf6b87d1f224e23bde6493cd5578dc54311ddd1",
                          "typeString": "literal_string \"wrong_secret\""
                        }
                      ],
                      "id": 1327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "2071:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:53:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1339,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6091,
                            "src": "2151:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          ],
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2143:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2143:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1341,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6037,
                          "src": "2158:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2158:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1343,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2169:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1345,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1344,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2176:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2169:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1119,
                        "src": "2169:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1337,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1913
                      ],
                      "referencedDeclaration": 1913,
                      "src": "2133:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2133:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1348,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:58:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1350,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2216:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1352,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1351,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2223:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2216:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1123,
                        "src": "2216:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1354,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2238:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1356,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1355,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2245:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2238:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1357,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cardId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1117,
                        "src": "2238:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6037,
                          "src": "2261:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2261:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1349,
                      "name": "CardValidated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1113,
                      "src": "2202:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:70:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1361,
                  "nodeType": "EmitStatement",
                  "src": "2197:75:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2281:25:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1362,
                        "name": "cardsByHash_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "2288:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1364,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1363,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "2301:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2288:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1366,
                  "nodeType": "ExpressionStatement",
                  "src": "2281:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2312:21:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1367,
                        "name": "cards_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "2319:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                          "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                        }
                      },
                      "id": 1369,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1368,
                        "name": "cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1305,
                        "src": "2326:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2319:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_storage",
                        "typeString": "struct PrepaidCardManager.Card storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1371,
                  "nodeType": "ExpressionStatement",
                  "src": "2312:21:4"
                }
              ]
            },
            "documentation": null,
            "id": 1373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "name": "_secret",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "1855:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1854:22:4"
            },
            "returnParameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1884:0:4"
            },
            "scope": 1374,
            "src": "1833:505:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1375,
        "src": "336:2005:4"
      }
    ],
    "src": "0:2341:4"
  },
  "legacyAST": {
    "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/PrepaidCardManager.sol",
    "exportedSymbols": {
      "PrepaidCardManager": [
        1374
      ]
    },
    "id": 1375,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1091,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "id": 1092,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:4"
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1093,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4734,
        "src": "59:78:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/access/roles/SignerRole.sol",
        "id": 1094,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4606,
        "src": "138:88:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1095,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 4843,
        "src": "227:82:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jordi/ws/jordiescudero/bloomen-wallet/bloomen-wallet-truffle/contracts/bloomen/Devices.sol",
        "file": "./Devices.sol",
        "id": 1096,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 1090,
        "src": "311:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1097,
              "name": "SignerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4605,
              "src": "367:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignerRole_$4605",
                "typeString": "contract SignerRole"
              }
            },
            "id": 1098,
            "nodeType": "InheritanceSpecifier",
            "src": "367:10:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1099,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4842,
              "src": "379:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4842",
                "typeString": "contract Ownable"
              }
            },
            "id": 1100,
            "nodeType": "InheritanceSpecifier",
            "src": "379:7:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1101,
              "name": "Devices",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1089,
              "src": "389:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Devices_$1089",
                "typeString": "contract Devices"
              }
            },
            "id": 1102,
            "nodeType": "InheritanceSpecifier",
            "src": "389:7:4"
          }
        ],
        "contractDependencies": [
          516,
          1089,
          1771,
          1914,
          1926,
          1948,
          4502,
          4605,
          4842,
          5225,
          5256,
          5314,
          5342,
          5411
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1374,
        "linearizedBaseContracts": [
          1374,
          1089,
          516,
          1914,
          1948,
          5256,
          5342,
          4502,
          5314,
          5225,
          5411,
          1926,
          1771,
          4842,
          4605
        ],
        "name": "PrepaidCardManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1105,
            "libraryName": {
              "contractScope": null,
              "id": 1103,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4733,
              "src": "407:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4733",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "401:27:4",
            "typeName": {
              "id": 1104,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "420:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1113,
            "name": "CardValidated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "457:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1109,
                  "indexed": false,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "484:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "indexed": true,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "504:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "451:77:4"
            },
            "src": "432:97:4"
          },
          {
            "canonicalName": "PrepaidCardManager.Card",
            "id": 1126,
            "members": [
              {
                "constant": false,
                "id": 1115,
                "name": "hash",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "551:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1114,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "551:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1117,
                "name": "cardId",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "569:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1116,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "569:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1119,
                "name": "tokens",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "591:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1118,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "591:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1121,
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "611:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1120,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "611:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1123,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "628:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1122,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "628:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1125,
                "name": "initialized",
                "nodeType": "VariableDeclaration",
                "scope": 1126,
                "src": "647:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1124,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "647:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Card",
            "nodeType": "StructDefinition",
            "scope": 1374,
            "src": "533:135:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1130,
            "name": "cards_",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "672:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card)"
            },
            "typeName": {
              "id": 1129,
              "keyType": {
                "id": 1127,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "681:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "672:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1128,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1126,
                "src": "692:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$1126_storage_ptr",
                  "typeString": "struct PrepaidCardManager.Card"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1134,
            "name": "cardsByHash_",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "716:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 1133,
              "keyType": {
                "id": 1131,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "725:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "716:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 1132,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "736:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1149,
              "nodeType": "Block",
              "src": "807:71:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1139,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "821:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1141,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1140,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "828:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "821:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1125,
                          "src": "821:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "851:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "821:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f6578697374",
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "854:11:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_523f997d98c93444ea35e2c5360d0525961260bc44d38981594693864d5dc39f",
                          "typeString": "literal_string \"not_exist\""
                        },
                        "value": "not_exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_523f997d98c93444ea35e2c5360d0525961260bc44d38981594693864d5dc39f",
                          "typeString": "literal_string \"not_exist\""
                        }
                      ],
                      "id": 1138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "813:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1147,
                  "nodeType": "ExpressionStatement",
                  "src": "813:53:4"
                },
                {
                  "id": 1148,
                  "nodeType": "PlaceholderStatement",
                  "src": "872:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 1150,
            "name": "cardExists",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "790:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "789:17:4"
            },
            "src": "770:108:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1153,
              "nodeType": "Block",
              "src": "905:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 1154,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:4"
            },
            "returnParameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "905:0:4"
            },
            "scope": 1374,
            "src": "884:23:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "1046:113:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1170,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1060:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1172,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1171,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1067:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1060:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cardId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1117,
                        "src": "1060:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1174,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1084:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1176,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1175,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1091:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1084:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1123,
                        "src": "1084:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1178,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1107:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1180,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1179,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1114:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1107:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1119,
                        "src": "1107:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1182,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "1131:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1184,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1183,
                            "name": "_cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "1138:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1131:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1121,
                        "src": "1131:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1186,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1059:95:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,address,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 1169,
                  "id": 1187,
                  "nodeType": "Return",
                  "src": "1052:102:4"
                }
              ]
            },
            "documentation": null,
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1159,
                    "name": "_cardId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1156,
                    "src": "956:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1158,
                  "name": "cardExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1150,
                  "src": "945:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "945:19:4"
              }
            ],
            "name": "getCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "928:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:17:4"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1162,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "985:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1164,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1001:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1166,
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1016:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "name": "active",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1032:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "984:60:4"
            },
            "scope": 1374,
            "src": "911:248:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1264,
              "nodeType": "Block",
              "src": "1246:395:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1201,
                          "name": "_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "1260:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1270:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1260:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "656d7074795f746f6b656e73",
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1273:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb13cafb2118c5bb28e18830bb5cbbe1bfd46963cfcc272777b7a32c3876885c",
                          "typeString": "literal_string \"empty_tokens\""
                        },
                        "value": "empty_tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb13cafb2118c5bb28e18830bb5cbbe1bfd46963cfcc272777b7a32c3876885c",
                          "typeString": "literal_string \"empty_tokens\""
                        }
                      ],
                      "id": 1200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1252:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1208,
                          "name": "_cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1191,
                          "src": "1302:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1312:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1302:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f5f76616c69645f636172645f6964",
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1315:18:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b4c67f8be76e34068d204b82f0c05ded8513cb35ef65bdfccb745f5742cf16a",
                          "typeString": "literal_string \"no_valid_card_id\""
                        },
                        "value": "no_valid_card_id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b4c67f8be76e34068d204b82f0c05ded8513cb35ef65bdfccb745f5742cf16a",
                          "typeString": "literal_string \"no_valid_card_id\""
                        }
                      ],
                      "id": 1207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1294:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1215,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "1348:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1217,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1216,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "1355:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1348:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1218,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1125,
                          "src": "1348:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1379:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1348:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636172645f6578697374",
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1382:12:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b91b9fade96b22efa037ef0cfce2aca35512e4e284faa6e96fa461d2b5e6c898",
                          "typeString": "literal_string \"card_exist\""
                        },
                        "value": "card_exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b91b9fade96b22efa037ef0cfce2aca35512e4e284faa6e96fa461d2b5e6c898",
                          "typeString": "literal_string \"card_exist\""
                        }
                      ],
                      "id": 1214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1340:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1223,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:55:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1225,
                            "name": "cardsByHash_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "1409:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 1227,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1226,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "1422:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1409:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1432:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1409:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6475706c6963617465645f68617368",
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1435:17:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17094c899c2c07a998da10c057bd0fdf1262cf668ece5a711b5ac09ad35a478a",
                          "typeString": "literal_string \"duplicated_hash\""
                        },
                        "value": "duplicated_hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17094c899c2c07a998da10c057bd0fdf1262cf668ece5a711b5ac09ad35a478a",
                          "typeString": "literal_string \"duplicated_hash\""
                        }
                      ],
                      "id": 1224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1401:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1401:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1235,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6091,
                            "src": "1474:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          ],
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1466:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1466:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1237,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "1480:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1233,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5114,
                      "src": "1460:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:28:4"
                },
                {
                  "assignments": [
                    1241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1241,
                      "name": "newCard",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "1494:19:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_memory_ptr",
                        "typeString": "struct PrepaidCardManager.Card"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1240,
                        "name": "Card",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1126,
                        "src": "1494:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1126_storage_ptr",
                          "typeString": "struct PrepaidCardManager.Card"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1251,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1243,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "1521:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1244,
                        "name": "_cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "1528:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1245,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "1537:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 1246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1546:5:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1247,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6037,
                          "src": "1553:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1553:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1565:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1242,
                      "name": "Card",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "1516:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Card_$1126_storage_ptr_$",
                        "typeString": "type(struct PrepaidCardManager.Card storage pointer)"
                      }
                    },
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$1126_memory",
                      "typeString": "struct PrepaidCardManager.Card memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1494:73:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1252,
                        "name": "cards_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "1573:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                          "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                        }
                      },
                      "id": 1254,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1253,
                        "name": "_cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "1580:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1573:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_storage",
                        "typeString": "struct PrepaidCardManager.Card storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1255,
                      "name": "newCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1241,
                      "src": "1591:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_memory_ptr",
                        "typeString": "struct PrepaidCardManager.Card memory"
                      }
                    },
                    "src": "1573:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$1126_storage",
                      "typeString": "struct PrepaidCardManager.Card storage ref"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1258,
                        "name": "cardsByHash_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "1607:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1260,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1259,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "1620:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1607:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1261,
                      "name": "_cardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "1629:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1607:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:29:4"
                }
              ]
            },
            "documentation": null,
            "id": 1265,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1198,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1197,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4776,
                  "src": "1229:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1229:9:4"
              }
            ],
            "name": "addCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1180:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1197:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "1214:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1179:49:4"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:4"
            },
            "scope": 1374,
            "src": "1163:478:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1292,
              "nodeType": "Block",
              "src": "1722:107:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1276,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "1736:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1278,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1277,
                              "name": "_cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1267,
                              "src": "1743:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1736:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1121,
                          "src": "1736:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1762:5:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1736:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f6163746976617461626c65",
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1769:17:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8289227395bfb8cb9af2a39717217c9a1c5c9e1bd82e5646b55ecab8e36d7ff",
                          "typeString": "literal_string \"not_activatable\""
                        },
                        "value": "not_activatable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8289227395bfb8cb9af2a39717217c9a1c5c9e1bd82e5646b55ecab8e36d7ff",
                          "typeString": "literal_string \"not_activatable\""
                        }
                      ],
                      "id": 1275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1728:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1728:59:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:59:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1285,
                          "name": "cards_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1130,
                          "src": "1793:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                            "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                          }
                        },
                        "id": 1287,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1286,
                          "name": "_cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1267,
                          "src": "1800:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1793:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$1126_storage",
                          "typeString": "struct PrepaidCardManager.Card storage ref"
                        }
                      },
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1121,
                      "src": "1793:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1816:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1793:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1291,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:27:4"
                }
              ]
            },
            "documentation": null,
            "id": 1293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1270,
                    "name": "_cardId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1267,
                    "src": "1695:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1271,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1269,
                  "name": "cardExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1150,
                  "src": "1684:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1684:19:4"
              },
              {
                "arguments": null,
                "id": 1273,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1272,
                  "name": "onlySigner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4538,
                  "src": "1704:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1704:10:4"
              }
            ],
            "name": "activateCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1267,
                  "name": "_cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "1667:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1666:17:4"
            },
            "returnParameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:0:4"
            },
            "scope": 1374,
            "src": "1645:184:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1372,
              "nodeType": "Block",
              "src": "1884:454:4",
              "statements": [
                {
                  "assignments": [
                    1299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1299,
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "scope": 1372,
                      "src": "1890:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1298,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1890:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1303,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1301,
                        "name": "_secret",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "1915:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1300,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6031,
                      "src": "1905:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1905:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1890:33:4"
                },
                {
                  "assignments": [
                    1305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1305,
                      "name": "cardId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1372,
                      "src": "1929:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1304,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1929:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1309,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1306,
                      "name": "cardsByHash_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1134,
                      "src": "1946:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 1308,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1307,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1299,
                      "src": "1959:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1946:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1929:35:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1311,
                          "name": "cardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1305,
                          "src": "1978:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1987:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1978:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "686173685f6e6f745f666f756e64",
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1990:16:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_967846ff23a2795bf2636f5a5bb345095054347e4ec78b75c7363ede7e9096bf",
                          "typeString": "literal_string \"hash_not_found\""
                        },
                        "value": "hash_not_found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_967846ff23a2795bf2636f5a5bb345095054347e4ec78b75c7363ede7e9096bf",
                          "typeString": "literal_string \"hash_not_found\""
                        }
                      ],
                      "id": 1310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "1970:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1316,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:37:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1318,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "2021:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1320,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1319,
                              "name": "cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "2028:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2021:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1121,
                          "src": "2021:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2046:4:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2021:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f745f616374697665",
                        "id": 1324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2052:12:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f936e29bffe40d9e27626ea77a4ee04fff5389b578200e4cadce51658981641",
                          "typeString": "literal_string \"not_active\""
                        },
                        "value": "not_active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f936e29bffe40d9e27626ea77a4ee04fff5389b578200e4cadce51658981641",
                          "typeString": "literal_string \"not_active\""
                        }
                      ],
                      "id": 1317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "2013:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1326,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1328,
                              "name": "cards_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "2079:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                                "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                              }
                            },
                            "id": 1330,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1329,
                              "name": "cardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "2086:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2079:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$1126_storage",
                              "typeString": "struct PrepaidCardManager.Card storage ref"
                            }
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1115,
                          "src": "2079:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1332,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1299,
                          "src": "2103:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2079:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77726f6e675f736563726574",
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2109:14:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b09677a4a459917962a32c91cf6b87d1f224e23bde6493cd5578dc54311ddd1",
                          "typeString": "literal_string \"wrong_secret\""
                        },
                        "value": "wrong_secret"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b09677a4a459917962a32c91cf6b87d1f224e23bde6493cd5578dc54311ddd1",
                          "typeString": "literal_string \"wrong_secret\""
                        }
                      ],
                      "id": 1327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6040,
                        6041
                      ],
                      "referencedDeclaration": 6041,
                      "src": "2071:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:53:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1339,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6091,
                            "src": "2151:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrepaidCardManager_$1374",
                              "typeString": "contract PrepaidCardManager"
                            }
                          ],
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2143:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2143:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1341,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6037,
                          "src": "2158:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2158:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1343,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2169:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1345,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1344,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2176:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2169:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1119,
                        "src": "2169:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1337,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1913
                      ],
                      "referencedDeclaration": 1913,
                      "src": "2133:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2133:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1348,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:58:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1350,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2216:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1352,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1351,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2223:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2216:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1123,
                        "src": "2216:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1354,
                            "name": "cards_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2238:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                              "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                            }
                          },
                          "id": 1356,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1355,
                            "name": "cardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "2245:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2238:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$1126_storage",
                            "typeString": "struct PrepaidCardManager.Card storage ref"
                          }
                        },
                        "id": 1357,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cardId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1117,
                        "src": "2238:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6037,
                          "src": "2261:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2261:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1349,
                      "name": "CardValidated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1113,
                      "src": "2202:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:70:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1361,
                  "nodeType": "EmitStatement",
                  "src": "2197:75:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2281:25:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1362,
                        "name": "cardsByHash_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "2288:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1364,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1363,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "2301:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2288:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1366,
                  "nodeType": "ExpressionStatement",
                  "src": "2281:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2312:21:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1367,
                        "name": "cards_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "2319:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$1126_storage_$",
                          "typeString": "mapping(uint256 => struct PrepaidCardManager.Card storage ref)"
                        }
                      },
                      "id": 1369,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1368,
                        "name": "cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1305,
                        "src": "2326:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2319:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$1126_storage",
                        "typeString": "struct PrepaidCardManager.Card storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1371,
                  "nodeType": "ExpressionStatement",
                  "src": "2312:21:4"
                }
              ]
            },
            "documentation": null,
            "id": 1373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "name": "_secret",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "1855:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1854:22:4"
            },
            "returnParameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1884:0:4"
            },
            "scope": 1374,
            "src": "1833:505:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1375,
        "src": "336:2005:4"
      }
    ],
    "src": "0:2341:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-16T09:48:37.239Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The account whose tokens will be burned.",
          "value": "uint256 The amount of token to be burned."
        }
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}